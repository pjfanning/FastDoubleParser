/Library/Java/JavaVirtualMachines/jdk-18.jdk/Contents/Home/bin/java -Dvisualvm.id=35132698400342 -XX:+UnlockExperimentalVMOptions -XX:+UnlockDiagnosticVMOptions -XX:PrintAssemblyOptions=intel -XX:CompileCommand=print,*FastDoubleParser*.* -javaagent:/Applications/IntelliJ IDEA CE.app/Contents/lib/idea_rt.jar=51261:/Applications/IntelliJ IDEA CE.app/Contents/bin -Dfile.encoding=UTF-8 -classpath /Users/Shared/Developer/Java/FastDoubleParser/github/FastDoubleParser/lib/jmh-core-1.28.jar:/Users/Shared/Developer/Java/FastDoubleParser/github/FastDoubleParser/lib/jopt-simple-4.6.jar:/Users/Shared/Developer/Java/FastDoubleParser/github/FastDoubleParser/lib/commons-math3-3.2.jar:/Users/Shared/Developer/Java/FastDoubleParser/github/FastDoubleParser/lib/jmh-generator-annprocess-1.28.jar:/Users/Shared/Developer/Java/FastDoubleParser/github/FastDoubleParser/lib/junit-jupiter-5.7.1.jar:/Users/Shared/Developer/Java/FastDoubleParser/github/FastDoubleParser/lib/junit-jupiter-api-5.7.1.jar:/Users/Shared/Developer/Java/FastDoubleParser/github/FastDoubleParser/lib/apiguardian-api-1.1.0.jar:/Users/Shared/Developer/Java/FastDoubleParser/github/FastDoubleParser/lib/opentest4j-1.2.0.jar:/Users/Shared/Developer/Java/FastDoubleParser/github/FastDoubleParser/lib/junit-platform-commons-1.7.1.jar:/Users/Shared/Developer/Java/FastDoubleParser/github/FastDoubleParser/lib/junit-jupiter-params-5.7.1.jar:/Users/Shared/Developer/Java/FastDoubleParser/github/FastDoubleParser/lib/junit-jupiter-engine-5.7.1.jar:/Users/Shared/Developer/Java/FastDoubleParser/github/FastDoubleParser/lib/junit-platform-engine-1.7.1.jar -p /Users/Shared/Developer/Java/FastDoubleParser/github/FastDoubleParser/out/production/FastDoubleParserDemo:/Users/Shared/Developer/Java/FastDoubleParser/github/FastDoubleParser/out/production/FastDoubleParser -m ch.randelshofer.fastdoubleparserdemo/ch.randelshofer.fastdoubleparserdemo.Main
CompileCommand: print *FastDoubleParser*.* bool print = true
WARNING: Using incubator modules: jdk.incubator.vector
Intel(R) Core(TM) i7-8700B CPU @ 3.20GHz SIMD-256
x86_64, Mac OS X, 12.1, 12
OpenJDK 64-Bit Server VM, Oracle Corporation, 18-ea+30-2029
-XX:+UnlockExperimentalVMOptions, -XX:+UnlockDiagnosticVMOptions, -XX:PrintAssemblyOptions=intel, -XX:CompileCommand=print,*FastDoubleParser*.*

parsing random numbers in the range [0,1)

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     248  518       3       ch.randelshofer.fastdoubleparser.FastDoubleParser::isDigit (18 bytes)
 total in heap  [0x000000011ba2d190,0x000000011ba2d4e8] = 856
 relocation     [0x000000011ba2d2f0,0x000000011ba2d320] = 48
 main code      [0x000000011ba2d320,0x000000011ba2d460] = 320
 stub code      [0x000000011ba2d460,0x000000011ba2d490] = 48
 oops           [0x000000011ba2d490,0x000000011ba2d498] = 8
 metadata       [0x000000011ba2d498,0x000000011ba2d4a0] = 8
 scopes data    [0x000000011ba2d4a0,0x000000011ba2d4b0] = 16
 scopes pcs     [0x000000011ba2d4b0,0x000000011ba2d4e0] = 48
 dependencies   [0x000000011ba2d4e0,0x000000011ba2d4e8] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013a80dd50} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser'
  # parm0:    rsi       = char
  #           [sp+0x40]  (sp of caller)
  0x000000011ba2d320:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ba2d327:   push   rbp
  0x000000011ba2d328:   sub    rsp,0x30
  0x000000011ba2d32c:   movabs rax,0x13a837bb0              ;   {metadata(method data for {method} {0x000000013a80dd50} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba2d336:   mov    edi,DWORD PTR [rax+0xac]
  0x000000011ba2d33c:   add    edi,0x2
  0x000000011ba2d33f:   mov    DWORD PTR [rax+0xac],edi
  0x000000011ba2d345:   and    edi,0x7fe
  0x000000011ba2d34b:   cmp    edi,0x0
  0x000000011ba2d34e:   je     0x000000011ba2d3fb
  0x000000011ba2d354:   cmp    esi,0x30
  0x000000011ba2d357:   movabs rax,0x13a837bb0              ;   {metadata(method data for {method} {0x000000013a80dd50} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba2d361:   movabs rdi,0xf0
  0x000000011ba2d36b:   jl     0x000000011ba2d37b
  0x000000011ba2d371:   movabs rdi,0x100
  0x000000011ba2d37b:   mov    rbx,QWORD PTR [rax+rdi*1]
  0x000000011ba2d37f:   lea    rbx,[rbx+0x1]
  0x000000011ba2d383:   mov    QWORD PTR [rax+rdi*1],rbx
  0x000000011ba2d387:   jl     0x000000011ba2d3c6
  0x000000011ba2d38d:   cmp    esi,0x39
  0x000000011ba2d390:   movabs rax,0x13a837bb0              ;   {metadata(method data for {method} {0x000000013a80dd50} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba2d39a:   movabs rsi,0x120
  0x000000011ba2d3a4:   jle    0x000000011ba2d3b4
  0x000000011ba2d3aa:   movabs rsi,0x110
  0x000000011ba2d3b4:   mov    rdi,QWORD PTR [rax+rsi*1]
  0x000000011ba2d3b8:   lea    rdi,[rdi+0x1]
  0x000000011ba2d3bc:   mov    QWORD PTR [rax+rsi*1],rdi
  0x000000011ba2d3c0:   jle    0x000000011ba2d3d0
  0x000000011ba2d3c6:   mov    eax,0x0
  0x000000011ba2d3cb:   jmp    0x000000011ba2d3e5
  0x000000011ba2d3d0:   movabs rax,0x13a837bb0              ;   {metadata(method data for {method} {0x000000013a80dd50} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba2d3da:   inc    DWORD PTR [rax+0x130]
  0x000000011ba2d3e0:   mov    eax,0x1
  0x000000011ba2d3e5:   and    eax,0x1
  0x000000011ba2d3e8:   add    rsp,0x30
  0x000000011ba2d3ec:   pop    rbp
  0x000000011ba2d3ed:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x000000011ba2d3f4:   ja     0x000000011ba2d41c
  0x000000011ba2d3fa:   ret
  0x000000011ba2d3fb:   movabs r10,0x13a80dd50              ;   {metadata({method} {0x000000013a80dd50} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba2d405:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011ba2d40a:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011ba2d412:   call   0x000000011b4db500           ; ImmutableOopMap {}
                                                            ;*synchronization entry
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::isDigit@-1 (line 79)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba2d417:   jmp    0x000000011ba2d354
  0x000000011ba2d41c:   movabs r10,0x11ba2d3ed              ;   {internal_word}
  0x000000011ba2d426:   mov    QWORD PTR [r15+0x350],r10
  0x000000011ba2d42d:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x000000011ba2d432:   nop
  0x000000011ba2d433:   nop
  0x000000011ba2d434:   mov    rax,QWORD PTR [r15+0x3c8]
  0x000000011ba2d43b:   mov    QWORD PTR [r15+0x3c8],0x0
  0x000000011ba2d446:   mov    QWORD PTR [r15+0x3d0],0x0
  0x000000011ba2d451:   add    rsp,0x30
  0x000000011ba2d455:   pop    rbp
  0x000000011ba2d456:   jmp    0x000000011b446f00           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba2d45b:   hlt
  0x000000011ba2d45c:   hlt
  0x000000011ba2d45d:   hlt
  0x000000011ba2d45e:   hlt
  0x000000011ba2d45f:   hlt
[Exception Handler]
  0x000000011ba2d460:   call   0x000000011b4d7900           ;   {no_reloc}
  0x000000011ba2d465:   movabs rdi,0x10db45fc1              ;   {external_word}
  0x000000011ba2d46f:   and    rsp,0xfffffffffffffff0
  0x000000011ba2d473:   call   0x000000010d7f0290           ;   {runtime_call _ZN14MacroAssembler7debug64EPcxPx}
  0x000000011ba2d478:   hlt
[Deopt Handler Code]
  0x000000011ba2d479:   movabs r10,0x11ba2d479              ;   {section_word}
  0x000000011ba2d483:   push   r10
  0x000000011ba2d485:   jmp    0x000000011b4333a0           ;   {runtime_call DeoptimizationBlob}
  0x000000011ba2d48a:   hlt
  0x000000011ba2d48b:   hlt
  0x000000011ba2d48c:   hlt
  0x000000011ba2d48d:   hlt
  0x000000011ba2d48e:   hlt
  0x000000011ba2d48f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     249  519       3       ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::isDigit (18 bytes)
 total in heap  [0x000000011ba2d510,0x000000011ba2d868] = 856
 relocation     [0x000000011ba2d670,0x000000011ba2d6a0] = 48
 main code      [0x000000011ba2d6a0,0x000000011ba2d7e0] = 320
 stub code      [0x000000011ba2d7e0,0x000000011ba2d810] = 48
 oops           [0x000000011ba2d810,0x000000011ba2d818] = 8
 metadata       [0x000000011ba2d818,0x000000011ba2d820] = 8
 scopes data    [0x000000011ba2d820,0x000000011ba2d830] = 16
 scopes pcs     [0x000000011ba2d830,0x000000011ba2d860] = 48
 dependencies   [0x000000011ba2d860,0x000000011ba2d868] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013a82eb30} 'isDigit' '(B)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray'
  # parm0:    rsi       = byte
  #           [sp+0x40]  (sp of caller)
  0x000000011ba2d6a0:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ba2d6a7:   push   rbp
  0x000000011ba2d6a8:   sub    rsp,0x30
  0x000000011ba2d6ac:   movabs rax,0x13a837d10              ;   {metadata(method data for {method} {0x000000013a82eb30} 'isDigit' '(B)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba2d6b6:   mov    edi,DWORD PTR [rax+0xac]
  0x000000011ba2d6bc:   add    edi,0x2
  0x000000011ba2d6bf:   mov    DWORD PTR [rax+0xac],edi
  0x000000011ba2d6c5:   and    edi,0x7fe
  0x000000011ba2d6cb:   cmp    edi,0x0
  0x000000011ba2d6ce:   je     0x000000011ba2d77b
  0x000000011ba2d6d4:   cmp    esi,0x30
  0x000000011ba2d6d7:   movabs rax,0x13a837d10              ;   {metadata(method data for {method} {0x000000013a82eb30} 'isDigit' '(B)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba2d6e1:   movabs rdi,0xf0
  0x000000011ba2d6eb:   jl     0x000000011ba2d6fb
  0x000000011ba2d6f1:   movabs rdi,0x100
  0x000000011ba2d6fb:   mov    rbx,QWORD PTR [rax+rdi*1]
  0x000000011ba2d6ff:   lea    rbx,[rbx+0x1]
  0x000000011ba2d703:   mov    QWORD PTR [rax+rdi*1],rbx
  0x000000011ba2d707:   jl     0x000000011ba2d746
  0x000000011ba2d70d:   cmp    esi,0x39
  0x000000011ba2d710:   movabs rax,0x13a837d10              ;   {metadata(method data for {method} {0x000000013a82eb30} 'isDigit' '(B)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba2d71a:   movabs rsi,0x120
  0x000000011ba2d724:   jle    0x000000011ba2d734
  0x000000011ba2d72a:   movabs rsi,0x110
  0x000000011ba2d734:   mov    rdi,QWORD PTR [rax+rsi*1]
  0x000000011ba2d738:   lea    rdi,[rdi+0x1]
  0x000000011ba2d73c:   mov    QWORD PTR [rax+rsi*1],rdi
  0x000000011ba2d740:   jle    0x000000011ba2d750
  0x000000011ba2d746:   mov    eax,0x0
  0x000000011ba2d74b:   jmp    0x000000011ba2d765
  0x000000011ba2d750:   movabs rax,0x13a837d10              ;   {metadata(method data for {method} {0x000000013a82eb30} 'isDigit' '(B)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba2d75a:   inc    DWORD PTR [rax+0x130]
  0x000000011ba2d760:   mov    eax,0x1
  0x000000011ba2d765:   and    eax,0x1
  0x000000011ba2d768:   add    rsp,0x30
  0x000000011ba2d76c:   pop    rbp
  0x000000011ba2d76d:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x000000011ba2d774:   ja     0x000000011ba2d79c
  0x000000011ba2d77a:   ret
  0x000000011ba2d77b:   movabs r10,0x13a82eb30              ;   {metadata({method} {0x000000013a82eb30} 'isDigit' '(B)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba2d785:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011ba2d78a:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011ba2d792:   call   0x000000011b4db500           ; ImmutableOopMap {}
                                                            ;*synchronization entry
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::isDigit@-1 (line 100)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba2d797:   jmp    0x000000011ba2d6d4
  0x000000011ba2d79c:   movabs r10,0x11ba2d76d              ;   {internal_word}
  0x000000011ba2d7a6:   mov    QWORD PTR [r15+0x350],r10
  0x000000011ba2d7ad:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x000000011ba2d7b2:   nop
  0x000000011ba2d7b3:   nop
  0x000000011ba2d7b4:   mov    rax,QWORD PTR [r15+0x3c8]
  0x000000011ba2d7bb:   mov    QWORD PTR [r15+0x3c8],0x0
  0x000000011ba2d7c6:   mov    QWORD PTR [r15+0x3d0],0x0
  0x000000011ba2d7d1:   add    rsp,0x30
  0x000000011ba2d7d5:   pop    rbp
  0x000000011ba2d7d6:   jmp    0x000000011b446f00           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba2d7db:   hlt
  0x000000011ba2d7dc:   hlt
  0x000000011ba2d7dd:   hlt
  0x000000011ba2d7de:   hlt
  0x000000011ba2d7df:   hlt
[Exception Handler]
  0x000000011ba2d7e0:   call   0x000000011b4d7900           ;   {no_reloc}
  0x000000011ba2d7e5:   movabs rdi,0x10db45fc1              ;   {external_word}
  0x000000011ba2d7ef:   and    rsp,0xfffffffffffffff0
  0x000000011ba2d7f3:   call   0x000000010d7f0290           ;   {runtime_call _ZN14MacroAssembler7debug64EPcxPx}
  0x000000011ba2d7f8:   hlt
[Deopt Handler Code]
  0x000000011ba2d7f9:   movabs r10,0x11ba2d7f9              ;   {section_word}
  0x000000011ba2d803:   push   r10
  0x000000011ba2d805:   jmp    0x000000011b4333a0           ;   {runtime_call DeoptimizationBlob}
  0x000000011ba2d80a:   hlt
  0x000000011ba2d80b:   hlt
  0x000000011ba2d80c:   hlt
  0x000000011ba2d80d:   hlt
  0x000000011ba2d80e:   hlt
  0x000000011ba2d80f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     252  532       4       ch.randelshofer.fastdoubleparser.FastDoubleParser::isDigit (18 bytes)
 total in heap  [0x0000000122edb910,0x0000000122edbb50] = 576
 relocation     [0x0000000122edba70,0x0000000122edba80] = 16
 main code      [0x0000000122edba80,0x0000000122edbae0] = 96
 stub code      [0x0000000122edbae0,0x0000000122edbaf8] = 24
 oops           [0x0000000122edbaf8,0x0000000122edbb00] = 8
 metadata       [0x0000000122edbb00,0x0000000122edbb08] = 8
 scopes data    [0x0000000122edbb08,0x0000000122edbb18] = 16
 scopes pcs     [0x0000000122edbb18,0x0000000122edbb48] = 48
 dependencies   [0x0000000122edbb48,0x0000000122edbb50] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013a80dd50} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser'
  # parm0:    rsi       = char
  #           [sp+0x20]  (sp of caller)
  0x0000000122edba80:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000122edba87:   push   rbp
  0x0000000122edba88:   sub    rsp,0x10
  0x0000000122edba8c:   cmp    esi,0x30
  0x0000000122edba8f:   jl     0x0000000122edbaae
  0x0000000122edba91:   cmp    esi,0x39
  0x0000000122edba94:   jg     0x0000000122edbab2
  0x0000000122edba96:   mov    eax,0x1
  0x0000000122edba9b:   add    rsp,0x10
  0x0000000122edba9f:   pop    rbp
  0x0000000122edbaa0:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x0000000122edbaa7:   ja     0x0000000122edbac0
  0x0000000122edbaad:   ret
  0x0000000122edbaae:   xor    eax,eax
  0x0000000122edbab0:   jmp    0x0000000122edba9b
  0x0000000122edbab2:   mov    ebp,esi
  0x0000000122edbab4:   mov    esi,0xffffff45
  0x0000000122edbab9:   xchg   ax,ax
  0x0000000122edbabb:   call   0x000000011b433000           ; ImmutableOopMap {}
                                                            ;*if_icmpgt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::isDigit@9 (line 79)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122edbac0:   movabs r10,0x122edbaa0              ;   {internal_word}
  0x0000000122edbaca:   mov    QWORD PTR [r15+0x350],r10
  0x0000000122edbad1:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x0000000122edbad6:   hlt
  0x0000000122edbad7:   hlt
  0x0000000122edbad8:   hlt
  0x0000000122edbad9:   hlt
  0x0000000122edbada:   hlt
  0x0000000122edbadb:   hlt
  0x0000000122edbadc:   hlt
  0x0000000122edbadd:   hlt
  0x0000000122edbade:   hlt
  0x0000000122edbadf:   hlt
[Exception Handler]
  0x0000000122edbae0:   jmp    0x000000011b447880           ;   {no_reloc}
[Deopt Handler Code]
  0x0000000122edbae5:   call   0x0000000122edbaea
  0x0000000122edbaea:   sub    QWORD PTR [rsp],0x5
  0x0000000122edbaef:   jmp    0x000000011b4333a0           ;   {runtime_call DeoptimizationBlob}
  0x0000000122edbaf4:   hlt
  0x0000000122edbaf5:   hlt
  0x0000000122edbaf6:   hlt
  0x0000000122edbaf7:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     255  531       3       ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral (488 bytes)
 total in heap  [0x000000011ba36e90,0x000000011ba398e0] = 10832
 relocation     [0x000000011ba36ff0,0x000000011ba371f8] = 520
 main code      [0x000000011ba37200,0x000000011ba38e40] = 7232
 stub code      [0x000000011ba38e40,0x000000011ba38f70] = 304
 oops           [0x000000011ba38f70,0x000000011ba38f78] = 8
 metadata       [0x000000011ba38f78,0x000000011ba38fb0] = 56
 scopes data    [0x000000011ba38fb0,0x000000011ba39568] = 1464
 scopes pcs     [0x000000011ba39568,0x000000011ba39868] = 768
 dependencies   [0x000000011ba39868,0x000000011ba39870] = 8
 nul chk table  [0x000000011ba39870,0x000000011ba398e0] = 112

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser'
  # parm0:    rsi:rsi   = 'java/lang/CharSequence'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  # parm3:    r8        = int
  # parm4:    r9        = boolean
  # parm5:    rdi       = boolean
  #           [sp+0x140]  (sp of caller)
  0x000000011ba37200:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ba37207:   push   rbp
  0x000000011ba37208:   sub    rsp,0x130
  0x000000011ba3720f:   mov    QWORD PTR [rsp+0xc0],rsi
  0x000000011ba37217:   mov    DWORD PTR [rsp+0xcc],edx
  0x000000011ba3721e:   mov    DWORD PTR [rsp+0xd4],ecx
  0x000000011ba37225:   mov    DWORD PTR [rsp+0xc8],r8d
  0x000000011ba3722d:   mov    DWORD PTR [rsp+0xd0],r9d
  0x000000011ba37235:   mov    DWORD PTR [rsp+0xb0],edi
  0x000000011ba3723c:   movabs rbx,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba37246:   mov    eax,DWORD PTR [rbx+0xac]
  0x000000011ba3724c:   add    eax,0x2
  0x000000011ba3724f:   mov    DWORD PTR [rbx+0xac],eax
  0x000000011ba37255:   and    eax,0x7fe
  0x000000011ba3725b:   cmp    eax,0x0
  0x000000011ba3725e:   je     0x000000011ba38c0c
  0x000000011ba37264:   mov    rbx,rdx
  0x000000011ba37267:   mov    eax,0x0
  0x000000011ba3726c:   mov    r11d,0xffffffff
  0x000000011ba37272:   movabs r13,0x0
  0x000000011ba3727c:   mov    DWORD PTR [rsp+0xa8],eax
  0x000000011ba37283:   mov    DWORD PTR [rsp+0xb4],r11d
  0x000000011ba3728b:   mov    QWORD PTR [rsp+0xb8],r13
  0x000000011ba37293:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011ba37298:   cmp    ebx,r8d
  0x000000011ba3729b:   movabs r14,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba372a5:   movabs rax,0xf0
  0x000000011ba372af:   jge    0x000000011ba372bf
  0x000000011ba372b5:   movabs rax,0x100
  0x000000011ba372bf:   mov    DWORD PTR [rsp+0xac],ebx
  0x000000011ba372c6:   mov    rbx,QWORD PTR [r14+rax*1]
  0x000000011ba372ca:   lea    rbx,[rbx+0x1]
  0x000000011ba372ce:   mov    QWORD PTR [r14+rax*1],rbx
  0x000000011ba372d2:   jge    0x000000011ba375f4
  0x000000011ba372d8:   mov    ebx,DWORD PTR [rsp+0xac]
  0x000000011ba372df:   cmp    rax,QWORD PTR [rsi]          ; implicit exception: dispatches to 0x000000011ba38c2d
  0x000000011ba372e2:   mov    rax,rsi
  0x000000011ba372e5:   movabs r14,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba372ef:   mov    eax,DWORD PTR [rax+0x8]
  0x000000011ba372f2:   movabs r10,0x800000000
  0x000000011ba372fc:   add    rax,r10
  0x000000011ba372ff:   cmp    rax,QWORD PTR [r14+0x120]
  0x000000011ba37306:   jne    0x000000011ba37315
  0x000000011ba37308:   add    QWORD PTR [r14+0x128],0x1
  0x000000011ba37310:   jmp    0x000000011ba3737b
  0x000000011ba37315:   cmp    rax,QWORD PTR [r14+0x130]
  0x000000011ba3731c:   jne    0x000000011ba3732b
  0x000000011ba3731e:   add    QWORD PTR [r14+0x138],0x1
  0x000000011ba37326:   jmp    0x000000011ba3737b
  0x000000011ba3732b:   cmp    QWORD PTR [r14+0x120],0x0
  0x000000011ba37336:   jne    0x000000011ba3734f
  0x000000011ba37338:   mov    QWORD PTR [r14+0x120],rax
  0x000000011ba3733f:   mov    QWORD PTR [r14+0x128],0x1
  0x000000011ba3734a:   jmp    0x000000011ba3737b
  0x000000011ba3734f:   cmp    QWORD PTR [r14+0x130],0x0
  0x000000011ba3735a:   jne    0x000000011ba37373
  0x000000011ba3735c:   mov    QWORD PTR [r14+0x130],rax
  0x000000011ba37363:   mov    QWORD PTR [r14+0x138],0x1
  0x000000011ba3736e:   jmp    0x000000011ba3737b
  0x000000011ba37373:   add    QWORD PTR [r14+0x110],0x1
  0x000000011ba3737b:   mov    rdx,rbx
  0x000000011ba3737e:   mov    rax,rsi
  0x000000011ba37381:   mov    rsi,rax
  0x000000011ba37384:   mov    DWORD PTR [rsp+0xac],ebx
  0x000000011ba3738b:   xchg   ax,ax
  0x000000011ba3738d:   movabs rax,0x800008340
  0x000000011ba37397:   call   0x0000000122eb0620           ; ImmutableOopMap {[192]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@22 (line 326)
                                                            ;   {virtual_call}
  0x000000011ba3739c:   mov    rdx,rax
  0x000000011ba3739f:   movabs rax,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba373a9:   add    QWORD PTR [rax+0x148],0x1
  0x000000011ba373b1:   movabs rax,0x13a837bb0              ;   {metadata(method data for {method} {0x000000013a80dd50} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba373bb:   mov    esi,DWORD PTR [rax+0xac]
  0x000000011ba373c1:   add    esi,0x2
  0x000000011ba373c4:   mov    DWORD PTR [rax+0xac],esi
  0x000000011ba373ca:   and    esi,0x1ffffe
  0x000000011ba373d0:   cmp    esi,0x0
  0x000000011ba373d3:   je     0x000000011ba38c32
  0x000000011ba373d9:   cmp    edx,0x30
  0x000000011ba373dc:   movabs rax,0x13a837bb0              ;   {metadata(method data for {method} {0x000000013a80dd50} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba373e6:   movabs rsi,0xf0
  0x000000011ba373f0:   jl     0x000000011ba37400
  0x000000011ba373f6:   movabs rsi,0x100
  0x000000011ba37400:   mov    rdi,QWORD PTR [rax+rsi*1]
  0x000000011ba37404:   lea    rdi,[rdi+0x1]
  0x000000011ba37408:   mov    QWORD PTR [rax+rsi*1],rdi
  0x000000011ba3740c:   jl     0x000000011ba3744b
  0x000000011ba37412:   cmp    edx,0x39
  0x000000011ba37415:   movabs rax,0x13a837bb0              ;   {metadata(method data for {method} {0x000000013a80dd50} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba3741f:   movabs rsi,0x120
  0x000000011ba37429:   jle    0x000000011ba37439
  0x000000011ba3742f:   movabs rsi,0x110
  0x000000011ba37439:   mov    rdi,QWORD PTR [rax+rsi*1]
  0x000000011ba3743d:   lea    rdi,[rdi+0x1]
  0x000000011ba37441:   mov    QWORD PTR [rax+rsi*1],rdi
  0x000000011ba37445:   jle    0x000000011ba37455
  0x000000011ba3744b:   mov    eax,0x0
  0x000000011ba37450:   jmp    0x000000011ba3746a
  0x000000011ba37455:   movabs rax,0x13a837bb0              ;   {metadata(method data for {method} {0x000000013a80dd50} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba3745f:   inc    DWORD PTR [rax+0x130]
  0x000000011ba37465:   mov    eax,0x1
  0x000000011ba3746a:   and    eax,0x1
  0x000000011ba3746d:   cmp    eax,0x0
  0x000000011ba37470:   movabs rax,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba3747a:   movabs rsi,0x158
  0x000000011ba37484:   je     0x000000011ba37494
  0x000000011ba3748a:   movabs rsi,0x168
  0x000000011ba37494:   mov    rdi,QWORD PTR [rax+rsi*1]
  0x000000011ba37498:   lea    rdi,[rdi+0x1]
  0x000000011ba3749c:   mov    QWORD PTR [rax+rsi*1],rdi
  0x000000011ba374a0:   je     0x000000011ba374ef
  0x000000011ba374a6:   movabs rax,0xa
  0x000000011ba374b0:   mov    rsi,rax
  0x000000011ba374b3:   mov    rax,QWORD PTR [rsp+0xb8]
  0x000000011ba374bb:   imul   rax,rsi
  0x000000011ba374bf:   movsxd rsi,edx
  0x000000011ba374c2:   add    rax,rsi
  0x000000011ba374c5:   movabs r10,0x30
  0x000000011ba374cf:   sub    rax,r10
  0x000000011ba374d2:   movabs rsi,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba374dc:   inc    DWORD PTR [rsi+0x178]
  0x000000011ba374e2:   mov    r11d,DWORD PTR [rsp+0xb4]
  0x000000011ba374ea:   jmp    0x000000011ba3757a
  0x000000011ba374ef:   cmp    edx,0x2e
  0x000000011ba374f2:   movabs rsi,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba374fc:   movabs rdi,0x190
  0x000000011ba37506:   jne    0x000000011ba37516
  0x000000011ba3750c:   movabs rdi,0x1a0
  0x000000011ba37516:   mov    rbx,QWORD PTR [rsi+rdi*1]
  0x000000011ba3751a:   lea    rbx,[rbx+0x1]
  0x000000011ba3751e:   mov    QWORD PTR [rsi+rdi*1],rbx
  0x000000011ba37522:   jne    0x000000011ba375fb
  0x000000011ba37528:   mov    r11d,DWORD PTR [rsp+0xb4]
  0x000000011ba37530:   cmp    r11d,0xffffffff
  0x000000011ba37534:   movabs rsi,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba3753e:   movabs rdi,0x1c0
  0x000000011ba37548:   jne    0x000000011ba37558
  0x000000011ba3754e:   movabs rdi,0x1b0
  0x000000011ba37558:   mov    rbx,QWORD PTR [rsi+rdi*1]
  0x000000011ba3755c:   lea    rbx,[rbx+0x1]
  0x000000011ba37560:   mov    QWORD PTR [rsi+rdi*1],rbx
  0x000000011ba37564:   jne    0x000000011ba38bcc
  0x000000011ba3756a:   mov    r11d,DWORD PTR [rsp+0xac]
  0x000000011ba37572:   mov    rax,QWORD PTR [rsp+0xb8]
  0x000000011ba3757a:   mov    ebx,DWORD PTR [rsp+0xac]
  0x000000011ba37581:   inc    ebx
  0x000000011ba37583:   movabs rsi,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba3758d:   mov    edi,DWORD PTR [rsi+0xb0]
  0x000000011ba37593:   add    edi,0x2
  0x000000011ba37596:   mov    DWORD PTR [rsi+0xb0],edi
  0x000000011ba3759c:   and    edi,0x3ffe
  0x000000011ba375a2:   cmp    edi,0x0
  0x000000011ba375a5:   je     0x000000011ba38c53
  0x000000011ba375ab:   mov    r10,QWORD PTR [r15+0x340]    ; ImmutableOopMap {[192]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@82 (line 325)
  0x000000011ba375b2:   test   DWORD PTR [r10],eax          ;   {poll}
  0x000000011ba375b5:   movabs rsi,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba375bf:   inc    DWORD PTR [rsi+0x1e0]
  0x000000011ba375c5:   mov    r13,rax
  0x000000011ba375c8:   mov    DWORD PTR [rsp+0xa8],edx
  0x000000011ba375cf:   mov    DWORD PTR [rsp+0xb4],r11d
  0x000000011ba375d7:   mov    QWORD PTR [rsp+0xb8],r13
  0x000000011ba375df:   mov    r8d,DWORD PTR [rsp+0xc8]
  0x000000011ba375e7:   mov    rsi,QWORD PTR [rsp+0xc0]
  0x000000011ba375ef:   jmp    0x000000011ba37298
  0x000000011ba375f4:   mov    edx,DWORD PTR [rsp+0xa8]
  0x000000011ba375fb:   mov    r11d,DWORD PTR [rsp+0xb4]
  0x000000011ba37603:   mov    r13,QWORD PTR [rsp+0xb8]
  0x000000011ba3760b:   mov    ebx,DWORD PTR [rsp+0xac]
  0x000000011ba37612:   cmp    r11d,0xffffffff
  0x000000011ba37616:   movabs rsi,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba37620:   movabs rdi,0x1f8
  0x000000011ba3762a:   jne    0x000000011ba3763a
  0x000000011ba37630:   movabs rdi,0x208
  0x000000011ba3763a:   mov    rax,QWORD PTR [rsi+rdi*1]
  0x000000011ba3763e:   lea    rax,[rax+0x1]
  0x000000011ba37642:   mov    QWORD PTR [rsi+rdi*1],rax
  0x000000011ba37646:   mov    rsi,rbx
  0x000000011ba37649:   jne    0x000000011ba37673
  0x000000011ba3764f:   sub    esi,DWORD PTR [rsp+0xcc]
  0x000000011ba37656:   movabs rdi,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba37660:   inc    DWORD PTR [rdi+0x218]
  0x000000011ba37666:   mov    rdi,rbx
  0x000000011ba37669:   mov    eax,0x0
  0x000000011ba3766e:   jmp    0x000000011ba37689
  0x000000011ba37673:   sub    esi,DWORD PTR [rsp+0xcc]
  0x000000011ba3767a:   dec    esi
  0x000000011ba3767c:   mov    rdi,r11
  0x000000011ba3767f:   sub    edi,ebx
  0x000000011ba37681:   mov    rax,rdi
  0x000000011ba37684:   inc    eax
  0x000000011ba37686:   mov    rdi,r11
  0x000000011ba37689:   cmp    edx,0x65
  0x000000011ba3768c:   movabs rcx,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba37696:   movabs r8,0x230
  0x000000011ba376a0:   je     0x000000011ba376b0
  0x000000011ba376a6:   movabs r8,0x240
  0x000000011ba376b0:   mov    r9,QWORD PTR [rcx+r8*1]
  0x000000011ba376b4:   lea    r9,[r9+0x1]
  0x000000011ba376b8:   mov    QWORD PTR [rcx+r8*1],r9
  0x000000011ba376bc:   je     0x000000011ba376fb
  0x000000011ba376c2:   cmp    edx,0x45
  0x000000011ba376c5:   movabs rdx,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba376cf:   movabs rcx,0x250
  0x000000011ba376d9:   jne    0x000000011ba376e9
  0x000000011ba376df:   movabs rcx,0x260
  0x000000011ba376e9:   mov    r8,QWORD PTR [rdx+rcx*1]
  0x000000011ba376ed:   lea    r8,[r8+0x1]
  0x000000011ba376f1:   mov    QWORD PTR [rdx+rcx*1],r8
  0x000000011ba376f5:   jne    0x000000011ba37715
  0x000000011ba376fb:   movabs rdx,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba37705:   inc    DWORD PTR [rdx+0x270]
  0x000000011ba3770b:   mov    edx,0x1
  0x000000011ba37710:   jmp    0x000000011ba3771a
  0x000000011ba37715:   mov    edx,0x0
  0x000000011ba3771a:   cmp    edx,0x0
  0x000000011ba3771d:   movabs rdx,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba37727:   movabs rcx,0x298
  0x000000011ba37731:   jne    0x000000011ba37741
  0x000000011ba37737:   movabs rcx,0x288
  0x000000011ba37741:   mov    r8,QWORD PTR [rdx+rcx*1]
  0x000000011ba37745:   lea    r8,[r8+0x1]
  0x000000011ba37749:   mov    QWORD PTR [rdx+rcx*1],r8
  0x000000011ba3774d:   jne    0x000000011ba37782
  0x000000011ba37753:   mov    rdx,rbx
  0x000000011ba37756:   movabs rcx,0x0
  0x000000011ba37760:   mov    DWORD PTR [rsp+0xe0],esi
  0x000000011ba37767:   mov    DWORD PTR [rsp+0xe4],edi
  0x000000011ba3776e:   mov    QWORD PTR [rsp+0xb8],r13
  0x000000011ba37776:   mov    DWORD PTR [rsp+0xac],ebx
  0x000000011ba3777d:   jmp    0x000000011ba37fa7
  0x000000011ba37782:   mov    rcx,rbx
  0x000000011ba37785:   inc    ecx
  0x000000011ba37787:   cmp    ecx,DWORD PTR [rsp+0xc8]
  0x000000011ba3778e:   movabs rdx,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba37798:   movabs r8,0x2a8
  0x000000011ba377a2:   jge    0x000000011ba377b2
  0x000000011ba377a8:   movabs r8,0x2b8
  0x000000011ba377b2:   mov    r9,QWORD PTR [rdx+r8*1]
  0x000000011ba377b6:   lea    r9,[r9+0x1]
  0x000000011ba377ba:   mov    QWORD PTR [rdx+r8*1],r9
  0x000000011ba377be:   jge    0x000000011ba378c1
  0x000000011ba377c4:   mov    DWORD PTR [rsp+0xe0],esi
  0x000000011ba377cb:   mov    DWORD PTR [rsp+0xe4],edi
  0x000000011ba377d2:   mov    DWORD PTR [rsp+0xdc],eax
  0x000000011ba377d9:   mov    QWORD PTR [rsp+0xb8],r13
  0x000000011ba377e1:   mov    DWORD PTR [rsp+0xac],ebx
  0x000000011ba377e8:   mov    rsi,QWORD PTR [rsp+0xc0]
  0x000000011ba377f0:   cmp    rax,QWORD PTR [rsi]          ; implicit exception: dispatches to 0x000000011ba38c74
  0x000000011ba377f3:   mov    rdx,rsi
  0x000000011ba377f6:   movabs r9,0x13a82aa88               ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba37800:   mov    edx,DWORD PTR [rdx+0x8]
  0x000000011ba37803:   movabs r10,0x800000000
  0x000000011ba3780d:   add    rdx,r10
  0x000000011ba37810:   cmp    rdx,QWORD PTR [r9+0x2d8]
  0x000000011ba37817:   jne    0x000000011ba37826
  0x000000011ba37819:   add    QWORD PTR [r9+0x2e0],0x1
  0x000000011ba37821:   jmp    0x000000011ba3788c
  0x000000011ba37826:   cmp    rdx,QWORD PTR [r9+0x2e8]
  0x000000011ba3782d:   jne    0x000000011ba3783c
  0x000000011ba3782f:   add    QWORD PTR [r9+0x2f0],0x1
  0x000000011ba37837:   jmp    0x000000011ba3788c
  0x000000011ba3783c:   cmp    QWORD PTR [r9+0x2d8],0x0
  0x000000011ba37847:   jne    0x000000011ba37860
  0x000000011ba37849:   mov    QWORD PTR [r9+0x2d8],rdx
  0x000000011ba37850:   mov    QWORD PTR [r9+0x2e0],0x1
  0x000000011ba3785b:   jmp    0x000000011ba3788c
  0x000000011ba37860:   cmp    QWORD PTR [r9+0x2e8],0x0
  0x000000011ba3786b:   jne    0x000000011ba37884
  0x000000011ba3786d:   mov    QWORD PTR [r9+0x2e8],rdx
  0x000000011ba37874:   mov    QWORD PTR [r9+0x2f0],0x1
  0x000000011ba3787f:   jmp    0x000000011ba3788c
  0x000000011ba37884:   add    QWORD PTR [r9+0x2c8],0x1
  0x000000011ba3788c:   mov    rdx,rcx
  0x000000011ba3788f:   mov    r9,rsi
  0x000000011ba37892:   mov    rsi,r9
  0x000000011ba37895:   mov    DWORD PTR [rsp+0xd8],ecx
  0x000000011ba3789c:   nop
  0x000000011ba3789d:   movabs rax,0x800008340
  0x000000011ba378a7:   call   0x0000000122eb0620           ; ImmutableOopMap {[192]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@164 (line 353)
                                                            ;   {virtual_call}
  0x000000011ba378ac:   movabs rdx,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba378b6:   inc    DWORD PTR [rdx+0x300]
  0x000000011ba378bc:   jmp    0x000000011ba378f1
  0x000000011ba378c1:   mov    DWORD PTR [rsp+0xd8],ecx
  0x000000011ba378c8:   mov    DWORD PTR [rsp+0xe0],esi
  0x000000011ba378cf:   mov    DWORD PTR [rsp+0xe4],edi
  0x000000011ba378d6:   mov    DWORD PTR [rsp+0xdc],eax
  0x000000011ba378dd:   mov    QWORD PTR [rsp+0xb8],r13
  0x000000011ba378e5:   mov    DWORD PTR [rsp+0xac],ebx
  0x000000011ba378ec:   mov    eax,0x0
  0x000000011ba378f1:   cmp    eax,0x2d
  0x000000011ba378f4:   movabs rdx,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba378fe:   movabs rsi,0x318
  0x000000011ba37908:   jne    0x000000011ba37918
  0x000000011ba3790e:   movabs rsi,0x328
  0x000000011ba37918:   mov    rdi,QWORD PTR [rdx+rsi*1]
  0x000000011ba3791c:   lea    rdi,[rdi+0x1]
  0x000000011ba37920:   mov    QWORD PTR [rdx+rsi*1],rdi
  0x000000011ba37924:   jne    0x000000011ba37944
  0x000000011ba3792a:   movabs rdx,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba37934:   inc    DWORD PTR [rdx+0x338]
  0x000000011ba3793a:   mov    edi,0x1
  0x000000011ba3793f:   jmp    0x000000011ba37949
  0x000000011ba37944:   mov    edi,0x0
  0x000000011ba37949:   cmp    edi,0x0
  0x000000011ba3794c:   movabs rdx,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba37956:   movabs rsi,0x350
  0x000000011ba37960:   jne    0x000000011ba37970
  0x000000011ba37966:   movabs rsi,0x360
  0x000000011ba37970:   mov    rbx,QWORD PTR [rdx+rsi*1]
  0x000000011ba37974:   lea    rbx,[rbx+0x1]
  0x000000011ba37978:   mov    QWORD PTR [rdx+rsi*1],rbx
  0x000000011ba3797c:   jne    0x000000011ba379ce
  0x000000011ba37982:   cmp    eax,0x2b
  0x000000011ba37985:   movabs rdx,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba3798f:   movabs rsi,0x380
  0x000000011ba37999:   je     0x000000011ba379a9
  0x000000011ba3799f:   movabs rsi,0x370
  0x000000011ba379a9:   mov    rbx,QWORD PTR [rdx+rsi*1]
  0x000000011ba379ad:   lea    rbx,[rbx+0x1]
  0x000000011ba379b1:   mov    QWORD PTR [rdx+rsi*1],rbx
  0x000000011ba379b5:   je     0x000000011ba379ce
  0x000000011ba379bb:   mov    ecx,DWORD PTR [rsp+0xd8]
  0x000000011ba379c2:   mov    DWORD PTR [rsp+0xec],edi
  0x000000011ba379c9:   jmp    0x000000011ba37b13
  0x000000011ba379ce:   mov    ecx,DWORD PTR [rsp+0xd8]
  0x000000011ba379d5:   inc    ecx
  0x000000011ba379d7:   cmp    ecx,DWORD PTR [rsp+0xc8]
  0x000000011ba379de:   movabs rdx,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba379e8:   movabs rsi,0x390
  0x000000011ba379f2:   jge    0x000000011ba37a02
  0x000000011ba379f8:   movabs rsi,0x3a0
  0x000000011ba37a02:   mov    rbx,QWORD PTR [rdx+rsi*1]
  0x000000011ba37a06:   lea    rbx,[rbx+0x1]
  0x000000011ba37a0a:   mov    QWORD PTR [rdx+rsi*1],rbx
  0x000000011ba37a0e:   jge    0x000000011ba37af9
  0x000000011ba37a14:   mov    DWORD PTR [rsp+0xec],edi
  0x000000011ba37a1b:   mov    rsi,QWORD PTR [rsp+0xc0]
  0x000000011ba37a23:   cmp    rax,QWORD PTR [rsi]          ; implicit exception: dispatches to 0x000000011ba38c79
  0x000000011ba37a26:   mov    rdx,rsi
  0x000000011ba37a29:   movabs rbx,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba37a33:   mov    edx,DWORD PTR [rdx+0x8]
  0x000000011ba37a36:   movabs r10,0x800000000
  0x000000011ba37a40:   add    rdx,r10
  0x000000011ba37a43:   cmp    rdx,QWORD PTR [rbx+0x3c0]
  0x000000011ba37a4a:   jne    0x000000011ba37a59
  0x000000011ba37a4c:   add    QWORD PTR [rbx+0x3c8],0x1
  0x000000011ba37a54:   jmp    0x000000011ba37abf
  0x000000011ba37a59:   cmp    rdx,QWORD PTR [rbx+0x3d0]
  0x000000011ba37a60:   jne    0x000000011ba37a6f
  0x000000011ba37a62:   add    QWORD PTR [rbx+0x3d8],0x1
  0x000000011ba37a6a:   jmp    0x000000011ba37abf
  0x000000011ba37a6f:   cmp    QWORD PTR [rbx+0x3c0],0x0
  0x000000011ba37a7a:   jne    0x000000011ba37a93
  0x000000011ba37a7c:   mov    QWORD PTR [rbx+0x3c0],rdx
  0x000000011ba37a83:   mov    QWORD PTR [rbx+0x3c8],0x1
  0x000000011ba37a8e:   jmp    0x000000011ba37abf
  0x000000011ba37a93:   cmp    QWORD PTR [rbx+0x3d0],0x0
  0x000000011ba37a9e:   jne    0x000000011ba37ab7
  0x000000011ba37aa0:   mov    QWORD PTR [rbx+0x3d0],rdx
  0x000000011ba37aa7:   mov    QWORD PTR [rbx+0x3d8],0x1
  0x000000011ba37ab2:   jmp    0x000000011ba37abf
  0x000000011ba37ab7:   add    QWORD PTR [rbx+0x3b0],0x1
  0x000000011ba37abf:   mov    rdx,rcx
  0x000000011ba37ac2:   mov    rbx,rsi
  0x000000011ba37ac5:   mov    rsi,rbx
  0x000000011ba37ac8:   mov    DWORD PTR [rsp+0xe8],ecx
  0x000000011ba37acf:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011ba37ad5:   movabs rax,0x800008340
  0x000000011ba37adf:   call   0x0000000122eb0620           ; ImmutableOopMap {[192]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@211 (line 356)
                                                            ;   {virtual_call}
  0x000000011ba37ae4:   movabs rdx,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba37aee:   inc    DWORD PTR [rdx+0x3e8]
  0x000000011ba37af4:   jmp    0x000000011ba37b0c
  0x000000011ba37af9:   mov    DWORD PTR [rsp+0xe8],ecx
  0x000000011ba37b00:   mov    DWORD PTR [rsp+0xec],edi
  0x000000011ba37b07:   mov    eax,0x0
  0x000000011ba37b0c:   mov    ecx,DWORD PTR [rsp+0xe8]
  0x000000011ba37b13:   movabs rdx,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba37b1d:   add    QWORD PTR [rdx+0x400],0x1
  0x000000011ba37b25:   movabs rdx,0x13a837bb0              ;   {metadata(method data for {method} {0x000000013a80dd50} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba37b2f:   mov    esi,DWORD PTR [rdx+0xac]
  0x000000011ba37b35:   add    esi,0x2
  0x000000011ba37b38:   mov    DWORD PTR [rdx+0xac],esi
  0x000000011ba37b3e:   and    esi,0x1ffffe
  0x000000011ba37b44:   cmp    esi,0x0
  0x000000011ba37b47:   je     0x000000011ba38c7e
  0x000000011ba37b4d:   cmp    eax,0x30
  0x000000011ba37b50:   movabs rdx,0x13a837bb0              ;   {metadata(method data for {method} {0x000000013a80dd50} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba37b5a:   movabs rsi,0xf0
  0x000000011ba37b64:   jl     0x000000011ba37b74
  0x000000011ba37b6a:   movabs rsi,0x100
  0x000000011ba37b74:   mov    rdi,QWORD PTR [rdx+rsi*1]
  0x000000011ba37b78:   lea    rdi,[rdi+0x1]
  0x000000011ba37b7c:   mov    QWORD PTR [rdx+rsi*1],rdi
  0x000000011ba37b80:   jl     0x000000011ba37bbf
  0x000000011ba37b86:   cmp    eax,0x39
  0x000000011ba37b89:   movabs rdx,0x13a837bb0              ;   {metadata(method data for {method} {0x000000013a80dd50} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba37b93:   movabs rsi,0x120
  0x000000011ba37b9d:   jle    0x000000011ba37bad
  0x000000011ba37ba3:   movabs rsi,0x110
  0x000000011ba37bad:   mov    rdi,QWORD PTR [rdx+rsi*1]
  0x000000011ba37bb1:   lea    rdi,[rdi+0x1]
  0x000000011ba37bb5:   mov    QWORD PTR [rdx+rsi*1],rdi
  0x000000011ba37bb9:   jle    0x000000011ba37bc9
  0x000000011ba37bbf:   mov    edx,0x0
  0x000000011ba37bc4:   jmp    0x000000011ba37bde
  0x000000011ba37bc9:   movabs rdx,0x13a837bb0              ;   {metadata(method data for {method} {0x000000013a80dd50} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba37bd3:   inc    DWORD PTR [rdx+0x130]
  0x000000011ba37bd9:   mov    edx,0x1
  0x000000011ba37bde:   and    edx,0x1
  0x000000011ba37be1:   cmp    edx,0x0
  0x000000011ba37be4:   movabs rdx,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba37bee:   movabs rsi,0x420
  0x000000011ba37bf8:   je     0x000000011ba37c08
  0x000000011ba37bfe:   movabs rsi,0x410
  0x000000011ba37c08:   mov    rdi,QWORD PTR [rdx+rsi*1]
  0x000000011ba37c0c:   lea    rdi,[rdi+0x1]
  0x000000011ba37c10:   mov    QWORD PTR [rdx+rsi*1],rdi
  0x000000011ba37c14:   je     0x000000011ba38b94
  0x000000011ba37c1a:   mov    rsi,rax
  0x000000011ba37c1d:   movabs rdi,0x0
  0x000000011ba37c27:   nop
  0x000000011ba37c28:   mov    rbx,QWORD PTR [rsp+0xc0]
  0x000000011ba37c30:   movabs rax,0x989680
  0x000000011ba37c3a:   mov    rdx,rdi
  0x000000011ba37c3d:   cmp    rdx,rax
  0x000000011ba37c40:   movabs rax,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba37c4a:   movabs rdx,0x440
  0x000000011ba37c54:   jge    0x000000011ba37c64
  0x000000011ba37c5a:   movabs rdx,0x450
  0x000000011ba37c64:   mov    r8,QWORD PTR [rax+rdx*1]
  0x000000011ba37c68:   lea    r8,[r8+0x1]
  0x000000011ba37c6c:   mov    QWORD PTR [rax+rdx*1],r8
  0x000000011ba37c70:   jge    0x000000011ba37ca0
  0x000000011ba37c76:   movabs rax,0xa
  0x000000011ba37c80:   mov    rdx,rax
  0x000000011ba37c83:   mov    rax,rdi
  0x000000011ba37c86:   imul   rax,rdx
  0x000000011ba37c8a:   movsxd rsi,esi
  0x000000011ba37c8d:   add    rax,rsi
  0x000000011ba37c90:   movabs r10,0x30
  0x000000011ba37c9a:   sub    rax,r10
  0x000000011ba37c9d:   mov    rdi,rax
  0x000000011ba37ca0:   inc    ecx
  0x000000011ba37ca2:   cmp    ecx,DWORD PTR [rsp+0xc8]
  0x000000011ba37ca9:   movabs rdx,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba37cb3:   movabs rsi,0x460
  0x000000011ba37cbd:   jge    0x000000011ba37ccd
  0x000000011ba37cc3:   movabs rsi,0x470
  0x000000011ba37ccd:   mov    rax,QWORD PTR [rdx+rsi*1]
  0x000000011ba37cd1:   lea    rax,[rax+0x1]
  0x000000011ba37cd5:   mov    QWORD PTR [rdx+rsi*1],rax
  0x000000011ba37cd9:   jge    0x000000011ba37db9
  0x000000011ba37cdf:   mov    QWORD PTR [rsp+0xf0],rdi
  0x000000011ba37ce7:   cmp    rax,QWORD PTR [rbx]          ; implicit exception: dispatches to 0x000000011ba38c9f
  0x000000011ba37cea:   mov    rsi,rbx
  0x000000011ba37ced:   movabs rdx,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba37cf7:   mov    esi,DWORD PTR [rsi+0x8]
  0x000000011ba37cfa:   movabs r10,0x800000000
  0x000000011ba37d04:   add    rsi,r10
  0x000000011ba37d07:   cmp    rsi,QWORD PTR [rdx+0x490]
  0x000000011ba37d0e:   jne    0x000000011ba37d1d
  0x000000011ba37d10:   add    QWORD PTR [rdx+0x498],0x1
  0x000000011ba37d18:   jmp    0x000000011ba37d83
  0x000000011ba37d1d:   cmp    rsi,QWORD PTR [rdx+0x4a0]
  0x000000011ba37d24:   jne    0x000000011ba37d33
  0x000000011ba37d26:   add    QWORD PTR [rdx+0x4a8],0x1
  0x000000011ba37d2e:   jmp    0x000000011ba37d83
  0x000000011ba37d33:   cmp    QWORD PTR [rdx+0x490],0x0
  0x000000011ba37d3e:   jne    0x000000011ba37d57
  0x000000011ba37d40:   mov    QWORD PTR [rdx+0x490],rsi
  0x000000011ba37d47:   mov    QWORD PTR [rdx+0x498],0x1
  0x000000011ba37d52:   jmp    0x000000011ba37d83
  0x000000011ba37d57:   cmp    QWORD PTR [rdx+0x4a0],0x0
  0x000000011ba37d62:   jne    0x000000011ba37d7b
  0x000000011ba37d64:   mov    QWORD PTR [rdx+0x4a0],rsi
  0x000000011ba37d6b:   mov    QWORD PTR [rdx+0x4a8],0x1
  0x000000011ba37d76:   jmp    0x000000011ba37d83
  0x000000011ba37d7b:   add    QWORD PTR [rdx+0x480],0x1
  0x000000011ba37d83:   mov    rdx,rcx
  0x000000011ba37d86:   mov    rsi,rbx
  0x000000011ba37d89:   mov    DWORD PTR [rsp+0xf8],ecx
  0x000000011ba37d90:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011ba37d95:   movabs rax,0xffffffffffffffff
  0x000000011ba37d9f:   call   0x000000011b42dd80           ; ImmutableOopMap {[192]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@272 (line 366)
                                                            ;   {virtual_call}
  0x000000011ba37da4:   movabs rdx,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba37dae:   inc    DWORD PTR [rdx+0x4b8]
  0x000000011ba37db4:   jmp    0x000000011ba37dcd
  0x000000011ba37db9:   mov    DWORD PTR [rsp+0xf8],ecx
  0x000000011ba37dc0:   mov    QWORD PTR [rsp+0xf0],rdi
  0x000000011ba37dc8:   mov    eax,0x0
  0x000000011ba37dcd:   movabs rdx,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba37dd7:   add    QWORD PTR [rdx+0x4d0],0x1
  0x000000011ba37ddf:   movabs rdx,0x13a837bb0              ;   {metadata(method data for {method} {0x000000013a80dd50} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba37de9:   mov    esi,DWORD PTR [rdx+0xac]
  0x000000011ba37def:   add    esi,0x2
  0x000000011ba37df2:   mov    DWORD PTR [rdx+0xac],esi
  0x000000011ba37df8:   and    esi,0x1ffffe
  0x000000011ba37dfe:   cmp    esi,0x0
  0x000000011ba37e01:   je     0x000000011ba38ca4
  0x000000011ba37e07:   cmp    eax,0x30
  0x000000011ba37e0a:   movabs rdx,0x13a837bb0              ;   {metadata(method data for {method} {0x000000013a80dd50} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba37e14:   movabs rsi,0xf0
  0x000000011ba37e1e:   jl     0x000000011ba37e2e
  0x000000011ba37e24:   movabs rsi,0x100
  0x000000011ba37e2e:   mov    rdi,QWORD PTR [rdx+rsi*1]
  0x000000011ba37e32:   lea    rdi,[rdi+0x1]
  0x000000011ba37e36:   mov    QWORD PTR [rdx+rsi*1],rdi
  0x000000011ba37e3a:   jl     0x000000011ba37e79
  0x000000011ba37e40:   cmp    eax,0x39
  0x000000011ba37e43:   movabs rdx,0x13a837bb0              ;   {metadata(method data for {method} {0x000000013a80dd50} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba37e4d:   movabs rsi,0x120
  0x000000011ba37e57:   jle    0x000000011ba37e67
  0x000000011ba37e5d:   movabs rsi,0x110
  0x000000011ba37e67:   mov    rdi,QWORD PTR [rdx+rsi*1]
  0x000000011ba37e6b:   lea    rdi,[rdi+0x1]
  0x000000011ba37e6f:   mov    QWORD PTR [rdx+rsi*1],rdi
  0x000000011ba37e73:   jle    0x000000011ba37e83
  0x000000011ba37e79:   mov    edx,0x0
  0x000000011ba37e7e:   jmp    0x000000011ba37e98
  0x000000011ba37e83:   movabs rdx,0x13a837bb0              ;   {metadata(method data for {method} {0x000000013a80dd50} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba37e8d:   inc    DWORD PTR [rdx+0x130]
  0x000000011ba37e93:   mov    edx,0x1
  0x000000011ba37e98:   and    edx,0x1
  0x000000011ba37e9b:   cmp    edx,0x0
  0x000000011ba37e9e:   mov    esi,0x2
  0x000000011ba37ea3:   jne    0x000000011ba37eae
  0x000000011ba37ea9:   mov    esi,0x0
  0x000000011ba37eae:   movabs rdi,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba37eb8:   mov    ebx,DWORD PTR [rdi+0xb0]
  0x000000011ba37ebe:   add    ebx,esi
  0x000000011ba37ec0:   mov    DWORD PTR [rdi+0xb0],ebx
  0x000000011ba37ec6:   cmp    esi,0x0
  0x000000011ba37ec9:   jne    0x000000011ba37ed4
  0x000000011ba37ecf:   mov    ebx,0x2
  0x000000011ba37ed4:   and    ebx,0x3ffe
  0x000000011ba37eda:   cmp    ebx,0x0
  0x000000011ba37edd:   je     0x000000011ba38cc5
  0x000000011ba37ee3:   mov    r10,QWORD PTR [r15+0x340]    ; ImmutableOopMap {[192]=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@288 (line 367)
  0x000000011ba37eea:   test   DWORD PTR [r10],eax          ;   {poll}
  0x000000011ba37eed:   cmp    edx,0x0
  0x000000011ba37ef0:   movabs rdx,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba37efa:   movabs rsi,0x4f0
  0x000000011ba37f04:   je     0x000000011ba37f14
  0x000000011ba37f0a:   movabs rsi,0x4e0
  0x000000011ba37f14:   mov    rdi,QWORD PTR [rdx+rsi*1]
  0x000000011ba37f18:   lea    rdi,[rdi+0x1]
  0x000000011ba37f1c:   mov    QWORD PTR [rdx+rsi*1],rdi
  0x000000011ba37f20:   je     0x000000011ba37f3d
  0x000000011ba37f26:   mov    rdi,QWORD PTR [rsp+0xf0]
  0x000000011ba37f2e:   mov    rsi,rax
  0x000000011ba37f31:   mov    ecx,DWORD PTR [rsp+0xf8]
  0x000000011ba37f38:   jmp    0x000000011ba37c28
  0x000000011ba37f3d:   mov    edi,DWORD PTR [rsp+0xec]
  0x000000011ba37f44:   cmp    edi,0x0
  0x000000011ba37f47:   movabs rdx,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba37f51:   movabs rsi,0x500
  0x000000011ba37f5b:   je     0x000000011ba37f6b
  0x000000011ba37f61:   movabs rsi,0x510
  0x000000011ba37f6b:   mov    rdi,QWORD PTR [rdx+rsi*1]
  0x000000011ba37f6f:   lea    rdi,[rdi+0x1]
  0x000000011ba37f73:   mov    QWORD PTR [rdx+rsi*1],rdi
  0x000000011ba37f77:   mov    rdi,QWORD PTR [rsp+0xf0]
  0x000000011ba37f7f:   je     0x000000011ba37f8e
  0x000000011ba37f85:   mov    rdx,rdi
  0x000000011ba37f88:   neg    rdx
  0x000000011ba37f8b:   mov    rdi,rdx
  0x000000011ba37f8e:   mov    edx,DWORD PTR [rsp+0xf8]
  0x000000011ba37f95:   mov    eax,DWORD PTR [rsp+0xdc]
  0x000000011ba37f9c:   movsxd rax,eax
  0x000000011ba37f9f:   add    rax,rdi
  0x000000011ba37fa2:   mov    eax,eax
  0x000000011ba37fa4:   mov    rcx,rdi
  0x000000011ba37fa7:   movabs rsi,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba37fb1:   add    QWORD PTR [rsi+0x520],0x1
  0x000000011ba37fb9:   movabs rsi,0x13a82fcc0              ;   {metadata(method data for {method} {0x000000013a80ee10} 'skipWhitespace' '(Ljava/lang/CharSequence;II)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba37fc3:   mov    edi,DWORD PTR [rsi+0xac]
  0x000000011ba37fc9:   add    edi,0x2
  0x000000011ba37fcc:   mov    DWORD PTR [rsi+0xac],edi
  0x000000011ba37fd2:   and    edi,0x1ffffe
  0x000000011ba37fd8:   cmp    edi,0x0
  0x000000011ba37fdb:   je     0x000000011ba38ce6
  0x000000011ba37fe1:   mov    QWORD PTR [rsp+0x108],rcx
  0x000000011ba37fe9:   mov    DWORD PTR [rsp+0x100],eax
  0x000000011ba37ff0:   jmp    0x000000011ba38140
  0x000000011ba37ff5:   data16 xchg ax,ax
  0x000000011ba37ff8:   cmp    rax,QWORD PTR [rsi]          ; implicit exception: dispatches to 0x000000011ba38d07
  0x000000011ba37ffb:   mov    rdi,rsi
  0x000000011ba37ffe:   movabs rbx,0x13a82fcc0              ;   {metadata(method data for {method} {0x000000013a80ee10} 'skipWhitespace' '(Ljava/lang/CharSequence;II)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba38008:   mov    edi,DWORD PTR [rdi+0x8]
  0x000000011ba3800b:   movabs r10,0x800000000
  0x000000011ba38015:   add    rdi,r10
  0x000000011ba38018:   cmp    rdi,QWORD PTR [rbx+0x120]
  0x000000011ba3801f:   jne    0x000000011ba3802e
  0x000000011ba38021:   add    QWORD PTR [rbx+0x128],0x1
  0x000000011ba38029:   jmp    0x000000011ba38094
  0x000000011ba3802e:   cmp    rdi,QWORD PTR [rbx+0x130]
  0x000000011ba38035:   jne    0x000000011ba38044
  0x000000011ba38037:   add    QWORD PTR [rbx+0x138],0x1
  0x000000011ba3803f:   jmp    0x000000011ba38094
  0x000000011ba38044:   cmp    QWORD PTR [rbx+0x120],0x0
  0x000000011ba3804f:   jne    0x000000011ba38068
  0x000000011ba38051:   mov    QWORD PTR [rbx+0x120],rdi
  0x000000011ba38058:   mov    QWORD PTR [rbx+0x128],0x1
  0x000000011ba38063:   jmp    0x000000011ba38094
  0x000000011ba38068:   cmp    QWORD PTR [rbx+0x130],0x0
  0x000000011ba38073:   jne    0x000000011ba3808c
  0x000000011ba38075:   mov    QWORD PTR [rbx+0x130],rdi
  0x000000011ba3807c:   mov    QWORD PTR [rbx+0x138],0x1
  0x000000011ba38087:   jmp    0x000000011ba38094
  0x000000011ba3808c:   add    QWORD PTR [rbx+0x110],0x1
  0x000000011ba38094:   mov    rdi,rdx
  0x000000011ba38097:   mov    rdx,rdi
  0x000000011ba3809a:   mov    rbx,rsi
  0x000000011ba3809d:   mov    rsi,rbx
  0x000000011ba380a0:   mov    DWORD PTR [rsp+0xfc],edi
  0x000000011ba380a7:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011ba380ad:   movabs rax,0xffffffffffffffff
  0x000000011ba380b7:   call   0x000000011b42dd80           ; ImmutableOopMap {[192]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@9 (line 550)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@313 (line 376)
                                                            ;   {virtual_call}
  0x000000011ba380bc:   cmp    eax,0x20
  0x000000011ba380bf:   movabs rdx,0x13a82fcc0              ;   {metadata(method data for {method} {0x000000013a80ee10} 'skipWhitespace' '(Ljava/lang/CharSequence;II)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba380c9:   movabs rsi,0x158
  0x000000011ba380d3:   jg     0x000000011ba380e3
  0x000000011ba380d9:   movabs rsi,0x148
  0x000000011ba380e3:   mov    rdi,QWORD PTR [rdx+rsi*1]
  0x000000011ba380e7:   lea    rdi,[rdi+0x1]
  0x000000011ba380eb:   mov    QWORD PTR [rdx+rsi*1],rdi
  0x000000011ba380ef:   mov    edx,DWORD PTR [rsp+0xfc]
  0x000000011ba380f6:   jg     0x000000011ba3818a
  0x000000011ba380fc:   inc    edx
  0x000000011ba380fe:   movabs rsi,0x13a82fcc0              ;   {metadata(method data for {method} {0x000000013a80ee10} 'skipWhitespace' '(Ljava/lang/CharSequence;II)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba38108:   mov    edi,DWORD PTR [rsi+0xb0]
  0x000000011ba3810e:   add    edi,0x2
  0x000000011ba38111:   mov    DWORD PTR [rsi+0xb0],edi
  0x000000011ba38117:   and    edi,0x3ffe
  0x000000011ba3811d:   cmp    edi,0x0
  0x000000011ba38120:   je     0x000000011ba38d0c
  0x000000011ba38126:   mov    r10,QWORD PTR [r15+0x340]    ; ImmutableOopMap {[192]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@25 (line 549)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@313 (line 376)
  0x000000011ba3812d:   test   DWORD PTR [r10],eax          ;   {poll}
  0x000000011ba38130:   movabs rsi,0x13a82fcc0              ;   {metadata(method data for {method} {0x000000013a80ee10} 'skipWhitespace' '(Ljava/lang/CharSequence;II)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba3813a:   inc    DWORD PTR [rsi+0x180]
  0x000000011ba38140:   mov    rsi,QWORD PTR [rsp+0xc0]
  0x000000011ba38148:   cmp    edx,DWORD PTR [rsp+0xc8]
  0x000000011ba3814f:   movabs rdi,0x13a82fcc0              ;   {metadata(method data for {method} {0x000000013a80ee10} 'skipWhitespace' '(Ljava/lang/CharSequence;II)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba38159:   movabs rbx,0xf0
  0x000000011ba38163:   jge    0x000000011ba38173
  0x000000011ba38169:   movabs rbx,0x100
  0x000000011ba38173:   mov    r8,QWORD PTR [rdi+rbx*1]
  0x000000011ba38177:   lea    r8,[r8+0x1]
  0x000000011ba3817b:   mov    QWORD PTR [rdi+rbx*1],r8
  0x000000011ba3817f:   jge    0x000000011ba3819a
  0x000000011ba38185:   jmp    0x000000011ba37ff8
  0x000000011ba3818a:   movabs rsi,0x13a82fcc0              ;   {metadata(method data for {method} {0x000000013a80ee10} 'skipWhitespace' '(Ljava/lang/CharSequence;II)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba38194:   inc    DWORD PTR [rsi+0x168]
  0x000000011ba3819a:   cmp    edx,DWORD PTR [rsp+0xc8]
  0x000000011ba381a1:   movabs rsi,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba381ab:   movabs rdi,0x530
  0x000000011ba381b5:   jl     0x000000011ba381c5
  0x000000011ba381bb:   movabs rdi,0x540
  0x000000011ba381c5:   mov    rbx,QWORD PTR [rsi+rdi*1]
  0x000000011ba381c9:   lea    rbx,[rbx+0x1]
  0x000000011ba381cd:   mov    QWORD PTR [rsi+rdi*1],rbx
  0x000000011ba381d1:   jl     0x000000011ba38b5a
  0x000000011ba381d7:   mov    edi,DWORD PTR [rsp+0xb0]
  0x000000011ba381de:   cmp    edi,0x0
  0x000000011ba381e1:   movabs rsi,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba381eb:   movabs rdi,0x560
  0x000000011ba381f5:   je     0x000000011ba38205
  0x000000011ba381fb:   movabs rdi,0x550
  0x000000011ba38205:   mov    rbx,QWORD PTR [rsi+rdi*1]
  0x000000011ba38209:   lea    rbx,[rbx+0x1]
  0x000000011ba3820d:   mov    QWORD PTR [rsi+rdi*1],rbx
  0x000000011ba38211:   je     0x000000011ba3822a
  0x000000011ba38217:   mov    DWORD PTR [rsp+0xfc],edx
  0x000000011ba3821e:   mov    esi,DWORD PTR [rsp+0xe0]
  0x000000011ba38225:   jmp    0x000000011ba3837c
  0x000000011ba3822a:   mov    esi,DWORD PTR [rsp+0xe0]
  0x000000011ba38231:   cmp    esi,0x0
  0x000000011ba38234:   movabs rdi,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba3823e:   movabs rbx,0x570
  0x000000011ba38248:   jne    0x000000011ba38258
  0x000000011ba3824e:   movabs rbx,0x580
  0x000000011ba38258:   mov    rax,QWORD PTR [rdi+rbx*1]
  0x000000011ba3825c:   lea    rax,[rax+0x1]
  0x000000011ba38260:   mov    QWORD PTR [rdi+rbx*1],rax
  0x000000011ba38264:   mov    DWORD PTR [rsp+0xfc],edx
  0x000000011ba3826b:   jne    0x000000011ba3837c
  0x000000011ba38271:   mov    DWORD PTR [rsp+0xe0],esi
  0x000000011ba38278:   mov    rsi,QWORD PTR [rsp+0xc0]
  0x000000011ba38280:   cmp    rax,QWORD PTR [rsi]          ; implicit exception: dispatches to 0x000000011ba38d2d
  0x000000011ba38283:   mov    rbx,rsi
  0x000000011ba38286:   movabs rax,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba38290:   mov    ebx,DWORD PTR [rbx+0x8]
  0x000000011ba38293:   movabs r10,0x800000000
  0x000000011ba3829d:   add    rbx,r10
  0x000000011ba382a0:   cmp    rbx,QWORD PTR [rax+0x5a0]
  0x000000011ba382a7:   jne    0x000000011ba382b6
  0x000000011ba382a9:   add    QWORD PTR [rax+0x5a8],0x1
  0x000000011ba382b1:   jmp    0x000000011ba3831c
  0x000000011ba382b6:   cmp    rbx,QWORD PTR [rax+0x5b0]
  0x000000011ba382bd:   jne    0x000000011ba382cc
  0x000000011ba382bf:   add    QWORD PTR [rax+0x5b8],0x1
  0x000000011ba382c7:   jmp    0x000000011ba3831c
  0x000000011ba382cc:   cmp    QWORD PTR [rax+0x5a0],0x0
  0x000000011ba382d7:   jne    0x000000011ba382f0
  0x000000011ba382d9:   mov    QWORD PTR [rax+0x5a0],rbx
  0x000000011ba382e0:   mov    QWORD PTR [rax+0x5a8],0x1
  0x000000011ba382eb:   jmp    0x000000011ba3831c
  0x000000011ba382f0:   cmp    QWORD PTR [rax+0x5b0],0x0
  0x000000011ba382fb:   jne    0x000000011ba38314
  0x000000011ba382fd:   mov    QWORD PTR [rax+0x5b0],rbx
  0x000000011ba38304:   mov    QWORD PTR [rax+0x5b8],0x1
  0x000000011ba3830f:   jmp    0x000000011ba3831c
  0x000000011ba38314:   add    QWORD PTR [rax+0x590],0x1
  0x000000011ba3831c:   mov    edx,DWORD PTR [rsp+0xe4]
  0x000000011ba38323:   mov    rax,rsi
  0x000000011ba38326:   mov    rsi,rax
  0x000000011ba38329:   nop    DWORD PTR [rax+0x0]
  0x000000011ba3832d:   movabs rax,0xffffffffffffffff
  0x000000011ba38337:   call   0x000000011b42dd80           ; ImmutableOopMap {[192]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@335 (line 378)
                                                            ;   {virtual_call}
  0x000000011ba3833c:   cmp    eax,0x2e
  0x000000011ba3833f:   movabs rdx,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba38349:   movabs rsi,0x5d8
  0x000000011ba38353:   jne    0x000000011ba38363
  0x000000011ba38359:   movabs rsi,0x5c8
  0x000000011ba38363:   mov    rdi,QWORD PTR [rdx+rsi*1]
  0x000000011ba38367:   lea    rdi,[rdi+0x1]
  0x000000011ba3836b:   mov    QWORD PTR [rdx+rsi*1],rdi
  0x000000011ba3836f:   jne    0x000000011ba38b5a
  0x000000011ba38375:   mov    esi,DWORD PTR [rsp+0xe0]
  0x000000011ba3837c:   cmp    esi,0x13
  0x000000011ba3837f:   movabs rdx,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba38389:   movabs rsi,0x5f8
  0x000000011ba38393:   jle    0x000000011ba383a3
  0x000000011ba38399:   movabs rsi,0x608
  0x000000011ba383a3:   mov    rdi,QWORD PTR [rdx+rsi*1]
  0x000000011ba383a7:   lea    rdi,[rdi+0x1]
  0x000000011ba383ab:   mov    QWORD PTR [rdx+rsi*1],rdi
  0x000000011ba383af:   jle    0x000000011ba386e8
  0x000000011ba383b5:   mov    edx,DWORD PTR [rsp+0xcc]
  0x000000011ba383bc:   mov    edi,0x0
  0x000000011ba383c1:   movabs rbx,0x0
  0x000000011ba383cb:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011ba383d0:   mov    DWORD PTR [rsp+0x104],edi
  0x000000011ba383d7:   mov    QWORD PTR [rsp+0x110],rbx
  0x000000011ba383df:   mov    ebx,DWORD PTR [rsp+0xac]
  0x000000011ba383e6:   mov    rsi,QWORD PTR [rsp+0xc0]
  0x000000011ba383ee:   cmp    edx,ebx
  0x000000011ba383f0:   movabs rcx,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba383fa:   movabs r8,0x618
  0x000000011ba38404:   jge    0x000000011ba38414
  0x000000011ba3840a:   movabs r8,0x628
  0x000000011ba38414:   mov    r9,QWORD PTR [rcx+r8*1]
  0x000000011ba38418:   lea    r9,[r9+0x1]
  0x000000011ba3841c:   mov    QWORD PTR [rcx+r8*1],r9
  0x000000011ba38420:   jge    0x000000011ba38664
  0x000000011ba38426:   mov    DWORD PTR [rsp+0xac],ebx
  0x000000011ba3842d:   cmp    rax,QWORD PTR [rsi]          ; implicit exception: dispatches to 0x000000011ba38d32
  0x000000011ba38430:   mov    rcx,rsi
  0x000000011ba38433:   movabs r8,0x13a82aa88               ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba3843d:   mov    ecx,DWORD PTR [rcx+0x8]
  0x000000011ba38440:   movabs r10,0x800000000
  0x000000011ba3844a:   add    rcx,r10
  0x000000011ba3844d:   cmp    rcx,QWORD PTR [r8+0x648]
  0x000000011ba38454:   jne    0x000000011ba38463
  0x000000011ba38456:   add    QWORD PTR [r8+0x650],0x1
  0x000000011ba3845e:   jmp    0x000000011ba384c9
  0x000000011ba38463:   cmp    rcx,QWORD PTR [r8+0x658]
  0x000000011ba3846a:   jne    0x000000011ba38479
  0x000000011ba3846c:   add    QWORD PTR [r8+0x660],0x1
  0x000000011ba38474:   jmp    0x000000011ba384c9
  0x000000011ba38479:   cmp    QWORD PTR [r8+0x648],0x0
  0x000000011ba38484:   jne    0x000000011ba3849d
  0x000000011ba38486:   mov    QWORD PTR [r8+0x648],rcx
  0x000000011ba3848d:   mov    QWORD PTR [r8+0x650],0x1
  0x000000011ba38498:   jmp    0x000000011ba384c9
  0x000000011ba3849d:   cmp    QWORD PTR [r8+0x658],0x0
  0x000000011ba384a8:   jne    0x000000011ba384c1
  0x000000011ba384aa:   mov    QWORD PTR [r8+0x658],rcx
  0x000000011ba384b1:   mov    QWORD PTR [r8+0x660],0x1
  0x000000011ba384bc:   jmp    0x000000011ba384c9
  0x000000011ba384c1:   add    QWORD PTR [r8+0x638],0x1
  0x000000011ba384c9:   mov    rcx,rdx
  0x000000011ba384cc:   mov    rdx,rcx
  0x000000011ba384cf:   mov    r8,rsi
  0x000000011ba384d2:   mov    rsi,r8
  0x000000011ba384d5:   mov    DWORD PTR [rsp+0x118],ecx
  0x000000011ba384dc:   nop
  0x000000011ba384dd:   movabs rax,0xffffffffffffffff
  0x000000011ba384e7:   call   0x000000011b42dd80           ; ImmutableOopMap {[192]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@376 (line 389)
                                                            ;   {virtual_call}
  0x000000011ba384ec:   cmp    eax,0x2e
  0x000000011ba384ef:   movabs rsi,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba384f9:   movabs rdx,0x670
  0x000000011ba38503:   jne    0x000000011ba38513
  0x000000011ba38509:   movabs rdx,0x680
  0x000000011ba38513:   mov    rdi,QWORD PTR [rsi+rdx*1]
  0x000000011ba38517:   lea    rdi,[rdi+0x1]
  0x000000011ba3851b:   mov    QWORD PTR [rsi+rdx*1],rdi
  0x000000011ba3851f:   jne    0x000000011ba3854b
  0x000000011ba38525:   mov    edi,DWORD PTR [rsp+0x104]
  0x000000011ba3852c:   inc    edi
  0x000000011ba3852e:   movabs rsi,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba38538:   inc    DWORD PTR [rsi+0x690]
  0x000000011ba3853e:   mov    rbx,QWORD PTR [rsp+0x110]
  0x000000011ba38546:   jmp    0x000000011ba385f2
  0x000000011ba3854b:   mov    DWORD PTR [rsp+0x11c],eax
  0x000000011ba38552:   movabs rsi,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba3855c:   add    QWORD PTR [rsi+0x6a8],0x1
  0x000000011ba38564:   mov    rsi,QWORD PTR [rsp+0x110]
  0x000000011ba3856c:   movabs rdx,0xde0b6b3a7640000
  0x000000011ba38576:   nop
  0x000000011ba38577:   call   0x000000011b42e080           ; ImmutableOopMap {[192]=Oop }
                                                            ;*invokestatic compareUnsigned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@401 (line 393)
                                                            ;   {static_call}
  0x000000011ba3857c:   cmp    eax,0x0
  0x000000011ba3857f:   movabs rax,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba38589:   movabs rsi,0x6b8
  0x000000011ba38593:   jge    0x000000011ba385a3
  0x000000011ba38599:   movabs rsi,0x6c8
  0x000000011ba385a3:   mov    rdx,QWORD PTR [rax+rsi*1]
  0x000000011ba385a7:   lea    rdx,[rdx+0x1]
  0x000000011ba385ab:   mov    QWORD PTR [rax+rsi*1],rdx
  0x000000011ba385af:   jge    0x000000011ba38642
  0x000000011ba385b5:   mov    esi,DWORD PTR [rsp+0x11c]
  0x000000011ba385bc:   movabs rax,0xa
  0x000000011ba385c6:   mov    rdx,rax
  0x000000011ba385c9:   mov    rax,QWORD PTR [rsp+0x110]
  0x000000011ba385d1:   imul   rax,rdx
  0x000000011ba385d5:   movsxd rsi,esi
  0x000000011ba385d8:   add    rax,rsi
  0x000000011ba385db:   movabs r10,0x30
  0x000000011ba385e5:   sub    rax,r10
  0x000000011ba385e8:   mov    edi,DWORD PTR [rsp+0x104]
  0x000000011ba385ef:   mov    rbx,rax
  0x000000011ba385f2:   mov    edx,DWORD PTR [rsp+0x118]
  0x000000011ba385f9:   inc    edx
  0x000000011ba385fb:   movabs rsi,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba38605:   mov    ecx,DWORD PTR [rsi+0xb0]
  0x000000011ba3860b:   add    ecx,0x2
  0x000000011ba3860e:   mov    DWORD PTR [rsi+0xb0],ecx
  0x000000011ba38614:   and    ecx,0x3ffe
  0x000000011ba3861a:   cmp    ecx,0x0
  0x000000011ba3861d:   je     0x000000011ba38d37
  0x000000011ba38623:   mov    r10,QWORD PTR [r15+0x340]    ; ImmutableOopMap {[192]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@426 (line 388)
  0x000000011ba3862a:   test   DWORD PTR [r10],eax          ;   {poll}
  0x000000011ba3862d:   movabs rsi,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba38637:   inc    DWORD PTR [rsi+0x6d8]
  0x000000011ba3863d:   jmp    0x000000011ba383d0
  0x000000011ba38642:   mov    edi,DWORD PTR [rsp+0x104]
  0x000000011ba38649:   mov    rbx,QWORD PTR [rsp+0x110]
  0x000000011ba38651:   mov    edx,DWORD PTR [rsp+0x118]
  0x000000011ba38658:   mov    esi,DWORD PTR [rsp+0xac]
  0x000000011ba3865f:   jmp    0x000000011ba38676
  0x000000011ba38664:   mov    edi,DWORD PTR [rsp+0x104]
  0x000000011ba3866b:   mov    rsi,rbx
  0x000000011ba3866e:   mov    rbx,QWORD PTR [rsp+0x110]
  0x000000011ba38676:   cmp    edx,esi
  0x000000011ba38678:   movabs rsi,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba38682:   movabs rcx,0x6f0
  0x000000011ba3868c:   jge    0x000000011ba3869c
  0x000000011ba38692:   movabs rcx,0x700
  0x000000011ba3869c:   mov    r8,QWORD PTR [rsi+rcx*1]
  0x000000011ba386a0:   lea    r8,[r8+0x1]
  0x000000011ba386a4:   mov    QWORD PTR [rsi+rcx*1],r8
  0x000000011ba386a8:   jge    0x000000011ba386c8
  0x000000011ba386ae:   movabs rsi,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba386b8:   inc    DWORD PTR [rsi+0x710]
  0x000000011ba386be:   mov    esi,0x1
  0x000000011ba386c3:   jmp    0x000000011ba386cd
  0x000000011ba386c8:   mov    esi,0x0
  0x000000011ba386cd:   movabs rcx,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba386d7:   inc    DWORD PTR [rcx+0x728]
  0x000000011ba386dd:   mov    rax,rdi
  0x000000011ba386e0:   mov    r11,rsi
  0x000000011ba386e3:   jmp    0x000000011ba38705
  0x000000011ba386e8:   mov    edx,DWORD PTR [rsp+0xfc]
  0x000000011ba386ef:   mov    r13,QWORD PTR [rsp+0xb8]
  0x000000011ba386f7:   mov    rbx,r13
  0x000000011ba386fa:   mov    eax,0x0
  0x000000011ba386ff:   mov    r11d,0x0
  0x000000011ba38705:   mov    r13,QWORD PTR [rsp+0x108]
  0x000000011ba3870d:   mov    r8d,DWORD PTR [rsp+0x100]
  0x000000011ba38715:   mov    edi,DWORD PTR [rsp+0xe4]
  0x000000011ba3871c:   mov    r9d,DWORD PTR [rsp+0xd0]
  0x000000011ba38724:   movabs rsi,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba3872e:   add    QWORD PTR [rsi+0x740],0x1
  0x000000011ba38736:   mov    rsi,rdx
  0x000000011ba38739:   mov    rdx,r9
  0x000000011ba3873c:   mov    rcx,rbx
  0x000000011ba3873f:   mov    r9,rdi
  0x000000011ba38742:   mov    rdi,r13
  0x000000011ba38745:   mov    DWORD PTR [rsp],r11d
  0x000000011ba38749:   mov    DWORD PTR [rsp+0x8],eax
  0x000000011ba3874d:   xchg   ax,ax
  0x000000011ba3874f:   call   0x000000011ba38ec5           ; ImmutableOopMap {[192]=Oop }
                                                            ;*invokestatic decFloatLiteralToDouble {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@463 (line 404)
                                                            ;   {static_call}
  0x000000011ba38754:   movabs rdx,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba3875e:   add    QWORD PTR [rdx+0x750],0x1
  0x000000011ba38766:   movabs rdx,0x13a61fa50              ;   {metadata(method data for {method} {0x0000000800031350} 'isNaN' '(D)Z' in 'java/lang/Double')}
  0x000000011ba38770:   mov    ecx,DWORD PTR [rdx+0xac]
  0x000000011ba38776:   add    ecx,0x2
  0x000000011ba38779:   mov    DWORD PTR [rdx+0xac],ecx
  0x000000011ba3877f:   and    ecx,0x1ffffe
  0x000000011ba38785:   cmp    ecx,0x0
  0x000000011ba38788:   je     0x000000011ba38d58
  0x000000011ba3878e:   vucomisd xmm0,xmm0
  0x000000011ba38792:   mov    edx,0xffffffff
  0x000000011ba38797:   jp     0x000000011ba387b1
  0x000000011ba3879d:   jb     0x000000011ba387b1
  0x000000011ba387a3:   mov    edx,0x0
  0x000000011ba387a8:   je     0x000000011ba387b1
  0x000000011ba387ae:   inc    rdx
  0x000000011ba387b1:   cmp    edx,0x0
  0x000000011ba387b4:   movabs rdx,0x13a61fa50              ;   {metadata(method data for {method} {0x0000000800031350} 'isNaN' '(D)Z' in 'java/lang/Double')}
  0x000000011ba387be:   movabs rcx,0xf0
  0x000000011ba387c8:   je     0x000000011ba387d8
  0x000000011ba387ce:   movabs rcx,0x100
  0x000000011ba387d8:   mov    rsi,QWORD PTR [rdx+rcx*1]
  0x000000011ba387dc:   lea    rsi,[rsi+0x1]
  0x000000011ba387e0:   mov    QWORD PTR [rdx+rcx*1],rsi
  0x000000011ba387e4:   je     0x000000011ba38804
  0x000000011ba387ea:   movabs rdx,0x13a61fa50              ;   {metadata(method data for {method} {0x0000000800031350} 'isNaN' '(D)Z' in 'java/lang/Double')}
  0x000000011ba387f4:   inc    DWORD PTR [rdx+0x110]
  0x000000011ba387fa:   mov    edx,0x1
  0x000000011ba387ff:   jmp    0x000000011ba38809
  0x000000011ba38804:   mov    edx,0x0
  0x000000011ba38809:   and    edx,0x1
  0x000000011ba3880c:   cmp    edx,0x0
  0x000000011ba3880f:   movabs rdx,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba38819:   movabs rcx,0x760
  0x000000011ba38823:   je     0x000000011ba38833
  0x000000011ba38829:   movabs rcx,0x770
  0x000000011ba38833:   mov    rsi,QWORD PTR [rdx+rcx*1]
  0x000000011ba38837:   lea    rsi,[rsi+0x1]
  0x000000011ba3883b:   mov    QWORD PTR [rdx+rcx*1],rsi
  0x000000011ba3883f:   je     0x000000011ba38b44
  0x000000011ba38845:   mov    rsi,QWORD PTR [rsp+0xc0]
  0x000000011ba3884d:   movabs rdx,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba38857:   add    QWORD PTR [rdx+0x780],0x1
  0x000000011ba3885f:   movabs rdx,0x13a82b5e8              ;   {metadata(method data for {method} {0x000000013a80e8a8} 'parseRestOfDecimalFloatLiteralTheHardWay' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba38869:   mov    ecx,DWORD PTR [rdx+0xac]
  0x000000011ba3886f:   add    ecx,0x2
  0x000000011ba38872:   mov    DWORD PTR [rdx+0xac],ecx
  0x000000011ba38878:   and    ecx,0x1ffffe
  0x000000011ba3887e:   cmp    ecx,0x0
  0x000000011ba38881:   je     0x000000011ba38d79
  0x000000011ba38887:   cmp    rax,QWORD PTR [rsi]          ; implicit exception: dispatches to 0x000000011ba38d9a
  0x000000011ba3888a:   mov    rdx,rsi
  0x000000011ba3888d:   movabs rcx,0x13a82b5e8              ;   {metadata(method data for {method} {0x000000013a80e8a8} 'parseRestOfDecimalFloatLiteralTheHardWay' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba38897:   mov    edx,DWORD PTR [rdx+0x8]
  0x000000011ba3889a:   movabs r10,0x800000000
  0x000000011ba388a4:   add    rdx,r10
  0x000000011ba388a7:   cmp    rdx,QWORD PTR [rcx+0x100]
  0x000000011ba388ae:   jne    0x000000011ba388bd
  0x000000011ba388b0:   add    QWORD PTR [rcx+0x108],0x1
  0x000000011ba388b8:   jmp    0x000000011ba38923
  0x000000011ba388bd:   cmp    rdx,QWORD PTR [rcx+0x110]
  0x000000011ba388c4:   jne    0x000000011ba388d3
  0x000000011ba388c6:   add    QWORD PTR [rcx+0x118],0x1
  0x000000011ba388ce:   jmp    0x000000011ba38923
  0x000000011ba388d3:   cmp    QWORD PTR [rcx+0x100],0x0
  0x000000011ba388de:   jne    0x000000011ba388f7
  0x000000011ba388e0:   mov    QWORD PTR [rcx+0x100],rdx
  0x000000011ba388e7:   mov    QWORD PTR [rcx+0x108],0x1
  0x000000011ba388f2:   jmp    0x000000011ba38923
  0x000000011ba388f7:   cmp    QWORD PTR [rcx+0x110],0x0
  0x000000011ba38902:   jne    0x000000011ba3891b
  0x000000011ba38904:   mov    QWORD PTR [rcx+0x110],rdx
  0x000000011ba3890b:   mov    QWORD PTR [rcx+0x118],0x1
  0x000000011ba38916:   jmp    0x000000011ba38923
  0x000000011ba3891b:   add    QWORD PTR [rcx+0xf0],0x1
  0x000000011ba38923:   mov    edx,DWORD PTR [rsp+0xd4]
  0x000000011ba3892a:   mov    ecx,DWORD PTR [rsp+0xc8]
  0x000000011ba38931:   nop    DWORD PTR [rax+0x0]
  0x000000011ba38935:   movabs rax,0xffffffffffffffff
  0x000000011ba3893f:   call   0x000000011b42dd80           ; ImmutableOopMap {}
                                                            ;*invokeinterface subSequence {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteralTheHardWay@3 (line 423)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@479 (line 405)
                                                            ;   {virtual_call}
  0x000000011ba38944:   cmp    rax,QWORD PTR [rax]          ; implicit exception: dispatches to 0x000000011ba38d9f
  0x000000011ba38947:   mov    rsi,rax
  0x000000011ba3894a:   movabs rdi,0x13a82b5e8              ;   {metadata(method data for {method} {0x000000013a80e8a8} 'parseRestOfDecimalFloatLiteralTheHardWay' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba38954:   mov    esi,DWORD PTR [rsi+0x8]
  0x000000011ba38957:   movabs r10,0x800000000
  0x000000011ba38961:   add    rsi,r10
  0x000000011ba38964:   cmp    rsi,QWORD PTR [rdi+0x138]
  0x000000011ba3896b:   jne    0x000000011ba3897a
  0x000000011ba3896d:   add    QWORD PTR [rdi+0x140],0x1
  0x000000011ba38975:   jmp    0x000000011ba389e0
  0x000000011ba3897a:   cmp    rsi,QWORD PTR [rdi+0x148]
  0x000000011ba38981:   jne    0x000000011ba38990
  0x000000011ba38983:   add    QWORD PTR [rdi+0x150],0x1
  0x000000011ba3898b:   jmp    0x000000011ba389e0
  0x000000011ba38990:   cmp    QWORD PTR [rdi+0x138],0x0
  0x000000011ba3899b:   jne    0x000000011ba389b4
  0x000000011ba3899d:   mov    QWORD PTR [rdi+0x138],rsi
  0x000000011ba389a4:   mov    QWORD PTR [rdi+0x140],0x1
  0x000000011ba389af:   jmp    0x000000011ba389e0
  0x000000011ba389b4:   cmp    QWORD PTR [rdi+0x148],0x0
  0x000000011ba389bf:   jne    0x000000011ba389d8
  0x000000011ba389c1:   mov    QWORD PTR [rdi+0x148],rsi
  0x000000011ba389c8:   mov    QWORD PTR [rdi+0x150],0x1
  0x000000011ba389d3:   jmp    0x000000011ba389e0
  0x000000011ba389d8:   add    QWORD PTR [rdi+0x128],0x1
  0x000000011ba389e0:   mov    rsi,rax
  0x000000011ba389e3:   xchg   ax,ax
  0x000000011ba389e5:   movabs rax,0xffffffffffffffff
  0x000000011ba389ef:   call   0x000000011b42dd80           ; ImmutableOopMap {}
                                                            ;*invokeinterface toString {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteralTheHardWay@8 (line 423)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@479 (line 405)
                                                            ;   {virtual_call}
  0x000000011ba389f4:   movabs rsi,0x13a82b5e8              ;   {metadata(method data for {method} {0x000000013a80e8a8} 'parseRestOfDecimalFloatLiteralTheHardWay' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba389fe:   add    QWORD PTR [rsi+0x160],0x1
  0x000000011ba38a06:   movabs rsi,0x13a6a1fb8              ;   {metadata(method data for {method} {0x0000000800031508} 'parseDouble' '(Ljava/lang/String;)D' in 'java/lang/Double')}
  0x000000011ba38a10:   mov    edi,DWORD PTR [rsi+0xac]
  0x000000011ba38a16:   add    edi,0x2
  0x000000011ba38a19:   mov    DWORD PTR [rsi+0xac],edi
  0x000000011ba38a1f:   and    edi,0x1ffffe
  0x000000011ba38a25:   cmp    edi,0x0
  0x000000011ba38a28:   je     0x000000011ba38da4
  0x000000011ba38a2e:   movabs rsi,0x13a6a1fb8              ;   {metadata(method data for {method} {0x0000000800031508} 'parseDouble' '(Ljava/lang/String;)D' in 'java/lang/Double')}
  0x000000011ba38a38:   add    QWORD PTR [rsi+0xf0],0x1
  0x000000011ba38a40:   movabs rsi,0x13a6a20f8              ;   {metadata(method data for {method} {0x000000080015a5a8} 'parseDouble' '(Ljava/lang/String;)D' in 'jdk/internal/math/FloatingDecimal')}
  0x000000011ba38a4a:   mov    edi,DWORD PTR [rsi+0xac]
  0x000000011ba38a50:   add    edi,0x2
  0x000000011ba38a53:   mov    DWORD PTR [rsi+0xac],edi
  0x000000011ba38a59:   and    edi,0x1ffffe
  0x000000011ba38a5f:   cmp    edi,0x0
  0x000000011ba38a62:   je     0x000000011ba38dc5
  0x000000011ba38a68:   movabs rsi,0x13a6a20f8              ;   {metadata(method data for {method} {0x000000080015a5a8} 'parseDouble' '(Ljava/lang/String;)D' in 'jdk/internal/math/FloatingDecimal')}
  0x000000011ba38a72:   add    QWORD PTR [rsi+0xf0],0x1
  0x000000011ba38a7a:   mov    rsi,rax
  0x000000011ba38a7d:   xchg   ax,ax
  0x000000011ba38a7f:   call   0x000000011b42e080           ; ImmutableOopMap {}
                                                            ;*invokestatic readJavaFormatString {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.math.FloatingDecimal::parseDouble@1 (line 110)
                                                            ; - java.lang.Double::parseDouble@1 (line 651)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteralTheHardWay@13 (line 423)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@479 (line 405)
                                                            ;   {static_call}
  0x000000011ba38a84:   cmp    rax,QWORD PTR [rax]          ; implicit exception: dispatches to 0x000000011ba38de6
  0x000000011ba38a87:   mov    rsi,rax
  0x000000011ba38a8a:   movabs rdi,0x13a6a20f8              ;   {metadata(method data for {method} {0x000000080015a5a8} 'parseDouble' '(Ljava/lang/String;)D' in 'jdk/internal/math/FloatingDecimal')}
  0x000000011ba38a94:   mov    esi,DWORD PTR [rsi+0x8]
  0x000000011ba38a97:   movabs r10,0x800000000
  0x000000011ba38aa1:   add    rsi,r10
  0x000000011ba38aa4:   cmp    rsi,QWORD PTR [rdi+0x110]
  0x000000011ba38aab:   jne    0x000000011ba38aba
  0x000000011ba38aad:   add    QWORD PTR [rdi+0x118],0x1
  0x000000011ba38ab5:   jmp    0x000000011ba38b20
  0x000000011ba38aba:   cmp    rsi,QWORD PTR [rdi+0x120]
  0x000000011ba38ac1:   jne    0x000000011ba38ad0
  0x000000011ba38ac3:   add    QWORD PTR [rdi+0x128],0x1
  0x000000011ba38acb:   jmp    0x000000011ba38b20
  0x000000011ba38ad0:   cmp    QWORD PTR [rdi+0x110],0x0
  0x000000011ba38adb:   jne    0x000000011ba38af4
  0x000000011ba38add:   mov    QWORD PTR [rdi+0x110],rsi
  0x000000011ba38ae4:   mov    QWORD PTR [rdi+0x118],0x1
  0x000000011ba38aef:   jmp    0x000000011ba38b20
  0x000000011ba38af4:   cmp    QWORD PTR [rdi+0x120],0x0
  0x000000011ba38aff:   jne    0x000000011ba38b18
  0x000000011ba38b01:   mov    QWORD PTR [rdi+0x120],rsi
  0x000000011ba38b08:   mov    QWORD PTR [rdi+0x128],0x1
  0x000000011ba38b13:   jmp    0x000000011ba38b20
  0x000000011ba38b18:   add    QWORD PTR [rdi+0x100],0x1
  0x000000011ba38b20:   mov    rsi,rax
  0x000000011ba38b23:   xchg   ax,ax
  0x000000011ba38b25:   movabs rax,0xffffffffffffffff
  0x000000011ba38b2f:   call   0x000000011b42dd80           ; ImmutableOopMap {}
                                                            ;*invokeinterface doubleValue {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.math.FloatingDecimal::parseDouble@4 (line 110)
                                                            ; - java.lang.Double::parseDouble@1 (line 651)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteralTheHardWay@13 (line 423)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@479 (line 405)
                                                            ;   {virtual_call}
  0x000000011ba38b34:   movabs rsi,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba38b3e:   inc    DWORD PTR [rsi+0x790]
  0x000000011ba38b44:   add    rsp,0x130
  0x000000011ba38b4b:   pop    rbp
  0x000000011ba38b4c:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x000000011ba38b53:   ja     0x000000011ba38deb
  0x000000011ba38b59:   ret
  0x000000011ba38b5a:   mov    rsi,QWORD PTR [rsp+0xc0]
  0x000000011ba38b62:   movabs rdx,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba38b6c:   add    QWORD PTR [rdx+0x5e8],0x1
  0x000000011ba38b74:   mov    edx,DWORD PTR [rsp+0xd4]
  0x000000011ba38b7b:   mov    ecx,DWORD PTR [rsp+0xc8]
  0x000000011ba38b82:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011ba38b87:   call   0x000000011b42e080           ; ImmutableOopMap {}
                                                            ;*invokestatic newNumberFormatException {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@348 (line 379)
                                                            ;   {static_call}
  0x000000011ba38b8c:   cmp    rax,QWORD PTR [rax]          ; implicit exception: dispatches to 0x000000011ba38e01
  0x000000011ba38b8f:   jmp    0x000000011ba38e2f
  0x000000011ba38b94:   mov    rsi,QWORD PTR [rsp+0xc0]
  0x000000011ba38b9c:   movabs rdx,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba38ba6:   add    QWORD PTR [rdx+0x430],0x1
  0x000000011ba38bae:   mov    edx,DWORD PTR [rsp+0xd4]
  0x000000011ba38bb5:   mov    ecx,DWORD PTR [rsp+0xc8]
  0x000000011ba38bbc:   data16 xchg ax,ax
  0x000000011ba38bbf:   call   0x000000011b42e080           ; ImmutableOopMap {}
                                                            ;*invokestatic newNumberFormatException {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@233 (line 359)
                                                            ;   {static_call}
  0x000000011ba38bc4:   cmp    rax,QWORD PTR [rax]          ; implicit exception: dispatches to 0x000000011ba38e06
  0x000000011ba38bc7:   jmp    0x000000011ba38e2f
  0x000000011ba38bcc:   mov    r8d,DWORD PTR [rsp+0xc8]
  0x000000011ba38bd4:   mov    ecx,DWORD PTR [rsp+0xd4]
  0x000000011ba38bdb:   mov    rsi,QWORD PTR [rsp+0xc0]
  0x000000011ba38be3:   movabs rdx,0x13a82aa88              ;   {metadata(method data for {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba38bed:   add    QWORD PTR [rdx+0x1d0],0x1
  0x000000011ba38bf5:   mov    rdx,rcx
  0x000000011ba38bf8:   mov    rcx,r8
  0x000000011ba38bfb:   nop    DWORD PTR [rax+0x0]
  0x000000011ba38bff:   call   0x000000011b42e080           ; ImmutableOopMap {}
                                                            ;*invokestatic newNumberFormatException {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@72 (line 332)
                                                            ;   {static_call}
  0x000000011ba38c04:   cmp    rax,QWORD PTR [rax]          ; implicit exception: dispatches to 0x000000011ba38e0b
  0x000000011ba38c07:   jmp    0x000000011ba38e2f
  0x000000011ba38c0c:   movabs r10,0x13a80e750              ;   {metadata({method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba38c16:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011ba38c1b:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011ba38c23:   call   0x000000011b4db500           ; ImmutableOopMap {rsi=Oop [192]=Oop }
                                                            ;*synchronization entry
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@-1 (line 319)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba38c28:   jmp    0x000000011ba37264
  0x000000011ba38c2d:   call   0x000000011b4d5b20           ; ImmutableOopMap {rsi=Oop [192]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@22 (line 326)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba38c32:   movabs r10,0x13a80dd50              ;   {metadata({method} {0x000000013a80dd50} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba38c3c:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011ba38c41:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011ba38c49:   call   0x000000011b4db500           ; ImmutableOopMap {[192]=Oop }
                                                            ;*synchronization entry
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::isDigit@-1 (line 79)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@31 (line 327)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba38c4e:   jmp    0x000000011ba373d9
  0x000000011ba38c53:   movabs r10,0x13a80e750              ;   {metadata({method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba38c5d:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011ba38c62:   mov    QWORD PTR [rsp],0x52
  0x000000011ba38c6a:   call   0x000000011b4db500           ; ImmutableOopMap {[192]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@82 (line 325)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba38c6f:   jmp    0x000000011ba375ab
  0x000000011ba38c74:   call   0x000000011b4d5b20           ; ImmutableOopMap {rsi=Oop [192]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@164 (line 353)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba38c79:   call   0x000000011b4d5b20           ; ImmutableOopMap {rsi=Oop [192]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@211 (line 356)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba38c7e:   movabs r10,0x13a80dd50              ;   {metadata({method} {0x000000013a80dd50} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba38c88:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011ba38c8d:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011ba38c95:   call   0x000000011b4db500           ; ImmutableOopMap {[192]=Oop }
                                                            ;*synchronization entry
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::isDigit@-1 (line 79)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@224 (line 358)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba38c9a:   jmp    0x000000011ba37b4d
  0x000000011ba38c9f:   call   0x000000011b4d5b20           ; ImmutableOopMap {rbx=Oop [192]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@272 (line 366)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba38ca4:   movabs r10,0x13a80dd50              ;   {metadata({method} {0x000000013a80dd50} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba38cae:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011ba38cb3:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011ba38cbb:   call   0x000000011b4db500           ; ImmutableOopMap {[192]=Oop }
                                                            ;*synchronization entry
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::isDigit@-1 (line 79)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@285 (line 367)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba38cc0:   jmp    0x000000011ba37e07
  0x000000011ba38cc5:   movabs r10,0x13a80e750              ;   {metadata({method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba38ccf:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011ba38cd4:   mov    QWORD PTR [rsp],0x120
  0x000000011ba38cdc:   call   0x000000011b4db500           ; ImmutableOopMap {[192]=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@288 (line 367)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba38ce1:   jmp    0x000000011ba37ee3
  0x000000011ba38ce6:   movabs r10,0x13a80ee10              ;   {metadata({method} {0x000000013a80ee10} 'skipWhitespace' '(Ljava/lang/CharSequence;II)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba38cf0:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011ba38cf5:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011ba38cfd:   call   0x000000011b4db500           ; ImmutableOopMap {[192]=Oop }
                                                            ;*synchronization entry
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@-1 (line 548)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@313 (line 376)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba38d02:   jmp    0x000000011ba37fe1
  0x000000011ba38d07:   call   0x000000011b4d5b20           ; ImmutableOopMap {rsi=Oop [192]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@9 (line 550)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@313 (line 376)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba38d0c:   movabs r10,0x13a80ee10              ;   {metadata({method} {0x000000013a80ee10} 'skipWhitespace' '(Ljava/lang/CharSequence;II)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba38d16:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011ba38d1b:   mov    QWORD PTR [rsp],0x19
  0x000000011ba38d23:   call   0x000000011b4db500           ; ImmutableOopMap {[192]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@25 (line 549)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@313 (line 376)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba38d28:   jmp    0x000000011ba38126
  0x000000011ba38d2d:   call   0x000000011b4d5b20           ; ImmutableOopMap {rsi=Oop [192]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@335 (line 378)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba38d32:   call   0x000000011b4d5b20           ; ImmutableOopMap {rsi=Oop [192]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@376 (line 389)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba38d37:   movabs r10,0x13a80e750              ;   {metadata({method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba38d41:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011ba38d46:   mov    QWORD PTR [rsp],0x1aa
  0x000000011ba38d4e:   call   0x000000011b4db500           ; ImmutableOopMap {[192]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@426 (line 388)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba38d53:   jmp    0x000000011ba38623
  0x000000011ba38d58:   movabs r10,0x800031350              ;   {metadata({method} {0x0000000800031350} 'isNaN' '(D)Z' in 'java/lang/Double')}
  0x000000011ba38d62:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011ba38d67:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011ba38d6f:   call   0x000000011b4db500           ; ImmutableOopMap {[192]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Double::isNaN@-1 (line 663)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@470 (line 405)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba38d74:   jmp    0x000000011ba3878e
  0x000000011ba38d79:   movabs r10,0x13a80e8a8              ;   {metadata({method} {0x000000013a80e8a8} 'parseRestOfDecimalFloatLiteralTheHardWay' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba38d83:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011ba38d88:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011ba38d90:   call   0x000000011b4db500           ; ImmutableOopMap {rsi=Oop [192]=Oop }
                                                            ;*synchronization entry
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteralTheHardWay@-1 (line 423)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@479 (line 405)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba38d95:   jmp    0x000000011ba38887
  0x000000011ba38d9a:   call   0x000000011b4d5b20           ; ImmutableOopMap {rsi=Oop [192]=Oop }
                                                            ;*invokeinterface subSequence {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteralTheHardWay@3 (line 423)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@479 (line 405)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba38d9f:   call   0x000000011b4d5b20           ; ImmutableOopMap {rax=Oop }
                                                            ;*invokeinterface toString {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteralTheHardWay@8 (line 423)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@479 (line 405)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba38da4:   movabs r10,0x800031508              ;   {metadata({method} {0x0000000800031508} 'parseDouble' '(Ljava/lang/String;)D' in 'java/lang/Double')}
  0x000000011ba38dae:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011ba38db3:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011ba38dbb:   call   0x000000011b4db500           ; ImmutableOopMap {rax=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Double::parseDouble@-1 (line 651)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteralTheHardWay@13 (line 423)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@479 (line 405)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba38dc0:   jmp    0x000000011ba38a2e
  0x000000011ba38dc5:   movabs r10,0x80015a5a8              ;   {metadata({method} {0x000000080015a5a8} 'parseDouble' '(Ljava/lang/String;)D' in 'jdk/internal/math/FloatingDecimal')}
  0x000000011ba38dcf:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011ba38dd4:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011ba38ddc:   call   0x000000011b4db500           ; ImmutableOopMap {rax=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.internal.math.FloatingDecimal::parseDouble@-1 (line 110)
                                                            ; - java.lang.Double::parseDouble@1 (line 651)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteralTheHardWay@13 (line 423)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@479 (line 405)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba38de1:   jmp    0x000000011ba38a68
  0x000000011ba38de6:   call   0x000000011b4d5b20           ; ImmutableOopMap {rax=Oop }
                                                            ;*invokeinterface doubleValue {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.math.FloatingDecimal::parseDouble@4 (line 110)
                                                            ; - java.lang.Double::parseDouble@1 (line 651)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteralTheHardWay@13 (line 423)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@479 (line 405)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba38deb:   movabs r10,0x11ba38b4c              ;   {internal_word}
  0x000000011ba38df5:   mov    QWORD PTR [r15+0x350],r10
  0x000000011ba38dfc:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x000000011ba38e01:   call   0x000000011b4d5b20           ; ImmutableOopMap {rax=Oop }
                                                            ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@351 (line 379)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba38e06:   call   0x000000011b4d5b20           ; ImmutableOopMap {rax=Oop }
                                                            ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@236 (line 359)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba38e0b:   call   0x000000011b4d5b20           ; ImmutableOopMap {rax=Oop }
                                                            ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@75 (line 332)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba38e10:   nop
  0x000000011ba38e11:   nop
  0x000000011ba38e12:   mov    rax,QWORD PTR [r15+0x3c8]
  0x000000011ba38e19:   mov    QWORD PTR [r15+0x3c8],0x0
  0x000000011ba38e24:   mov    QWORD PTR [r15+0x3d0],0x0
  0x000000011ba38e2f:   add    rsp,0x130
  0x000000011ba38e36:   pop    rbp
  0x000000011ba38e37:   jmp    0x000000011b446f00           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba38e3c:   hlt
  0x000000011ba38e3d:   hlt
  0x000000011ba38e3e:   hlt
  0x000000011ba38e3f:   hlt
[Stub Code]
  0x000000011ba38e40:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x000000011ba38e45:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011ba38e4f:   jmp    0x000000011ba38e4f           ;   {runtime_call}
  0x000000011ba38e54:   nop
  0x000000011ba38e55:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011ba38e5f:   jmp    0x000000011ba38e5f           ;   {runtime_call}
  0x000000011ba38e64:   nop
  0x000000011ba38e65:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011ba38e6f:   jmp    0x000000011ba38e6f           ;   {runtime_call}
  0x000000011ba38e74:   nop
  0x000000011ba38e75:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011ba38e7f:   jmp    0x000000011ba38e7f           ;   {runtime_call}
  0x000000011ba38e84:   nop
  0x000000011ba38e85:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011ba38e8f:   jmp    0x000000011ba38e8f           ;   {runtime_call}
  0x000000011ba38e94:   nop
  0x000000011ba38e95:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011ba38e9f:   jmp    0x000000011ba38e9f           ;   {runtime_call}
  0x000000011ba38ea4:   nop
  0x000000011ba38ea5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011ba38eaf:   jmp    0x000000011ba38eaf           ;   {runtime_call}
  0x000000011ba38eb4:   nop
  0x000000011ba38eb5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011ba38ebf:   jmp    0x000000011ba38ebf           ;   {runtime_call}
  0x000000011ba38ec4:   nop
  0x000000011ba38ec5:   movabs rbx,0x13a8357b0              ;   {static_stub}
  0x000000011ba38ecf:   jmp    0x000000011b508501           ;   {runtime_call I2C/C2I adapters}
  0x000000011ba38ed4:   nop
  0x000000011ba38ed5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011ba38edf:   jmp    0x000000011ba38edf           ;   {runtime_call}
  0x000000011ba38ee4:   nop
  0x000000011ba38ee5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011ba38eef:   jmp    0x000000011ba38eef           ;   {runtime_call}
  0x000000011ba38ef4:   nop
  0x000000011ba38ef5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011ba38eff:   jmp    0x000000011ba38eff           ;   {runtime_call}
  0x000000011ba38f04:   nop
  0x000000011ba38f05:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011ba38f0f:   jmp    0x000000011ba38f0f           ;   {runtime_call}
  0x000000011ba38f14:   nop
  0x000000011ba38f15:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011ba38f1f:   jmp    0x000000011ba38f1f           ;   {runtime_call}
  0x000000011ba38f24:   nop
  0x000000011ba38f25:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011ba38f2f:   jmp    0x000000011ba38f2f           ;   {runtime_call}
  0x000000011ba38f34:   nop
  0x000000011ba38f35:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011ba38f3f:   jmp    0x000000011ba38f3f           ;   {runtime_call}
[Exception Handler]
  0x000000011ba38f44:   call   0x000000011b4d7900           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba38f49:   movabs rdi,0x10db45fc1              ;   {external_word}
  0x000000011ba38f53:   and    rsp,0xfffffffffffffff0
  0x000000011ba38f57:   call   0x000000010d7f0290           ;   {runtime_call _ZN14MacroAssembler7debug64EPcxPx}
  0x000000011ba38f5c:   hlt
[Deopt Handler Code]
  0x000000011ba38f5d:   movabs r10,0x11ba38f5d              ;   {section_word}
  0x000000011ba38f67:   push   r10
  0x000000011ba38f69:   jmp    0x000000011b4333a0           ;   {runtime_call DeoptimizationBlob}
  0x000000011ba38f6e:   hlt
  0x000000011ba38f6f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     281  551       4       ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::isDigit (18 bytes)
 total in heap  [0x0000000122ee0190,0x0000000122ee03b0] = 544
 relocation     [0x0000000122ee02f0,0x0000000122ee0300] = 16
 main code      [0x0000000122ee0300,0x0000000122ee0360] = 96
 stub code      [0x0000000122ee0360,0x0000000122ee0378] = 24
 oops           [0x0000000122ee0378,0x0000000122ee0380] = 8
 scopes data    [0x0000000122ee0380,0x0000000122ee0388] = 8
 scopes pcs     [0x0000000122ee0388,0x0000000122ee03a8] = 32
 dependencies   [0x0000000122ee03a8,0x0000000122ee03b0] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013a82eb30} 'isDigit' '(B)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray'
  # parm0:    rsi       = byte
  #           [sp+0x20]  (sp of caller)
  0x0000000122ee0300:   sub    rsp,0x18
  0x0000000122ee0307:   mov    QWORD PTR [rsp+0x10],rbp
  0x0000000122ee030c:   add    esi,0xffffffd0
  0x0000000122ee030f:   cmp    esi,0xa
  0x0000000122ee0312:   jae    0x0000000122ee032c
  0x0000000122ee0314:   mov    eax,0x1
  0x0000000122ee0319:   add    rsp,0x10
  0x0000000122ee031d:   pop    rbp
  0x0000000122ee031e:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x0000000122ee0325:   ja     0x0000000122ee0330
  0x0000000122ee032b:   ret
  0x0000000122ee032c:   xor    eax,eax
  0x0000000122ee032e:   jmp    0x0000000122ee0319
  0x0000000122ee0330:   movabs r10,0x122ee031e              ;   {internal_word}
  0x0000000122ee033a:   mov    QWORD PTR [r15+0x350],r10
  0x0000000122ee0341:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x0000000122ee0346:   hlt
  0x0000000122ee0347:   hlt
  0x0000000122ee0348:   hlt
  0x0000000122ee0349:   hlt
  0x0000000122ee034a:   hlt
  0x0000000122ee034b:   hlt
  0x0000000122ee034c:   hlt
  0x0000000122ee034d:   hlt
  0x0000000122ee034e:   hlt
  0x0000000122ee034f:   hlt
  0x0000000122ee0350:   hlt
  0x0000000122ee0351:   hlt
  0x0000000122ee0352:   hlt
  0x0000000122ee0353:   hlt
  0x0000000122ee0354:   hlt
  0x0000000122ee0355:   hlt
  0x0000000122ee0356:   hlt
  0x0000000122ee0357:   hlt
  0x0000000122ee0358:   hlt
  0x0000000122ee0359:   hlt
  0x0000000122ee035a:   hlt
  0x0000000122ee035b:   hlt
  0x0000000122ee035c:   hlt
  0x0000000122ee035d:   hlt
  0x0000000122ee035e:   hlt
  0x0000000122ee035f:   hlt
[Exception Handler]
  0x0000000122ee0360:   jmp    0x000000011b447880           ;   {no_reloc}
[Deopt Handler Code]
  0x0000000122ee0365:   call   0x0000000122ee036a
  0x0000000122ee036a:   sub    QWORD PTR [rsp],0x5
  0x0000000122ee036f:   jmp    0x000000011b4333a0           ;   {runtime_call DeoptimizationBlob}
  0x0000000122ee0374:   hlt
  0x0000000122ee0375:   hlt
  0x0000000122ee0376:   hlt
  0x0000000122ee0377:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     284  564       3       ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral (512 bytes)
 total in heap  [0x000000011ba3d190,0x000000011ba3f348] = 8632
 relocation     [0x000000011ba3d2f0,0x000000011ba3d478] = 392
 main code      [0x000000011ba3d480,0x000000011ba3eaa0] = 5664
 stub code      [0x000000011ba3eaa0,0x000000011ba3eb40] = 160
 oops           [0x000000011ba3eb40,0x000000011ba3eb48] = 8
 metadata       [0x000000011ba3eb48,0x000000011ba3eb70] = 40
 scopes data    [0x000000011ba3eb70,0x000000011ba3ef90] = 1056
 scopes pcs     [0x000000011ba3ef90,0x000000011ba3f2b0] = 800
 dependencies   [0x000000011ba3f2b0,0x000000011ba3f2b8] = 8
 nul chk table  [0x000000011ba3f2b8,0x000000011ba3f348] = 144

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  # parm3:    r8        = int
  # parm4:    r9        = boolean
  # parm5:    rdi       = boolean
  #           [sp+0x100]  (sp of caller)
  0x000000011ba3d480:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ba3d487:   push   rbp
  0x000000011ba3d488:   sub    rsp,0xf0
  0x000000011ba3d48f:   mov    QWORD PTR [rsp+0x88],rsi
  0x000000011ba3d497:   mov    DWORD PTR [rsp+0x9c],edx
  0x000000011ba3d49e:   mov    DWORD PTR [rsp+0xb0],ecx
  0x000000011ba3d4a5:   mov    DWORD PTR [rsp+0x84],r8d
  0x000000011ba3d4ad:   mov    DWORD PTR [rsp+0xac],r9d
  0x000000011ba3d4b5:   mov    DWORD PTR [rsp+0xa8],edi
  0x000000011ba3d4bc:   movabs rax,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3d4c6:   mov    ebx,DWORD PTR [rax+0xac]
  0x000000011ba3d4cc:   add    ebx,0x2
  0x000000011ba3d4cf:   mov    DWORD PTR [rax+0xac],ebx
  0x000000011ba3d4d5:   and    ebx,0x7fe
  0x000000011ba3d4db:   cmp    ebx,0x0
  0x000000011ba3d4de:   je     0x000000011ba3e804
  0x000000011ba3d4e4:   mov    rbx,rdx
  0x000000011ba3d4e7:   mov    eax,0x0
  0x000000011ba3d4ec:   mov    r11d,0xffffffff
  0x000000011ba3d4f2:   movabs r13,0x0
  0x000000011ba3d4fc:   mov    DWORD PTR [rsp+0x80],eax
  0x000000011ba3d503:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011ba3d508:   cmp    ebx,r8d
  0x000000011ba3d50b:   movabs r14,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3d515:   movabs rax,0xf0
  0x000000011ba3d51f:   jge    0x000000011ba3d52f
  0x000000011ba3d525:   movabs rax,0x100
  0x000000011ba3d52f:   mov    r8,QWORD PTR [r14+rax*1]
  0x000000011ba3d533:   lea    r8,[r8+0x1]
  0x000000011ba3d537:   mov    QWORD PTR [r14+rax*1],r8
  0x000000011ba3d53b:   jge    0x000000011ba3d95e
  0x000000011ba3d541:   cmp    ebx,DWORD PTR [rsi+0xc]      ; implicit exception: dispatches to 0x000000011ba3e825
  0x000000011ba3d544:   jae    0x000000011ba3e82f
  0x000000011ba3d54a:   movsxd rax,ebx
  0x000000011ba3d54d:   movsx  r8d,BYTE PTR [rsi+rax*1+0x10]
  0x000000011ba3d553:   mov    DWORD PTR [rsp+0x94],r8d
  0x000000011ba3d55b:   movabs rax,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3d565:   add    QWORD PTR [rax+0x110],0x1
  0x000000011ba3d56d:   movabs rax,0x13a837d10              ;   {metadata(method data for {method} {0x000000013a82eb30} 'isDigit' '(B)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3d577:   mov    r14d,DWORD PTR [rax+0xac]
  0x000000011ba3d57e:   add    r14d,0x2
  0x000000011ba3d582:   mov    DWORD PTR [rax+0xac],r14d
  0x000000011ba3d589:   and    r14d,0x1ffffe
  0x000000011ba3d590:   cmp    r14d,0x0
  0x000000011ba3d594:   je     0x000000011ba3e83d
  0x000000011ba3d59a:   cmp    r8d,0x30
  0x000000011ba3d59e:   movabs rax,0x13a837d10              ;   {metadata(method data for {method} {0x000000013a82eb30} 'isDigit' '(B)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3d5a8:   movabs r14,0xf0
  0x000000011ba3d5b2:   jl     0x000000011ba3d5c2
  0x000000011ba3d5b8:   movabs r14,0x100
  0x000000011ba3d5c2:   mov    rsi,QWORD PTR [rax+r14*1]
  0x000000011ba3d5c6:   lea    rsi,[rsi+0x1]
  0x000000011ba3d5ca:   mov    QWORD PTR [rax+r14*1],rsi
  0x000000011ba3d5ce:   jl     0x000000011ba3d60e
  0x000000011ba3d5d4:   cmp    r8d,0x39
  0x000000011ba3d5d8:   movabs rax,0x13a837d10              ;   {metadata(method data for {method} {0x000000013a82eb30} 'isDigit' '(B)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3d5e2:   movabs rsi,0x120
  0x000000011ba3d5ec:   jle    0x000000011ba3d5fc
  0x000000011ba3d5f2:   movabs rsi,0x110
  0x000000011ba3d5fc:   mov    r14,QWORD PTR [rax+rsi*1]
  0x000000011ba3d600:   lea    r14,[r14+0x1]
  0x000000011ba3d604:   mov    QWORD PTR [rax+rsi*1],r14
  0x000000011ba3d608:   jle    0x000000011ba3d618
  0x000000011ba3d60e:   mov    eax,0x0
  0x000000011ba3d613:   jmp    0x000000011ba3d62d
  0x000000011ba3d618:   movabs rax,0x13a837d10              ;   {metadata(method data for {method} {0x000000013a82eb30} 'isDigit' '(B)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3d622:   inc    DWORD PTR [rax+0x130]
  0x000000011ba3d628:   mov    eax,0x1
  0x000000011ba3d62d:   and    eax,0x1
  0x000000011ba3d630:   cmp    eax,0x0
  0x000000011ba3d633:   movabs rax,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3d63d:   movabs rsi,0x120
  0x000000011ba3d647:   je     0x000000011ba3d657
  0x000000011ba3d64d:   movabs rsi,0x130
  0x000000011ba3d657:   mov    r14,QWORD PTR [rax+rsi*1]
  0x000000011ba3d65b:   lea    r14,[r14+0x1]
  0x000000011ba3d65f:   mov    QWORD PTR [rax+rsi*1],r14
  0x000000011ba3d663:   je     0x000000011ba3d6a5
  0x000000011ba3d669:   movabs rax,0xa
  0x000000011ba3d673:   mov    rsi,rax
  0x000000011ba3d676:   mov    rax,r13
  0x000000011ba3d679:   imul   rax,rsi
  0x000000011ba3d67d:   movsxd rsi,r8d
  0x000000011ba3d680:   add    rax,rsi
  0x000000011ba3d683:   movabs r10,0x30
  0x000000011ba3d68d:   sub    rax,r10
  0x000000011ba3d690:   movabs rsi,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3d69a:   inc    DWORD PTR [rsi+0x140]
  0x000000011ba3d6a0:   jmp    0x000000011ba3d8f4
  0x000000011ba3d6a5:   cmp    r8d,0x2e
  0x000000011ba3d6a9:   movabs rsi,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3d6b3:   movabs rax,0x158
  0x000000011ba3d6bd:   jne    0x000000011ba3d6cd
  0x000000011ba3d6c3:   movabs rax,0x168
  0x000000011ba3d6cd:   mov    r14,QWORD PTR [rsi+rax*1]
  0x000000011ba3d6d1:   lea    r14,[r14+0x1]
  0x000000011ba3d6d5:   mov    QWORD PTR [rsi+rax*1],r14
  0x000000011ba3d6d9:   jne    0x000000011ba3d968
  0x000000011ba3d6df:   cmp    r11d,0xffffffff
  0x000000011ba3d6e3:   movabs rsi,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3d6ed:   movabs rax,0x188
  0x000000011ba3d6f7:   jne    0x000000011ba3d707
  0x000000011ba3d6fd:   movabs rax,0x178
  0x000000011ba3d707:   mov    r11,QWORD PTR [rsi+rax*1]
  0x000000011ba3d70b:   lea    r11,[r11+0x1]
  0x000000011ba3d70f:   mov    QWORD PTR [rsi+rax*1],r11
  0x000000011ba3d713:   jne    0x000000011ba3e7c4
  0x000000011ba3d719:   mov    rax,rbx
  0x000000011ba3d71c:   mov    QWORD PTR [rsp+0xa0],r13
  0x000000011ba3d724:   mov    DWORD PTR [rsp+0x98],ebx
  0x000000011ba3d72b:   jmp    0x000000011ba3d861
  0x000000011ba3d730:   mov    eax,DWORD PTR [rsp+0x90]
  0x000000011ba3d737:   mov    rsi,QWORD PTR [rsp+0x88]
  0x000000011ba3d73f:   movabs r14,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3d749:   add    QWORD PTR [r14+0x1c8],0x1
  0x000000011ba3d751:   mov    rdi,rax
  0x000000011ba3d754:   inc    edi
  0x000000011ba3d756:   movabs r14,0x13a82fea8              ;   {metadata(method data for {method} {0x000000013a82f438} 'tryToParseEightDigits' '([BI)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3d760:   mov    ebx,DWORD PTR [r14+0xac]
  0x000000011ba3d767:   add    ebx,0x2
  0x000000011ba3d76a:   mov    DWORD PTR [r14+0xac],ebx
  0x000000011ba3d771:   and    ebx,0x1ffffe
  0x000000011ba3d777:   cmp    ebx,0x0
  0x000000011ba3d77a:   je     0x000000011ba3e85e
  0x000000011ba3d780:   movabs rbx,0x13a82fea8              ;   {metadata(method data for {method} {0x000000013a82f438} 'tryToParseEightDigits' '([BI)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3d78a:   add    QWORD PTR [rbx+0xf0],0x1
  0x000000011ba3d792:   mov    rbx,rsi
  0x000000011ba3d795:   mov    rsi,rbx
  0x000000011ba3d798:   mov    rdx,rdi
  0x000000011ba3d79b:   mov    DWORD PTR [rsp+0x90],eax
  0x000000011ba3d7a2:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011ba3d7a7:   call   0x000000011ba3eaa5           ; ImmutableOopMap {[136]=Oop }
                                                            ;*invokestatic tryToParseEightDigitsSwarIndependentMultiplications {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::tryToParseEightDigits@2 (line 608)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@89 (line 358)
                                                            ;   {static_call}
  0x000000011ba3d7ac:   mov    rsi,rax
  0x000000011ba3d7af:   cmp    esi,0x0
  0x000000011ba3d7b2:   movabs rax,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3d7bc:   movabs rdx,0x1d8
  0x000000011ba3d7c6:   jl     0x000000011ba3d7d6
  0x000000011ba3d7cc:   movabs rdx,0x1e8
  0x000000011ba3d7d6:   mov    rdi,QWORD PTR [rax+rdx*1]
  0x000000011ba3d7da:   lea    rdi,[rdi+0x1]
  0x000000011ba3d7de:   mov    QWORD PTR [rax+rdx*1],rdi
  0x000000011ba3d7e2:   jl     0x000000011ba3d8b5
  0x000000011ba3d7e8:   movabs rax,0x5f5e100
  0x000000011ba3d7f2:   mov    rdx,rax
  0x000000011ba3d7f5:   mov    rax,QWORD PTR [rsp+0xa0]
  0x000000011ba3d7fd:   imul   rax,rdx
  0x000000011ba3d801:   movsxd rsi,esi
  0x000000011ba3d804:   add    rax,rsi
  0x000000011ba3d807:   mov    esi,DWORD PTR [rsp+0x90]
  0x000000011ba3d80e:   add    esi,0x8
  0x000000011ba3d811:   movabs rdx,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3d81b:   mov    edi,DWORD PTR [rdx+0xb0]
  0x000000011ba3d821:   add    edi,0x2
  0x000000011ba3d824:   mov    DWORD PTR [rdx+0xb0],edi
  0x000000011ba3d82a:   and    edi,0x3ffe
  0x000000011ba3d830:   cmp    edi,0x0
  0x000000011ba3d833:   je     0x000000011ba3e87f
  0x000000011ba3d839:   mov    r10,QWORD PTR [r15+0x340]    ; ImmutableOopMap {[136]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@114 (line 366)
  0x000000011ba3d840:   test   DWORD PTR [r10],eax          ;   {poll}
  0x000000011ba3d843:   movabs rdx,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3d84d:   inc    DWORD PTR [rdx+0x1f8]
  0x000000011ba3d853:   mov    r13,rax
  0x000000011ba3d856:   mov    QWORD PTR [rsp+0xa0],r13
  0x000000011ba3d85e:   mov    rax,rsi
  0x000000011ba3d861:   mov    r8d,DWORD PTR [rsp+0x84]
  0x000000011ba3d869:   mov    r14,r8
  0x000000011ba3d86c:   sub    r14d,0x9
  0x000000011ba3d870:   cmp    eax,r14d
  0x000000011ba3d873:   movabs r14,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3d87d:   movabs rsi,0x1a8
  0x000000011ba3d887:   jge    0x000000011ba3d897
  0x000000011ba3d88d:   movabs rsi,0x1b8
  0x000000011ba3d897:   mov    DWORD PTR [rsp+0x90],eax
  0x000000011ba3d89e:   mov    rax,QWORD PTR [r14+rsi*1]
  0x000000011ba3d8a2:   lea    rax,[rax+0x1]
  0x000000011ba3d8a6:   mov    QWORD PTR [r14+rsi*1],rax
  0x000000011ba3d8aa:   jge    0x000000011ba3d8d7
  0x000000011ba3d8b0:   jmp    0x000000011ba3d730
  0x000000011ba3d8b5:   mov    r13,QWORD PTR [rsp+0xa0]
  0x000000011ba3d8bd:   mov    esi,DWORD PTR [rsp+0x90]
  0x000000011ba3d8c4:   mov    r11d,DWORD PTR [rsp+0x98]
  0x000000011ba3d8cc:   mov    rax,r13
  0x000000011ba3d8cf:   mov    rbx,rsi
  0x000000011ba3d8d2:   jmp    0x000000011ba3d8f4
  0x000000011ba3d8d7:   mov    r13,QWORD PTR [rsp+0xa0]
  0x000000011ba3d8df:   mov    esi,DWORD PTR [rsp+0x90]
  0x000000011ba3d8e6:   mov    r11d,DWORD PTR [rsp+0x98]
  0x000000011ba3d8ee:   mov    rax,r13
  0x000000011ba3d8f1:   mov    rbx,rsi
  0x000000011ba3d8f4:   inc    ebx
  0x000000011ba3d8f6:   movabs rsi,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3d900:   mov    edx,DWORD PTR [rsi+0xb0]
  0x000000011ba3d906:   add    edx,0x2
  0x000000011ba3d909:   mov    DWORD PTR [rsi+0xb0],edx
  0x000000011ba3d90f:   and    edx,0x3ffe
  0x000000011ba3d915:   cmp    edx,0x0
  0x000000011ba3d918:   je     0x000000011ba3e8a0
  0x000000011ba3d91e:   mov    r10,QWORD PTR [r15+0x340]    ; ImmutableOopMap {[136]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@120 (line 347)
  0x000000011ba3d925:   test   DWORD PTR [r10],eax          ;   {poll}
  0x000000011ba3d928:   movabs rsi,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3d932:   inc    DWORD PTR [rsi+0x210]
  0x000000011ba3d938:   mov    esi,DWORD PTR [rsp+0x94]
  0x000000011ba3d93f:   mov    r13,rax
  0x000000011ba3d942:   mov    DWORD PTR [rsp+0x80],esi
  0x000000011ba3d949:   mov    r8d,DWORD PTR [rsp+0x84]
  0x000000011ba3d951:   mov    rsi,QWORD PTR [rsp+0x88]
  0x000000011ba3d959:   jmp    0x000000011ba3d508
  0x000000011ba3d95e:   mov    esi,DWORD PTR [rsp+0x80]
  0x000000011ba3d965:   mov    r8,rsi
  0x000000011ba3d968:   cmp    r11d,0xffffffff
  0x000000011ba3d96c:   movabs rax,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3d976:   movabs rsi,0x228
  0x000000011ba3d980:   jne    0x000000011ba3d990
  0x000000011ba3d986:   movabs rsi,0x238
  0x000000011ba3d990:   mov    rdx,QWORD PTR [rax+rsi*1]
  0x000000011ba3d994:   lea    rdx,[rdx+0x1]
  0x000000011ba3d998:   mov    QWORD PTR [rax+rsi*1],rdx
  0x000000011ba3d99c:   mov    rax,rbx
  0x000000011ba3d99f:   jne    0x000000011ba3d9cc
  0x000000011ba3d9a5:   sub    eax,DWORD PTR [rsp+0x9c]
  0x000000011ba3d9ac:   movabs rsi,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3d9b6:   inc    DWORD PTR [rsi+0x248]
  0x000000011ba3d9bc:   mov    rsi,rax
  0x000000011ba3d9bf:   mov    rdi,rbx
  0x000000011ba3d9c2:   mov    edx,0x0
  0x000000011ba3d9c7:   jmp    0x000000011ba3d9e5
  0x000000011ba3d9cc:   sub    eax,DWORD PTR [rsp+0x9c]
  0x000000011ba3d9d3:   dec    eax
  0x000000011ba3d9d5:   mov    rsi,r11
  0x000000011ba3d9d8:   sub    esi,ebx
  0x000000011ba3d9da:   mov    rdx,rsi
  0x000000011ba3d9dd:   inc    edx
  0x000000011ba3d9df:   mov    rsi,rax
  0x000000011ba3d9e2:   mov    rdi,r11
  0x000000011ba3d9e5:   cmp    r8d,0x65
  0x000000011ba3d9e9:   movabs rax,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3d9f3:   movabs rcx,0x260
  0x000000011ba3d9fd:   je     0x000000011ba3da0d
  0x000000011ba3da03:   movabs rcx,0x270
  0x000000011ba3da0d:   mov    r9,QWORD PTR [rax+rcx*1]
  0x000000011ba3da11:   lea    r9,[r9+0x1]
  0x000000011ba3da15:   mov    QWORD PTR [rax+rcx*1],r9
  0x000000011ba3da19:   je     0x000000011ba3da59
  0x000000011ba3da1f:   cmp    r8d,0x45
  0x000000011ba3da23:   movabs rax,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3da2d:   movabs rcx,0x280
  0x000000011ba3da37:   jne    0x000000011ba3da47
  0x000000011ba3da3d:   movabs rcx,0x290
  0x000000011ba3da47:   mov    r8,QWORD PTR [rax+rcx*1]
  0x000000011ba3da4b:   lea    r8,[r8+0x1]
  0x000000011ba3da4f:   mov    QWORD PTR [rax+rcx*1],r8
  0x000000011ba3da53:   jne    0x000000011ba3da73
  0x000000011ba3da59:   movabs rax,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3da63:   inc    DWORD PTR [rax+0x2a0]
  0x000000011ba3da69:   mov    eax,0x1
  0x000000011ba3da6e:   jmp    0x000000011ba3da78
  0x000000011ba3da73:   mov    eax,0x0
  0x000000011ba3da78:   cmp    eax,0x0
  0x000000011ba3da7b:   movabs rax,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3da85:   movabs rcx,0x2c8
  0x000000011ba3da8f:   jne    0x000000011ba3da9f
  0x000000011ba3da95:   movabs rcx,0x2b8
  0x000000011ba3da9f:   mov    r8,QWORD PTR [rax+rcx*1]
  0x000000011ba3daa3:   lea    r8,[r8+0x1]
  0x000000011ba3daa7:   mov    QWORD PTR [rax+rcx*1],r8
  0x000000011ba3daab:   jne    0x000000011ba3dae1
  0x000000011ba3dab1:   mov    rcx,rbx
  0x000000011ba3dab4:   movabs rax,0x0
  0x000000011ba3dabe:   mov    DWORD PTR [rsp+0xb4],edi
  0x000000011ba3dac5:   mov    QWORD PTR [rsp+0xb8],r13
  0x000000011ba3dacd:   mov    DWORD PTR [rsp+0x98],ebx
  0x000000011ba3dad4:   mov    r8,QWORD PTR [rsp+0x88]
  0x000000011ba3dadc:   jmp    0x000000011ba3e05a
  0x000000011ba3dae1:   mov    rax,rbx
  0x000000011ba3dae4:   inc    eax
  0x000000011ba3dae6:   cmp    eax,DWORD PTR [rsp+0x84]
  0x000000011ba3daed:   movabs rcx,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3daf7:   movabs r8,0x2d8
  0x000000011ba3db01:   jge    0x000000011ba3db11
  0x000000011ba3db07:   movabs r8,0x2e8
  0x000000011ba3db11:   mov    r9,QWORD PTR [rcx+r8*1]
  0x000000011ba3db15:   lea    r9,[r9+0x1]
  0x000000011ba3db19:   mov    QWORD PTR [rcx+r8*1],r9
  0x000000011ba3db1d:   mov    r8,QWORD PTR [rsp+0x88]
  0x000000011ba3db25:   jge    0x000000011ba3db54
  0x000000011ba3db2b:   cmp    eax,DWORD PTR [r8+0xc]       ; implicit exception: dispatches to 0x000000011ba3e8c1
  0x000000011ba3db2f:   jae    0x000000011ba3e8cb
  0x000000011ba3db35:   movsxd rcx,eax
  0x000000011ba3db38:   movsx  ecx,BYTE PTR [r8+rcx*1+0x10]
  0x000000011ba3db3e:   movabs r9,0x13a82b7e0               ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3db48:   inc    DWORD PTR [r9+0x2f8]
  0x000000011ba3db4f:   jmp    0x000000011ba3db59
  0x000000011ba3db54:   mov    ecx,0x0
  0x000000011ba3db59:   cmp    ecx,0x2d
  0x000000011ba3db5c:   movabs r9,0x13a82b7e0               ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3db66:   movabs r11,0x310
  0x000000011ba3db70:   jne    0x000000011ba3db80
  0x000000011ba3db76:   movabs r11,0x320
  0x000000011ba3db80:   mov    r14,QWORD PTR [r9+r11*1]
  0x000000011ba3db84:   lea    r14,[r14+0x1]
  0x000000011ba3db88:   mov    QWORD PTR [r9+r11*1],r14
  0x000000011ba3db8c:   jne    0x000000011ba3dbae
  0x000000011ba3db92:   movabs r9,0x13a82b7e0               ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3db9c:   inc    DWORD PTR [r9+0x330]
  0x000000011ba3dba3:   mov    r9d,0x1
  0x000000011ba3dba9:   jmp    0x000000011ba3dbb4
  0x000000011ba3dbae:   mov    r9d,0x0
  0x000000011ba3dbb4:   mov    QWORD PTR [rsp+0xb8],r13
  0x000000011ba3dbbc:   cmp    r9d,0x0
  0x000000011ba3dbc0:   movabs r11,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3dbca:   movabs r14,0x348
  0x000000011ba3dbd4:   jne    0x000000011ba3dbe4
  0x000000011ba3dbda:   movabs r14,0x358
  0x000000011ba3dbe4:   mov    r13,QWORD PTR [r11+r14*1]
  0x000000011ba3dbe8:   lea    r13,[r13+0x1]
  0x000000011ba3dbec:   mov    QWORD PTR [r11+r14*1],r13
  0x000000011ba3dbf0:   jne    0x000000011ba3dc2f
  0x000000011ba3dbf6:   cmp    ecx,0x2b
  0x000000011ba3dbf9:   movabs r11,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3dc03:   movabs r13,0x368
  0x000000011ba3dc0d:   jne    0x000000011ba3dc1d
  0x000000011ba3dc13:   movabs r13,0x378
  0x000000011ba3dc1d:   mov    r14,QWORD PTR [r11+r13*1]
  0x000000011ba3dc21:   lea    r14,[r14+0x1]
  0x000000011ba3dc25:   mov    QWORD PTR [r11+r13*1],r14
  0x000000011ba3dc29:   jne    0x000000011ba3dc9c
  0x000000011ba3dc2f:   inc    eax
  0x000000011ba3dc31:   cmp    eax,DWORD PTR [rsp+0x84]
  0x000000011ba3dc38:   movabs rcx,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3dc42:   movabs r11,0x388
  0x000000011ba3dc4c:   jge    0x000000011ba3dc5c
  0x000000011ba3dc52:   movabs r11,0x398
  0x000000011ba3dc5c:   mov    r13,QWORD PTR [rcx+r11*1]
  0x000000011ba3dc60:   lea    r13,[r13+0x1]
  0x000000011ba3dc64:   mov    QWORD PTR [rcx+r11*1],r13
  0x000000011ba3dc68:   jge    0x000000011ba3dc97
  0x000000011ba3dc6e:   cmp    eax,DWORD PTR [r8+0xc]       ; implicit exception: dispatches to 0x000000011ba3e8d9
  0x000000011ba3dc72:   jae    0x000000011ba3e8e3
  0x000000011ba3dc78:   movsxd rcx,eax
  0x000000011ba3dc7b:   movsx  ecx,BYTE PTR [r8+rcx*1+0x10]
  0x000000011ba3dc81:   movabs r11,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3dc8b:   inc    DWORD PTR [r11+0x3a8]
  0x000000011ba3dc92:   jmp    0x000000011ba3dc9c
  0x000000011ba3dc97:   mov    ecx,0x0
  0x000000011ba3dc9c:   movabs r11,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3dca6:   add    QWORD PTR [r11+0x3c0],0x1
  0x000000011ba3dcae:   movabs r11,0x13a837d10              ;   {metadata(method data for {method} {0x000000013a82eb30} 'isDigit' '(B)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3dcb8:   mov    r13d,DWORD PTR [r11+0xac]
  0x000000011ba3dcbf:   add    r13d,0x2
  0x000000011ba3dcc3:   mov    DWORD PTR [r11+0xac],r13d
  0x000000011ba3dcca:   and    r13d,0x1ffffe
  0x000000011ba3dcd1:   cmp    r13d,0x0
  0x000000011ba3dcd5:   je     0x000000011ba3e8f1
  0x000000011ba3dcdb:   cmp    ecx,0x30
  0x000000011ba3dcde:   movabs r11,0x13a837d10              ;   {metadata(method data for {method} {0x000000013a82eb30} 'isDigit' '(B)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3dce8:   movabs r13,0xf0
  0x000000011ba3dcf2:   jl     0x000000011ba3dd02
  0x000000011ba3dcf8:   movabs r13,0x100
  0x000000011ba3dd02:   mov    r14,QWORD PTR [r11+r13*1]
  0x000000011ba3dd06:   lea    r14,[r14+0x1]
  0x000000011ba3dd0a:   mov    QWORD PTR [r11+r13*1],r14
  0x000000011ba3dd0e:   jl     0x000000011ba3dd4d
  0x000000011ba3dd14:   cmp    ecx,0x39
  0x000000011ba3dd17:   movabs r11,0x13a837d10              ;   {metadata(method data for {method} {0x000000013a82eb30} 'isDigit' '(B)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3dd21:   movabs r13,0x120
  0x000000011ba3dd2b:   jle    0x000000011ba3dd3b
  0x000000011ba3dd31:   movabs r13,0x110
  0x000000011ba3dd3b:   mov    r14,QWORD PTR [r11+r13*1]
  0x000000011ba3dd3f:   lea    r14,[r14+0x1]
  0x000000011ba3dd43:   mov    QWORD PTR [r11+r13*1],r14
  0x000000011ba3dd47:   jle    0x000000011ba3dd58
  0x000000011ba3dd4d:   mov    r11d,0x0
  0x000000011ba3dd53:   jmp    0x000000011ba3dd6f
  0x000000011ba3dd58:   movabs r11,0x13a837d10              ;   {metadata(method data for {method} {0x000000013a82eb30} 'isDigit' '(B)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3dd62:   inc    DWORD PTR [r11+0x130]
  0x000000011ba3dd69:   mov    r11d,0x1
  0x000000011ba3dd6f:   and    r11d,0x1
  0x000000011ba3dd73:   cmp    r11d,0x0
  0x000000011ba3dd77:   movabs r11,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3dd81:   movabs r13,0x3e0
  0x000000011ba3dd8b:   je     0x000000011ba3dd9b
  0x000000011ba3dd91:   movabs r13,0x3d0
  0x000000011ba3dd9b:   mov    r14,QWORD PTR [r11+r13*1]
  0x000000011ba3dd9f:   lea    r14,[r14+0x1]
  0x000000011ba3dda3:   mov    QWORD PTR [r11+r13*1],r14
  0x000000011ba3dda7:   je     0x000000011ba3e77c
  0x000000011ba3ddad:   mov    r11,rax
  0x000000011ba3ddb0:   movabs r13,0x0
  0x000000011ba3ddba:   mov    DWORD PTR [rsp+0xb4],edi
  0x000000011ba3ddc1:   mov    DWORD PTR [rsp+0x98],ebx
  0x000000011ba3ddc8:   movabs rax,0x989680
  0x000000011ba3ddd2:   mov    r14,r13
  0x000000011ba3ddd5:   cmp    r14,rax
  0x000000011ba3ddd8:   movabs rax,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3dde2:   movabs r14,0x400
  0x000000011ba3ddec:   jge    0x000000011ba3ddfc
  0x000000011ba3ddf2:   movabs r14,0x410
  0x000000011ba3ddfc:   mov    rbx,QWORD PTR [rax+r14*1]
  0x000000011ba3de00:   lea    rbx,[rbx+0x1]
  0x000000011ba3de04:   mov    QWORD PTR [rax+r14*1],rbx
  0x000000011ba3de08:   jge    0x000000011ba3de38
  0x000000011ba3de0e:   movabs rax,0xa
  0x000000011ba3de18:   mov    rbx,rax
  0x000000011ba3de1b:   mov    rax,r13
  0x000000011ba3de1e:   imul   rax,rbx
  0x000000011ba3de22:   movsxd rcx,ecx
  0x000000011ba3de25:   add    rax,rcx
  0x000000011ba3de28:   movabs r10,0x30
  0x000000011ba3de32:   sub    rax,r10
  0x000000011ba3de35:   mov    r13,rax
  0x000000011ba3de38:   inc    r11d
  0x000000011ba3de3b:   cmp    r11d,DWORD PTR [rsp+0x84]
  0x000000011ba3de43:   movabs rbx,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3de4d:   movabs rax,0x420
  0x000000011ba3de57:   jge    0x000000011ba3de67
  0x000000011ba3de5d:   movabs rax,0x430
  0x000000011ba3de67:   mov    rcx,QWORD PTR [rbx+rax*1]
  0x000000011ba3de6b:   lea    rcx,[rcx+0x1]
  0x000000011ba3de6f:   mov    QWORD PTR [rbx+rax*1],rcx
  0x000000011ba3de73:   jge    0x000000011ba3dea1
  0x000000011ba3de79:   cmp    r11d,DWORD PTR [r8+0xc]      ; implicit exception: dispatches to 0x000000011ba3e912
  0x000000011ba3de7d:   jae    0x000000011ba3e91c
  0x000000011ba3de83:   movsxd rbx,r11d
  0x000000011ba3de86:   movsx  ebx,BYTE PTR [r8+rbx*1+0x10]
  0x000000011ba3de8c:   movabs rax,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3de96:   inc    DWORD PTR [rax+0x440]
  0x000000011ba3de9c:   jmp    0x000000011ba3dea6
  0x000000011ba3dea1:   mov    ebx,0x0
  0x000000011ba3dea6:   movabs rax,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3deb0:   add    QWORD PTR [rax+0x458],0x1
  0x000000011ba3deb8:   movabs rax,0x13a837d10              ;   {metadata(method data for {method} {0x000000013a82eb30} 'isDigit' '(B)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3dec2:   mov    ecx,DWORD PTR [rax+0xac]
  0x000000011ba3dec8:   add    ecx,0x2
  0x000000011ba3decb:   mov    DWORD PTR [rax+0xac],ecx
  0x000000011ba3ded1:   and    ecx,0x1ffffe
  0x000000011ba3ded7:   cmp    ecx,0x0
  0x000000011ba3deda:   je     0x000000011ba3e92a
  0x000000011ba3dee0:   cmp    ebx,0x30
  0x000000011ba3dee3:   movabs rax,0x13a837d10              ;   {metadata(method data for {method} {0x000000013a82eb30} 'isDigit' '(B)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3deed:   movabs rcx,0xf0
  0x000000011ba3def7:   jl     0x000000011ba3df07
  0x000000011ba3defd:   movabs rcx,0x100
  0x000000011ba3df07:   mov    r14,QWORD PTR [rax+rcx*1]
  0x000000011ba3df0b:   lea    r14,[r14+0x1]
  0x000000011ba3df0f:   mov    QWORD PTR [rax+rcx*1],r14
  0x000000011ba3df13:   jl     0x000000011ba3df52
  0x000000011ba3df19:   cmp    ebx,0x39
  0x000000011ba3df1c:   movabs rax,0x13a837d10              ;   {metadata(method data for {method} {0x000000013a82eb30} 'isDigit' '(B)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3df26:   movabs rcx,0x120
  0x000000011ba3df30:   jle    0x000000011ba3df40
  0x000000011ba3df36:   movabs rcx,0x110
  0x000000011ba3df40:   mov    r14,QWORD PTR [rax+rcx*1]
  0x000000011ba3df44:   lea    r14,[r14+0x1]
  0x000000011ba3df48:   mov    QWORD PTR [rax+rcx*1],r14
  0x000000011ba3df4c:   jle    0x000000011ba3df5c
  0x000000011ba3df52:   mov    eax,0x0
  0x000000011ba3df57:   jmp    0x000000011ba3df71
  0x000000011ba3df5c:   movabs rax,0x13a837d10              ;   {metadata(method data for {method} {0x000000013a82eb30} 'isDigit' '(B)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3df66:   inc    DWORD PTR [rax+0x130]
  0x000000011ba3df6c:   mov    eax,0x1
  0x000000011ba3df71:   and    eax,0x1
  0x000000011ba3df74:   cmp    eax,0x0
  0x000000011ba3df77:   mov    ecx,0x2
  0x000000011ba3df7c:   jne    0x000000011ba3df87
  0x000000011ba3df82:   mov    ecx,0x0
  0x000000011ba3df87:   movabs r14,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3df91:   mov    edi,DWORD PTR [r14+0xb0]
  0x000000011ba3df98:   add    edi,ecx
  0x000000011ba3df9a:   mov    DWORD PTR [r14+0xb0],edi
  0x000000011ba3dfa1:   cmp    ecx,0x0
  0x000000011ba3dfa4:   jne    0x000000011ba3dfaf
  0x000000011ba3dfaa:   mov    edi,0x2
  0x000000011ba3dfaf:   and    edi,0x3ffe
  0x000000011ba3dfb5:   cmp    edi,0x0
  0x000000011ba3dfb8:   je     0x000000011ba3e94b
  0x000000011ba3dfbe:   mov    r10,QWORD PTR [r15+0x340]    ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@316 (line 399)
  0x000000011ba3dfc5:   test   DWORD PTR [r10],eax          ;   {poll}
  0x000000011ba3dfc8:   cmp    eax,0x0
  0x000000011ba3dfcb:   movabs rdi,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3dfd5:   movabs rax,0x478
  0x000000011ba3dfdf:   je     0x000000011ba3dfef
  0x000000011ba3dfe5:   movabs rax,0x468
  0x000000011ba3dfef:   mov    rcx,QWORD PTR [rdi+rax*1]
  0x000000011ba3dff3:   lea    rcx,[rcx+0x1]
  0x000000011ba3dff7:   mov    QWORD PTR [rdi+rax*1],rcx
  0x000000011ba3dffb:   je     0x000000011ba3e009
  0x000000011ba3e001:   mov    rcx,rbx
  0x000000011ba3e004:   jmp    0x000000011ba3ddc8
  0x000000011ba3e009:   cmp    r9d,0x0
  0x000000011ba3e00d:   movabs rdi,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3e017:   movabs rbx,0x488
  0x000000011ba3e021:   je     0x000000011ba3e031
  0x000000011ba3e027:   movabs rbx,0x498
  0x000000011ba3e031:   mov    rax,QWORD PTR [rdi+rbx*1]
  0x000000011ba3e035:   lea    rax,[rax+0x1]
  0x000000011ba3e039:   mov    QWORD PTR [rdi+rbx*1],rax
  0x000000011ba3e03d:   je     0x000000011ba3e04c
  0x000000011ba3e043:   mov    rdi,r13
  0x000000011ba3e046:   neg    rdi
  0x000000011ba3e049:   mov    r13,rdi
  0x000000011ba3e04c:   movsxd rdx,edx
  0x000000011ba3e04f:   add    rdx,r13
  0x000000011ba3e052:   mov    edx,edx
  0x000000011ba3e054:   mov    rax,r13
  0x000000011ba3e057:   mov    rcx,r11
  0x000000011ba3e05a:   movabs rdi,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3e064:   add    QWORD PTR [rdi+0x4a8],0x1
  0x000000011ba3e06c:   movabs rdi,0x13a838378              ;   {metadata(method data for {method} {0x000000013a82f378} 'skipWhitespace' '([BII)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3e076:   mov    ebx,DWORD PTR [rdi+0xac]
  0x000000011ba3e07c:   add    ebx,0x2
  0x000000011ba3e07f:   mov    DWORD PTR [rdi+0xac],ebx
  0x000000011ba3e085:   and    ebx,0x1ffffe
  0x000000011ba3e08b:   cmp    ebx,0x0
  0x000000011ba3e08e:   je     0x000000011ba3e96c
  0x000000011ba3e094:   jmp    0x000000011ba3e136
  0x000000011ba3e099:   nop    DWORD PTR [rax+0x0]
  0x000000011ba3e0a0:   cmp    ecx,DWORD PTR [r8+0xc]       ; implicit exception: dispatches to 0x000000011ba3e98d
  0x000000011ba3e0a4:   jae    0x000000011ba3e997
  0x000000011ba3e0aa:   movsxd rdi,ecx
  0x000000011ba3e0ad:   movsx  edi,BYTE PTR [r8+rdi*1+0x10]
  0x000000011ba3e0b3:   and    edi,0xff
  0x000000011ba3e0b9:   cmp    edi,0x20
  0x000000011ba3e0bc:   movabs rdi,0x13a838378              ;   {metadata(method data for {method} {0x000000013a82f378} 'skipWhitespace' '([BII)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3e0c6:   movabs rbx,0x120
  0x000000011ba3e0d0:   jg     0x000000011ba3e0e0
  0x000000011ba3e0d6:   movabs rbx,0x110
  0x000000011ba3e0e0:   mov    r9,QWORD PTR [rdi+rbx*1]
  0x000000011ba3e0e4:   lea    r9,[r9+0x1]
  0x000000011ba3e0e8:   mov    QWORD PTR [rdi+rbx*1],r9
  0x000000011ba3e0ec:   jg     0x000000011ba3e178
  0x000000011ba3e0f2:   inc    ecx
  0x000000011ba3e0f4:   movabs rdi,0x13a838378              ;   {metadata(method data for {method} {0x000000013a82f378} 'skipWhitespace' '([BII)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3e0fe:   mov    ebx,DWORD PTR [rdi+0xb0]
  0x000000011ba3e104:   add    ebx,0x2
  0x000000011ba3e107:   mov    DWORD PTR [rdi+0xb0],ebx
  0x000000011ba3e10d:   and    ebx,0x3ffe
  0x000000011ba3e113:   cmp    ebx,0x0
  0x000000011ba3e116:   je     0x000000011ba3e9a5
  0x000000011ba3e11c:   mov    r10,QWORD PTR [r15+0x340]    ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::skipWhitespace@25 (line 592)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@341 (line 408)
  0x000000011ba3e123:   test   DWORD PTR [r10],eax          ;   {poll}
  0x000000011ba3e126:   movabs rdi,0x13a838378              ;   {metadata(method data for {method} {0x000000013a82f378} 'skipWhitespace' '([BII)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3e130:   inc    DWORD PTR [rdi+0x148]
  0x000000011ba3e136:   cmp    ecx,DWORD PTR [rsp+0x84]
  0x000000011ba3e13d:   movabs rdi,0x13a838378              ;   {metadata(method data for {method} {0x000000013a82f378} 'skipWhitespace' '([BII)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3e147:   movabs rbx,0xf0
  0x000000011ba3e151:   jge    0x000000011ba3e161
  0x000000011ba3e157:   movabs rbx,0x100
  0x000000011ba3e161:   mov    r9,QWORD PTR [rdi+rbx*1]
  0x000000011ba3e165:   lea    r9,[r9+0x1]
  0x000000011ba3e169:   mov    QWORD PTR [rdi+rbx*1],r9
  0x000000011ba3e16d:   jge    0x000000011ba3e188
  0x000000011ba3e173:   jmp    0x000000011ba3e0a0
  0x000000011ba3e178:   movabs rdi,0x13a838378              ;   {metadata(method data for {method} {0x000000013a82f378} 'skipWhitespace' '([BII)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3e182:   inc    DWORD PTR [rdi+0x130]
  0x000000011ba3e188:   cmp    ecx,DWORD PTR [rsp+0x84]
  0x000000011ba3e18f:   movabs rdi,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3e199:   movabs rbx,0x4b8
  0x000000011ba3e1a3:   jl     0x000000011ba3e1b3
  0x000000011ba3e1a9:   movabs rbx,0x4c8
  0x000000011ba3e1b3:   mov    r9,QWORD PTR [rdi+rbx*1]
  0x000000011ba3e1b7:   lea    r9,[r9+0x1]
  0x000000011ba3e1bb:   mov    QWORD PTR [rdi+rbx*1],r9
  0x000000011ba3e1bf:   jl     0x000000011ba3e73a
  0x000000011ba3e1c5:   mov    edi,DWORD PTR [rsp+0xa8]
  0x000000011ba3e1cc:   cmp    edi,0x0
  0x000000011ba3e1cf:   movabs rdi,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3e1d9:   movabs rbx,0x4e8
  0x000000011ba3e1e3:   je     0x000000011ba3e1f3
  0x000000011ba3e1e9:   movabs rbx,0x4d8
  0x000000011ba3e1f3:   mov    r9,QWORD PTR [rdi+rbx*1]
  0x000000011ba3e1f7:   lea    r9,[r9+0x1]
  0x000000011ba3e1fb:   mov    QWORD PTR [rdi+rbx*1],r9
  0x000000011ba3e1ff:   je     0x000000011ba3e211
  0x000000011ba3e205:   mov    edi,DWORD PTR [rsp+0xb4]
  0x000000011ba3e20c:   jmp    0x000000011ba3e29d
  0x000000011ba3e211:   cmp    esi,0x0
  0x000000011ba3e214:   movabs rdi,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3e21e:   movabs rbx,0x4f8
  0x000000011ba3e228:   jne    0x000000011ba3e238
  0x000000011ba3e22e:   movabs rbx,0x508
  0x000000011ba3e238:   mov    r9,QWORD PTR [rdi+rbx*1]
  0x000000011ba3e23c:   lea    r9,[r9+0x1]
  0x000000011ba3e240:   mov    QWORD PTR [rdi+rbx*1],r9
  0x000000011ba3e244:   mov    edi,DWORD PTR [rsp+0xb4]
  0x000000011ba3e24b:   jne    0x000000011ba3e29d
  0x000000011ba3e251:   cmp    edi,DWORD PTR [r8+0xc]       ; implicit exception: dispatches to 0x000000011ba3e9c6
  0x000000011ba3e255:   jae    0x000000011ba3e9d0
  0x000000011ba3e25b:   movsxd rbx,edi
  0x000000011ba3e25e:   movsx  ebx,BYTE PTR [r8+rbx*1+0x10]
  0x000000011ba3e264:   cmp    ebx,0x2e
  0x000000011ba3e267:   movabs rbx,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3e271:   movabs r9,0x528
  0x000000011ba3e27b:   jne    0x000000011ba3e28b
  0x000000011ba3e281:   movabs r9,0x518
  0x000000011ba3e28b:   mov    r11,QWORD PTR [rbx+r9*1]
  0x000000011ba3e28f:   lea    r11,[r11+0x1]
  0x000000011ba3e293:   mov    QWORD PTR [rbx+r9*1],r11
  0x000000011ba3e297:   jne    0x000000011ba3e73a
  0x000000011ba3e29d:   cmp    esi,0x13
  0x000000011ba3e2a0:   movabs rsi,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3e2aa:   movabs rbx,0x548
  0x000000011ba3e2b4:   jle    0x000000011ba3e2c4
  0x000000011ba3e2ba:   movabs rbx,0x558
  0x000000011ba3e2c4:   mov    r9,QWORD PTR [rsi+rbx*1]
  0x000000011ba3e2c8:   lea    r9,[r9+0x1]
  0x000000011ba3e2cc:   mov    QWORD PTR [rsi+rbx*1],r9
  0x000000011ba3e2d0:   jle    0x000000011ba3e569
  0x000000011ba3e2d6:   mov    esi,DWORD PTR [rsp+0x9c]
  0x000000011ba3e2dd:   mov    rbx,rsi
  0x000000011ba3e2e0:   mov    ecx,0x0
  0x000000011ba3e2e5:   movabs r9,0x0
  0x000000011ba3e2ef:   mov    QWORD PTR [rsp+0xd8],rax
  0x000000011ba3e2f7:   mov    DWORD PTR [rsp+0xd4],edx
  0x000000011ba3e2fe:   mov    DWORD PTR [rsp+0xb4],edi
  0x000000011ba3e305:   mov    esi,DWORD PTR [rsp+0x98]
  0x000000011ba3e30c:   nop    DWORD PTR [rax+0x0]
  0x000000011ba3e310:   cmp    ebx,esi
  0x000000011ba3e312:   movabs r11,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3e31c:   movabs r13,0x568
  0x000000011ba3e326:   jge    0x000000011ba3e336
  0x000000011ba3e32c:   movabs r13,0x578
  0x000000011ba3e336:   mov    r14,QWORD PTR [r11+r13*1]
  0x000000011ba3e33a:   lea    r14,[r14+0x1]
  0x000000011ba3e33e:   mov    QWORD PTR [r11+r13*1],r14
  0x000000011ba3e342:   jge    0x000000011ba3e4f7
  0x000000011ba3e348:   mov    DWORD PTR [rsp+0x98],esi
  0x000000011ba3e34f:   cmp    ebx,DWORD PTR [r8+0xc]       ; implicit exception: dispatches to 0x000000011ba3e9de
  0x000000011ba3e353:   jae    0x000000011ba3e9e8
  0x000000011ba3e359:   movsxd r11,ebx
  0x000000011ba3e35c:   movsx  r11d,BYTE PTR [r8+r11*1+0x10]
  0x000000011ba3e362:   cmp    r11d,0x2e
  0x000000011ba3e366:   movabs r13,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3e370:   movabs r14,0x588
  0x000000011ba3e37a:   jne    0x000000011ba3e38a
  0x000000011ba3e380:   movabs r14,0x598
  0x000000011ba3e38a:   mov    rsi,QWORD PTR [r13+r14*1+0x0]
  0x000000011ba3e38f:   lea    rsi,[rsi+0x1]
  0x000000011ba3e393:   mov    QWORD PTR [r13+r14*1+0x0],rsi
  0x000000011ba3e398:   jne    0x000000011ba3e3bc
  0x000000011ba3e39e:   inc    ecx
  0x000000011ba3e3a0:   movabs rsi,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3e3aa:   inc    DWORD PTR [rsi+0x5a8]
  0x000000011ba3e3b0:   mov    DWORD PTR [rsp+0xd0],ebx
  0x000000011ba3e3b7:   jmp    0x000000011ba3e47b
  0x000000011ba3e3bc:   mov    DWORD PTR [rsp+0xc8],r11d
  0x000000011ba3e3c4:   mov    DWORD PTR [rsp+0xcc],ecx
  0x000000011ba3e3cb:   mov    DWORD PTR [rsp+0xd0],ebx
  0x000000011ba3e3d2:   movabs r13,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3e3dc:   add    QWORD PTR [r13+0x5c0],0x1
  0x000000011ba3e3e4:   mov    rsi,r9
  0x000000011ba3e3e7:   movabs rdx,0xde0b6b3a7640000
  0x000000011ba3e3f1:   mov    QWORD PTR [rsp+0xc0],r9
  0x000000011ba3e3f9:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011ba3e3ff:   call   0x000000011b42e080           ; ImmutableOopMap {[136]=Oop }
                                                            ;*invokestatic compareUnsigned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@423 (line 425)
                                                            ;   {static_call}
  0x000000011ba3e404:   cmp    eax,0x0
  0x000000011ba3e407:   movabs rax,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3e411:   movabs rsi,0x5d0
  0x000000011ba3e41b:   jge    0x000000011ba3e42b
  0x000000011ba3e421:   movabs rsi,0x5e0
  0x000000011ba3e42b:   mov    rdx,QWORD PTR [rax+rsi*1]
  0x000000011ba3e42f:   lea    rdx,[rdx+0x1]
  0x000000011ba3e433:   mov    QWORD PTR [rax+rsi*1],rdx
  0x000000011ba3e437:   jge    0x000000011ba3e4da
  0x000000011ba3e43d:   mov    r11d,DWORD PTR [rsp+0xc8]
  0x000000011ba3e445:   movabs rax,0xa
  0x000000011ba3e44f:   mov    rsi,rax
  0x000000011ba3e452:   mov    rax,QWORD PTR [rsp+0xc0]
  0x000000011ba3e45a:   imul   rax,rsi
  0x000000011ba3e45e:   movsxd r11,r11d
  0x000000011ba3e461:   add    rax,r11
  0x000000011ba3e464:   movabs r10,0x30
  0x000000011ba3e46e:   sub    rax,r10
  0x000000011ba3e471:   mov    ecx,DWORD PTR [rsp+0xcc]
  0x000000011ba3e478:   mov    r9,rax
  0x000000011ba3e47b:   mov    ebx,DWORD PTR [rsp+0xd0]
  0x000000011ba3e482:   inc    ebx
  0x000000011ba3e484:   movabs rsi,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3e48e:   mov    edx,DWORD PTR [rsi+0xb0]
  0x000000011ba3e494:   add    edx,0x2
  0x000000011ba3e497:   mov    DWORD PTR [rsi+0xb0],edx
  0x000000011ba3e49d:   and    edx,0x3ffe
  0x000000011ba3e4a3:   cmp    edx,0x0
  0x000000011ba3e4a6:   je     0x000000011ba3e9f6
  0x000000011ba3e4ac:   mov    r10,QWORD PTR [r15+0x340]    ; ImmutableOopMap {[136]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@448 (line 420)
  0x000000011ba3e4b3:   test   DWORD PTR [r10],eax          ;   {poll}
  0x000000011ba3e4b6:   movabs rsi,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3e4c0:   inc    DWORD PTR [rsi+0x5f0]
  0x000000011ba3e4c6:   mov    esi,DWORD PTR [rsp+0x98]
  0x000000011ba3e4cd:   mov    r8,QWORD PTR [rsp+0x88]
  0x000000011ba3e4d5:   jmp    0x000000011ba3e310
  0x000000011ba3e4da:   mov    ecx,DWORD PTR [rsp+0xcc]
  0x000000011ba3e4e1:   mov    r9,QWORD PTR [rsp+0xc0]
  0x000000011ba3e4e9:   mov    ebx,DWORD PTR [rsp+0xd0]
  0x000000011ba3e4f0:   mov    esi,DWORD PTR [rsp+0x98]
  0x000000011ba3e4f7:   cmp    ebx,esi
  0x000000011ba3e4f9:   movabs rsi,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3e503:   movabs rdx,0x608
  0x000000011ba3e50d:   jge    0x000000011ba3e51d
  0x000000011ba3e513:   movabs rdx,0x618
  0x000000011ba3e51d:   mov    r8,QWORD PTR [rsi+rdx*1]
  0x000000011ba3e521:   lea    r8,[r8+0x1]
  0x000000011ba3e525:   mov    QWORD PTR [rsi+rdx*1],r8
  0x000000011ba3e529:   jge    0x000000011ba3e549
  0x000000011ba3e52f:   movabs rsi,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3e539:   inc    DWORD PTR [rsi+0x628]
  0x000000011ba3e53f:   mov    esi,0x1
  0x000000011ba3e544:   jmp    0x000000011ba3e54e
  0x000000011ba3e549:   mov    esi,0x0
  0x000000011ba3e54e:   movabs rdx,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3e558:   inc    DWORD PTR [rdx+0x640]
  0x000000011ba3e55e:   mov    rax,rcx
  0x000000011ba3e561:   mov    r11,rsi
  0x000000011ba3e564:   jmp    0x000000011ba3e598
  0x000000011ba3e569:   mov    QWORD PTR [rsp+0xd8],rax
  0x000000011ba3e571:   mov    DWORD PTR [rsp+0xd4],edx
  0x000000011ba3e578:   mov    DWORD PTR [rsp+0xb4],edi
  0x000000011ba3e57f:   mov    r13,QWORD PTR [rsp+0xb8]
  0x000000011ba3e587:   mov    r9,r13
  0x000000011ba3e58a:   mov    rbx,rcx
  0x000000011ba3e58d:   mov    eax,0x0
  0x000000011ba3e592:   mov    r11d,0x0
  0x000000011ba3e598:   mov    r13,QWORD PTR [rsp+0xd8]
  0x000000011ba3e5a0:   mov    r8d,DWORD PTR [rsp+0xd4]
  0x000000011ba3e5a8:   mov    edi,DWORD PTR [rsp+0xb4]
  0x000000011ba3e5af:   mov    edx,DWORD PTR [rsp+0xac]
  0x000000011ba3e5b6:   movabs rsi,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3e5c0:   add    QWORD PTR [rsi+0x658],0x1
  0x000000011ba3e5c8:   mov    rsi,rbx
  0x000000011ba3e5cb:   mov    rcx,r9
  0x000000011ba3e5ce:   mov    r9,rdi
  0x000000011ba3e5d1:   mov    rdi,r13
  0x000000011ba3e5d4:   mov    DWORD PTR [rsp],r11d
  0x000000011ba3e5d8:   mov    DWORD PTR [rsp+0x8],eax
  0x000000011ba3e5dc:   data16 xchg ax,ax
  0x000000011ba3e5df:   call   0x000000011ba3eac5           ; ImmutableOopMap {[136]=Oop }
                                                            ;*invokestatic decFloatLiteralToDouble {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@485 (line 437)
                                                            ;   {static_call}
  0x000000011ba3e5e4:   movabs rsi,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3e5ee:   add    QWORD PTR [rsi+0x668],0x1
  0x000000011ba3e5f6:   movabs rsi,0x13a61fa50              ;   {metadata(method data for {method} {0x0000000800031350} 'isNaN' '(D)Z' in 'java/lang/Double')}
  0x000000011ba3e600:   mov    edx,DWORD PTR [rsi+0xac]
  0x000000011ba3e606:   add    edx,0x2
  0x000000011ba3e609:   mov    DWORD PTR [rsi+0xac],edx
  0x000000011ba3e60f:   and    edx,0x1ffffe
  0x000000011ba3e615:   cmp    edx,0x0
  0x000000011ba3e618:   je     0x000000011ba3ea17
  0x000000011ba3e61e:   vucomisd xmm0,xmm0
  0x000000011ba3e622:   mov    esi,0xffffffff
  0x000000011ba3e627:   jp     0x000000011ba3e641
  0x000000011ba3e62d:   jb     0x000000011ba3e641
  0x000000011ba3e633:   mov    esi,0x0
  0x000000011ba3e638:   je     0x000000011ba3e641
  0x000000011ba3e63e:   inc    rsi
  0x000000011ba3e641:   cmp    esi,0x0
  0x000000011ba3e644:   movabs rsi,0x13a61fa50              ;   {metadata(method data for {method} {0x0000000800031350} 'isNaN' '(D)Z' in 'java/lang/Double')}
  0x000000011ba3e64e:   movabs rdx,0xf0
  0x000000011ba3e658:   je     0x000000011ba3e668
  0x000000011ba3e65e:   movabs rdx,0x100
  0x000000011ba3e668:   mov    rcx,QWORD PTR [rsi+rdx*1]
  0x000000011ba3e66c:   lea    rcx,[rcx+0x1]
  0x000000011ba3e670:   mov    QWORD PTR [rsi+rdx*1],rcx
  0x000000011ba3e674:   je     0x000000011ba3e694
  0x000000011ba3e67a:   movabs rsi,0x13a61fa50              ;   {metadata(method data for {method} {0x0000000800031350} 'isNaN' '(D)Z' in 'java/lang/Double')}
  0x000000011ba3e684:   inc    DWORD PTR [rsi+0x110]
  0x000000011ba3e68a:   mov    esi,0x1
  0x000000011ba3e68f:   jmp    0x000000011ba3e699
  0x000000011ba3e694:   mov    esi,0x0
  0x000000011ba3e699:   and    esi,0x1
  0x000000011ba3e69c:   cmp    esi,0x0
  0x000000011ba3e69f:   movabs rsi,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3e6a9:   movabs rdx,0x678
  0x000000011ba3e6b3:   je     0x000000011ba3e6c3
  0x000000011ba3e6b9:   movabs rdx,0x688
  0x000000011ba3e6c3:   mov    rcx,QWORD PTR [rsi+rdx*1]
  0x000000011ba3e6c7:   lea    rcx,[rcx+0x1]
  0x000000011ba3e6cb:   mov    QWORD PTR [rsi+rdx*1],rcx
  0x000000011ba3e6cf:   je     0x000000011ba3e724
  0x000000011ba3e6d5:   movabs rsi,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3e6df:   add    QWORD PTR [rsi+0x698],0x1
  0x000000011ba3e6e7:   mov    r8d,DWORD PTR [rsp+0x84]
  0x000000011ba3e6ef:   sub    r8d,DWORD PTR [rsp+0xb0]
  0x000000011ba3e6f7:   mov    rsi,QWORD PTR [rsp+0x88]
  0x000000011ba3e6ff:   mov    edx,DWORD PTR [rsp+0xb0]
  0x000000011ba3e706:   mov    rcx,r8
  0x000000011ba3e709:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011ba3e70f:   call   0x000000011b42e080           ; ImmutableOopMap {}
                                                            ;*invokestatic parseRestOfDecimalFloatLiteralTheHardWay {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@503 (line 438)
                                                            ;   {static_call}
  0x000000011ba3e714:   movabs rsi,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3e71e:   inc    DWORD PTR [rsi+0x6a8]
  0x000000011ba3e724:   add    rsp,0xf0
  0x000000011ba3e72b:   pop    rbp
  0x000000011ba3e72c:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x000000011ba3e733:   ja     0x000000011ba3ea38
  0x000000011ba3e739:   ret
  0x000000011ba3e73a:   movabs rsi,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3e744:   add    QWORD PTR [rsi+0x538],0x1
  0x000000011ba3e74c:   mov    r8d,DWORD PTR [rsp+0x84]
  0x000000011ba3e754:   sub    r8d,DWORD PTR [rsp+0xb0]
  0x000000011ba3e75c:   mov    rsi,QWORD PTR [rsp+0x88]
  0x000000011ba3e764:   mov    edx,DWORD PTR [rsp+0xb0]
  0x000000011ba3e76b:   mov    rcx,r8
  0x000000011ba3e76e:   nop
  0x000000011ba3e76f:   call   0x000000011b42e080           ; ImmutableOopMap {}
                                                            ;*invokestatic newNumberFormatException {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@374 (line 411)
                                                            ;   {static_call}
  0x000000011ba3e774:   cmp    rax,QWORD PTR [rax]          ; implicit exception: dispatches to 0x000000011ba3ea4e
  0x000000011ba3e777:   jmp    0x000000011ba3ea7c
  0x000000011ba3e77c:   movabs rsi,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3e786:   add    QWORD PTR [rsi+0x3f0],0x1
  0x000000011ba3e78e:   mov    r8d,DWORD PTR [rsp+0x84]
  0x000000011ba3e796:   sub    r8d,DWORD PTR [rsp+0xb0]
  0x000000011ba3e79e:   mov    rsi,QWORD PTR [rsp+0x88]
  0x000000011ba3e7a6:   mov    edx,DWORD PTR [rsp+0xb0]
  0x000000011ba3e7ad:   mov    rcx,r8
  0x000000011ba3e7b0:   nop    DWORD PTR [rax+0x0]
  0x000000011ba3e7b7:   call   0x000000011b42e080           ; ImmutableOopMap {}
                                                            ;*invokestatic newNumberFormatException {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@265 (line 391)
                                                            ;   {static_call}
  0x000000011ba3e7bc:   cmp    rax,QWORD PTR [rax]          ; implicit exception: dispatches to 0x000000011ba3ea53
  0x000000011ba3e7bf:   jmp    0x000000011ba3ea7c
  0x000000011ba3e7c4:   mov    r8d,DWORD PTR [rsp+0x84]
  0x000000011ba3e7cc:   mov    ecx,DWORD PTR [rsp+0xb0]
  0x000000011ba3e7d3:   mov    rsi,QWORD PTR [rsp+0x88]
  0x000000011ba3e7db:   movabs rdx,0x13a82b7e0              ;   {metadata(method data for {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3e7e5:   add    QWORD PTR [rdx+0x198],0x1
  0x000000011ba3e7ed:   sub    r8d,ecx
  0x000000011ba3e7f0:   mov    rdx,rcx
  0x000000011ba3e7f3:   mov    rcx,r8
  0x000000011ba3e7f6:   nop
  0x000000011ba3e7f7:   call   0x000000011b42e080           ; ImmutableOopMap {}
                                                            ;*invokestatic newNumberFormatException {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@70 (line 354)
                                                            ;   {static_call}
  0x000000011ba3e7fc:   cmp    rax,QWORD PTR [rax]          ; implicit exception: dispatches to 0x000000011ba3ea58
  0x000000011ba3e7ff:   jmp    0x000000011ba3ea7c
  0x000000011ba3e804:   movabs r10,0x13a82f040              ;   {metadata({method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3e80e:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011ba3e813:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011ba3e81b:   call   0x000000011b4db500           ; ImmutableOopMap {rsi=Oop [136]=Oop }
                                                            ;*synchronization entry
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@-1 (line 341)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba3e820:   jmp    0x000000011ba3d4e4
  0x000000011ba3e825:   call   0x000000011b4d5b20           ; ImmutableOopMap {rsi=Oop [136]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@22 (line 348)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba3e82a:   call   0x000000011b4d5b20           ; ImmutableOopMap {rsi=Oop [136]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@22 (line 348)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba3e82f:   mov    QWORD PTR [rsp],rbx
  0x000000011ba3e833:   mov    QWORD PTR [rsp+0x8],rsi
  0x000000011ba3e838:   call   0x000000011b4d4f20           ; ImmutableOopMap {rsi=Oop [136]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@22 (line 348)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba3e83d:   movabs r10,0x13a82eb30              ;   {metadata({method} {0x000000013a82eb30} 'isDigit' '(B)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3e847:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011ba3e84c:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011ba3e854:   call   0x000000011b4db500           ; ImmutableOopMap {rsi=Oop [136]=Oop }
                                                            ;*synchronization entry
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::isDigit@-1 (line 100)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@27 (line 349)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba3e859:   jmp    0x000000011ba3d59a
  0x000000011ba3e85e:   movabs r10,0x13a82f438              ;   {metadata({method} {0x000000013a82f438} 'tryToParseEightDigits' '([BI)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3e868:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011ba3e86d:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011ba3e875:   call   0x000000011b4db500           ; ImmutableOopMap {rsi=Oop [136]=Oop }
                                                            ;*synchronization entry
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::tryToParseEightDigits@-1 (line 608)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@89 (line 358)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba3e87a:   jmp    0x000000011ba3d780
  0x000000011ba3e87f:   movabs r10,0x13a82f040              ;   {metadata({method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3e889:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011ba3e88e:   mov    QWORD PTR [rsp],0x72
  0x000000011ba3e896:   call   0x000000011b4db500           ; ImmutableOopMap {[136]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@114 (line 366)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba3e89b:   jmp    0x000000011ba3d839
  0x000000011ba3e8a0:   movabs r10,0x13a82f040              ;   {metadata({method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3e8aa:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011ba3e8af:   mov    QWORD PTR [rsp],0x78
  0x000000011ba3e8b7:   call   0x000000011b4db500           ; ImmutableOopMap {[136]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@120 (line 347)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba3e8bc:   jmp    0x000000011ba3d91e
  0x000000011ba3e8c1:   call   0x000000011b4d5b20           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@202 (line 385)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba3e8c6:   call   0x000000011b4d5b20           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@202 (line 385)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba3e8cb:   mov    QWORD PTR [rsp],rax
  0x000000011ba3e8cf:   mov    QWORD PTR [rsp+0x8],r8
  0x000000011ba3e8d4:   call   0x000000011b4d4f20           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@202 (line 385)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba3e8d9:   call   0x000000011b4d5b20           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@245 (line 388)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba3e8de:   call   0x000000011b4d5b20           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@245 (line 388)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba3e8e3:   mov    QWORD PTR [rsp],rax
  0x000000011ba3e8e7:   mov    QWORD PTR [rsp+0x8],r8
  0x000000011ba3e8ec:   call   0x000000011b4d4f20           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@245 (line 388)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba3e8f1:   movabs r10,0x13a82eb30              ;   {metadata({method} {0x000000013a82eb30} 'isDigit' '(B)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3e8fb:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011ba3e900:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011ba3e908:   call   0x000000011b4db500           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*synchronization entry
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::isDigit@-1 (line 100)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@254 (line 390)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba3e90d:   jmp    0x000000011ba3dcdb
  0x000000011ba3e912:   call   0x000000011b4d5b20           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@304 (line 398)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba3e917:   call   0x000000011b4d5b20           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@304 (line 398)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba3e91c:   mov    QWORD PTR [rsp],r11
  0x000000011ba3e920:   mov    QWORD PTR [rsp+0x8],r8
  0x000000011ba3e925:   call   0x000000011b4d4f20           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@304 (line 398)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba3e92a:   movabs r10,0x13a82eb30              ;   {metadata({method} {0x000000013a82eb30} 'isDigit' '(B)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3e934:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011ba3e939:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011ba3e941:   call   0x000000011b4db500           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*synchronization entry
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::isDigit@-1 (line 100)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@313 (line 399)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba3e946:   jmp    0x000000011ba3dee0
  0x000000011ba3e94b:   movabs r10,0x13a82f040              ;   {metadata({method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3e955:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011ba3e95a:   mov    QWORD PTR [rsp],0x13c
  0x000000011ba3e962:   call   0x000000011b4db500           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@316 (line 399)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba3e967:   jmp    0x000000011ba3dfbe
  0x000000011ba3e96c:   movabs r10,0x13a82f378              ;   {metadata({method} {0x000000013a82f378} 'skipWhitespace' '([BII)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3e976:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011ba3e97b:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011ba3e983:   call   0x000000011b4db500           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*synchronization entry
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::skipWhitespace@-1 (line 591)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@341 (line 408)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba3e988:   jmp    0x000000011ba3e094
  0x000000011ba3e98d:   call   0x000000011b4d5b20           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::skipWhitespace@9 (line 593)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@341 (line 408)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba3e992:   call   0x000000011b4d5b20           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::skipWhitespace@9 (line 593)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@341 (line 408)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba3e997:   mov    QWORD PTR [rsp],rcx
  0x000000011ba3e99b:   mov    QWORD PTR [rsp+0x8],r8
  0x000000011ba3e9a0:   call   0x000000011b4d4f20           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::skipWhitespace@9 (line 593)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@341 (line 408)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba3e9a5:   movabs r10,0x13a82f378              ;   {metadata({method} {0x000000013a82f378} 'skipWhitespace' '([BII)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3e9af:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011ba3e9b4:   mov    QWORD PTR [rsp],0x19
  0x000000011ba3e9bc:   call   0x000000011b4db500           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::skipWhitespace@25 (line 592)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@341 (line 408)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba3e9c1:   jmp    0x000000011ba3e11c
  0x000000011ba3e9c6:   call   0x000000011b4d5b20           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@363 (line 409)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba3e9cb:   call   0x000000011b4d5b20           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@363 (line 409)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba3e9d0:   mov    QWORD PTR [rsp],rdi
  0x000000011ba3e9d4:   mov    QWORD PTR [rsp+0x8],r8
  0x000000011ba3e9d9:   call   0x000000011b4d4f20           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@363 (line 409)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba3e9de:   call   0x000000011b4d5b20           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@402 (line 421)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba3e9e3:   call   0x000000011b4d5b20           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@402 (line 421)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba3e9e8:   mov    QWORD PTR [rsp],rbx
  0x000000011ba3e9ec:   mov    QWORD PTR [rsp+0x8],r8
  0x000000011ba3e9f1:   call   0x000000011b4d4f20           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@402 (line 421)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba3e9f6:   movabs r10,0x13a82f040              ;   {metadata({method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba3ea00:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011ba3ea05:   mov    QWORD PTR [rsp],0x1c0
  0x000000011ba3ea0d:   call   0x000000011b4db500           ; ImmutableOopMap {[136]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@448 (line 420)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba3ea12:   jmp    0x000000011ba3e4ac
  0x000000011ba3ea17:   movabs r10,0x800031350              ;   {metadata({method} {0x0000000800031350} 'isNaN' '(D)Z' in 'java/lang/Double')}
  0x000000011ba3ea21:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011ba3ea26:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011ba3ea2e:   call   0x000000011b4db500           ; ImmutableOopMap {[136]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Double::isNaN@-1 (line 663)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@492 (line 438)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba3ea33:   jmp    0x000000011ba3e61e
  0x000000011ba3ea38:   movabs r10,0x11ba3e72c              ;   {internal_word}
  0x000000011ba3ea42:   mov    QWORD PTR [r15+0x350],r10
  0x000000011ba3ea49:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x000000011ba3ea4e:   call   0x000000011b4d5b20           ; ImmutableOopMap {rax=Oop }
                                                            ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@377 (line 411)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba3ea53:   call   0x000000011b4d5b20           ; ImmutableOopMap {rax=Oop }
                                                            ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@268 (line 391)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba3ea58:   call   0x000000011b4d5b20           ; ImmutableOopMap {rax=Oop }
                                                            ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@73 (line 354)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba3ea5d:   nop
  0x000000011ba3ea5e:   nop
  0x000000011ba3ea5f:   mov    rax,QWORD PTR [r15+0x3c8]
  0x000000011ba3ea66:   mov    QWORD PTR [r15+0x3c8],0x0
  0x000000011ba3ea71:   mov    QWORD PTR [r15+0x3d0],0x0
  0x000000011ba3ea7c:   add    rsp,0xf0
  0x000000011ba3ea83:   pop    rbp
  0x000000011ba3ea84:   jmp    0x000000011b446f00           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba3ea89:   hlt
  0x000000011ba3ea8a:   hlt
  0x000000011ba3ea8b:   hlt
  0x000000011ba3ea8c:   hlt
  0x000000011ba3ea8d:   hlt
  0x000000011ba3ea8e:   hlt
  0x000000011ba3ea8f:   hlt
  0x000000011ba3ea90:   hlt
  0x000000011ba3ea91:   hlt
  0x000000011ba3ea92:   hlt
  0x000000011ba3ea93:   hlt
  0x000000011ba3ea94:   hlt
  0x000000011ba3ea95:   hlt
  0x000000011ba3ea96:   hlt
  0x000000011ba3ea97:   hlt
  0x000000011ba3ea98:   hlt
  0x000000011ba3ea99:   hlt
  0x000000011ba3ea9a:   hlt
  0x000000011ba3ea9b:   hlt
  0x000000011ba3ea9c:   hlt
  0x000000011ba3ea9d:   hlt
  0x000000011ba3ea9e:   hlt
  0x000000011ba3ea9f:   hlt
[Stub Code]
  0x000000011ba3eaa0:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x000000011ba3eaa5:   movabs rbx,0x13a82f570              ;   {static_stub}
  0x000000011ba3eaaf:   jmp    0x000000011b432a5c           ;   {runtime_call I2C/C2I adapters}
  0x000000011ba3eab4:   nop
  0x000000011ba3eab5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011ba3eabf:   jmp    0x000000011ba3eabf           ;   {runtime_call}
  0x000000011ba3eac4:   nop
  0x000000011ba3eac5:   movabs rbx,0x13a8357b0              ;   {static_stub}
  0x000000011ba3eacf:   jmp    0x000000011b508501           ;   {runtime_call I2C/C2I adapters}
  0x000000011ba3ead4:   nop
  0x000000011ba3ead5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011ba3eadf:   jmp    0x000000011ba3eadf           ;   {runtime_call}
  0x000000011ba3eae4:   nop
  0x000000011ba3eae5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011ba3eaef:   jmp    0x000000011ba3eaef           ;   {runtime_call}
  0x000000011ba3eaf4:   nop
  0x000000011ba3eaf5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011ba3eaff:   jmp    0x000000011ba3eaff           ;   {runtime_call}
  0x000000011ba3eb04:   nop
  0x000000011ba3eb05:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011ba3eb0f:   jmp    0x000000011ba3eb0f           ;   {runtime_call}
[Exception Handler]
  0x000000011ba3eb14:   call   0x000000011b4d7900           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba3eb19:   movabs rdi,0x10db45fc1              ;   {external_word}
  0x000000011ba3eb23:   and    rsp,0xfffffffffffffff0
  0x000000011ba3eb27:   call   0x000000010d7f0290           ;   {runtime_call _ZN14MacroAssembler7debug64EPcxPx}
  0x000000011ba3eb2c:   hlt
[Deopt Handler Code]
  0x000000011ba3eb2d:   movabs r10,0x11ba3eb2d              ;   {section_word}
  0x000000011ba3eb37:   push   r10
  0x000000011ba3eb39:   jmp    0x000000011b4333a0           ;   {runtime_call DeoptimizationBlob}
  0x000000011ba3eb3e:   hlt
  0x000000011ba3eb3f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     309  576       4       ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral (488 bytes)
 total in heap  [0x0000000122ee0c10,0x0000000122ee24b0] = 6304
 relocation     [0x0000000122ee0d70,0x0000000122ee0e18] = 168
 main code      [0x0000000122ee0e20,0x0000000122ee1a60] = 3136
 stub code      [0x0000000122ee1a60,0x0000000122ee1af0] = 144
 oops           [0x0000000122ee1af0,0x0000000122ee1b00] = 16
 metadata       [0x0000000122ee1b00,0x0000000122ee1b40] = 64
 scopes data    [0x0000000122ee1b40,0x0000000122ee21b8] = 1656
 scopes pcs     [0x0000000122ee21b8,0x0000000122ee2398] = 480
 dependencies   [0x0000000122ee2398,0x0000000122ee23a0] = 8
 handler table  [0x0000000122ee23a0,0x0000000122ee2490] = 240
 nul chk table  [0x0000000122ee2490,0x0000000122ee24b0] = 32

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013a80e750} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser'
  # parm0:    rsi:rsi   = 'java/lang/CharSequence'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  # parm3:    r8        = int
  # parm4:    r9        = boolean
  # parm5:    rdi       = boolean
  #           [sp+0x80]  (sp of caller)
  0x0000000122ee0e20:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000122ee0e27:   push   rbp
  0x0000000122ee0e28:   sub    rsp,0x70
  0x0000000122ee0e2c:   mov    DWORD PTR [rsp+0x18],edi
  0x0000000122ee0e30:   mov    DWORD PTR [rsp+0x14],r9d
  0x0000000122ee0e35:   mov    DWORD PTR [rsp+0xc],ecx
  0x0000000122ee0e39:   mov    QWORD PTR [rsp+0x30],rsi
  0x0000000122ee0e3e:   mov    DWORD PTR [rsp+0x1c],r8d
  0x0000000122ee0e43:   mov    ecx,edx
  0x0000000122ee0e45:   cmp    edx,r8d
  0x0000000122ee0e48:   jge    0x0000000122ee1605
  0x0000000122ee0e4e:   mov    r10d,DWORD PTR [rsi+0x8]     ; implicit exception: dispatches to 0x0000000122ee1668
  0x0000000122ee0e52:   data16 nop WORD PTR [rax+rax*1+0x0]
  0x0000000122ee0e5c:   data16 data16 xchg ax,ax
  0x0000000122ee0e60:   cmp    r10d,0x8340                  ;   {metadata('java/lang/String')}
  0x0000000122ee0e67:   jne    0x0000000122ee1668
  0x0000000122ee0e6d:   mov    r14,rsi
  0x0000000122ee0e70:   cmp    BYTE PTR [r14+0x10],0x0
  0x0000000122ee0e75:   jne    0x0000000122ee1668
  0x0000000122ee0e7b:   mov    r10d,DWORD PTR [r14+0x14]
  0x0000000122ee0e7f:   nop
  0x0000000122ee0e80:   mov    r8d,DWORD PTR [r12+r10*8+0xc]; implicit exception: dispatches to 0x0000000122ee1668
  0x0000000122ee0e85:   cmp    edx,r8d
  0x0000000122ee0e88:   jae    0x0000000122ee1668
  0x0000000122ee0e8e:   movsxd r11,r8d
  0x0000000122ee0e91:   movsxd r8,DWORD PTR [rsp+0x1c]
  0x0000000122ee0e96:   dec    r8
  0x0000000122ee0e99:   cmp    r8,r11
  0x0000000122ee0e9c:   nop    DWORD PTR [rax+0x0]
  0x0000000122ee0ea0:   jae    0x0000000122ee1668
  0x0000000122ee0ea6:   lea    rsi,[r12+r10*8]
  0x0000000122ee0eaa:   mov    r9d,edx
  0x0000000122ee0ead:   inc    r9d
  0x0000000122ee0eb0:   mov    r8d,edx
  0x0000000122ee0eb3:   xor    eax,eax
  0x0000000122ee0eb5:   mov    r10d,0xffffffff
  0x0000000122ee0ebb:   mov    r11d,r8d
  0x0000000122ee0ebe:   movzx  edx,BYTE PTR [rsi+r11*1+0x10]
  0x0000000122ee0ec4:   mov    edi,edx
  0x0000000122ee0ec6:   add    edi,0xffffffd0
  0x0000000122ee0ec9:   cmp    edi,0xa
  0x0000000122ee0ecc:   jae    0x0000000122ee1485
  0x0000000122ee0ed2:   mov    rbx,rax
  0x0000000122ee0ed5:   shl    rbx,0x3
  0x0000000122ee0ed9:   movsxd rdi,edx
  0x0000000122ee0edc:   shl    rax,1
  0x0000000122ee0edf:   add    rax,rbx
  0x0000000122ee0ee2:   add    rax,rdi
  0x0000000122ee0ee5:   add    rax,0xffffffffffffffd0
  0x0000000122ee0ee9:   inc    r8d
  0x0000000122ee0eec:   cmp    r8d,r9d
  0x0000000122ee0eef:   jl     0x0000000122ee0ebb
  0x0000000122ee0ef1:   mov    r9d,DWORD PTR [rsp+0x1c]
  0x0000000122ee0ef6:   dec    r9d
  0x0000000122ee0ef9:   mov    ebx,0x80000000
  0x0000000122ee0efe:   mov    edi,DWORD PTR [rsp+0x1c]
  0x0000000122ee0f02:   cmp    edi,r9d
  0x0000000122ee0f05:   cmovl  r9d,ebx
  0x0000000122ee0f09:   cmp    r8d,r9d
  0x0000000122ee0f0c:   jge    0x0000000122ee0fc5
  0x0000000122ee0f12:   jmp    0x0000000122ee0f9e
  0x0000000122ee0f17:   nop    WORD PTR [rax+rax*1+0x0]
  0x0000000122ee0f20:   mov    rax,rbp
  0x0000000122ee0f23:   mov    r11d,r8d
  0x0000000122ee0f26:   movsxd r13,r11d
  0x0000000122ee0f29:   movzx  edx,BYTE PTR [rsi+r13*1+0x10]
  0x0000000122ee0f2f:   mov    ebx,edx
  0x0000000122ee0f31:   add    ebx,0xffffffd0
  0x0000000122ee0f34:   cmp    ebx,0xa
  0x0000000122ee0f37:   jae    0x0000000122ee1186
  0x0000000122ee0f3d:   movsxd rbx,edx
  0x0000000122ee0f40:   mov    rbp,rax
  0x0000000122ee0f43:   shl    rbp,1
  0x0000000122ee0f46:   shl    rax,0x3
  0x0000000122ee0f4a:   add    rbp,rax
  0x0000000122ee0f4d:   add    rbp,rbx
  0x0000000122ee0f50:   add    rbp,0xffffffffffffffd0
  0x0000000122ee0f54:   movzx  edx,BYTE PTR [rsi+r13*1+0x11]
  0x0000000122ee0f5a:   mov    ebx,edx
  0x0000000122ee0f5c:   add    ebx,0xffffffd0
  0x0000000122ee0f5f:   nop
  0x0000000122ee0f60:   cmp    ebx,0xa
  0x0000000122ee0f63:   jae    0x0000000122ee11a5
  0x0000000122ee0f69:   mov    rbx,rbp
  0x0000000122ee0f6c:   shl    rbx,0x3
  0x0000000122ee0f70:   movsxd rax,edx
  0x0000000122ee0f73:   shl    rbp,1
  0x0000000122ee0f76:   add    rbp,rbx
  0x0000000122ee0f79:   add    rbp,rax
  0x0000000122ee0f7c:   add    rbp,0xffffffffffffffd0
  0x0000000122ee0f80:   add    r8d,0x2
  0x0000000122ee0f84:   cmp    r8d,edi
  0x0000000122ee0f87:   jl     0x0000000122ee0f20
  0x0000000122ee0f89:   mov    rbx,QWORD PTR [r15+0x340]
  0x0000000122ee0f90:   add    r11d,0x2                     ; ImmutableOopMap {rsi=Oop r14=Oop [48]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@82 (line 325)
  0x0000000122ee0f94:   test   DWORD PTR [rbx],eax          ;   {poll}
  0x0000000122ee0f96:   cmp    r8d,r9d
  0x0000000122ee0f99:   jge    0x0000000122ee0fcb
  0x0000000122ee0f9b:   mov    rax,rbp
  0x0000000122ee0f9e:   mov    edi,r9d
  0x0000000122ee0fa1:   sub    edi,r8d
  0x0000000122ee0fa4:   xor    ebx,ebx
  0x0000000122ee0fa6:   cmp    r9d,r8d
  0x0000000122ee0fa9:   cmovl  edi,ebx
  0x0000000122ee0fac:   cmp    edi,0x7d0
  0x0000000122ee0fb2:   mov    r11d,0x7d0
  0x0000000122ee0fb8:   cmova  edi,r11d
  0x0000000122ee0fbc:   add    edi,r8d
  0x0000000122ee0fbf:   nop
  0x0000000122ee0fc0:   jmp    0x0000000122ee0f23
  0x0000000122ee0fc5:   inc    r11d
  0x0000000122ee0fc8:   mov    rbp,rax
  0x0000000122ee0fcb:   cmp    r8d,DWORD PTR [rsp+0x1c]
  0x0000000122ee0fd0:   jge    0x0000000122ee1018
  0x0000000122ee0fd6:   mov    r11d,r8d
  0x0000000122ee0fd9:   movzx  edx,BYTE PTR [rsi+r11*1+0x10]
  0x0000000122ee0fdf:   mov    ebx,edx
  0x0000000122ee0fe1:   add    ebx,0xffffffd0
  0x0000000122ee0fe4:   cmp    ebx,0xa
  0x0000000122ee0fe7:   jae    0x0000000122ee14e5
  0x0000000122ee0fed:   movsxd rbx,edx
  0x0000000122ee0ff0:   mov    r9,rbp
  0x0000000122ee0ff3:   shl    r9,1
  0x0000000122ee0ff6:   shl    rbp,0x3
  0x0000000122ee0ffa:   add    r9,rbp
  0x0000000122ee0ffd:   add    r9,rbx
  0x0000000122ee1000:   add    r9,0xffffffffffffffd0
  0x0000000122ee1004:   inc    r8d
  0x0000000122ee1007:   cmp    r8d,DWORD PTR [rsp+0x1c]
  0x0000000122ee100c:   jge    0x0000000122ee1013
  0x0000000122ee100e:   mov    rbp,r9
  0x0000000122ee1011:   jmp    0x0000000122ee0fd6
  0x0000000122ee1013:   inc    r11d
  0x0000000122ee1016:   jmp    0x0000000122ee101b
  0x0000000122ee1018:   mov    r9,rbp
  0x0000000122ee101b:   nop    DWORD PTR [rax+rax*1+0x0]
  0x0000000122ee1020:   cmp    r10d,0xffffffff
  0x0000000122ee1024:   je     0x0000000122ee1613
  0x0000000122ee102a:   mov    QWORD PTR [rsp+0x50],r9
  0x0000000122ee102f:   mov    ebx,r11d
  0x0000000122ee1032:   sub    ebx,ecx
  0x0000000122ee1034:   mov    esi,r10d
  0x0000000122ee1037:   sub    esi,r11d
  0x0000000122ee103a:   mov    r8d,ebx
  0x0000000122ee103d:   dec    r8d
  0x0000000122ee1040:   mov    edi,esi
  0x0000000122ee1042:   inc    edi
  0x0000000122ee1044:   cmp    edx,0x65
  0x0000000122ee1047:   je     0x0000000122ee17c9
  0x0000000122ee104d:   cmp    edx,0x45
  0x0000000122ee1050:   je     0x0000000122ee11ca
  0x0000000122ee1056:   mov    eax,r11d
  0x0000000122ee1059:   xor    r9d,r9d
  0x0000000122ee105c:   mov    r13d,edi
  0x0000000122ee105f:   nop
  0x0000000122ee1060:   cmp    eax,DWORD PTR [rsp+0x1c]
  0x0000000122ee1064:   jge    0x0000000122ee10fc
  0x0000000122ee106a:   movsx  ebp,BYTE PTR [r14+0x10]
  0x0000000122ee106f:   test   ebp,ebp
  0x0000000122ee1071:   jne    0x0000000122ee18ec
  0x0000000122ee1077:   mov    ebp,DWORD PTR [r14+0x14]
  0x0000000122ee107b:   nop    DWORD PTR [rax+rax*1+0x0]
  0x0000000122ee1080:   mov    edx,DWORD PTR [r12+rbp*8+0xc]; implicit exception: dispatches to 0x0000000122ee1a0d
  0x0000000122ee1085:   cmp    eax,edx
  0x0000000122ee1087:   jae    0x0000000122ee169c
  0x0000000122ee108d:   mov    edi,eax
  0x0000000122ee108f:   cmp    edi,edx
  0x0000000122ee1091:   jae    0x0000000122ee1704
  0x0000000122ee1097:   lea    rdx,[r12+rbp*8]
  0x0000000122ee109b:   movzx  ebp,BYTE PTR [rdx+rdi*1+0x10]
  0x0000000122ee10a0:   cmp    ebp,0x20
  0x0000000122ee10a3:   jg     0x0000000122ee10fc
  0x0000000122ee10a5:   mov    esi,0xffffff45
  0x0000000122ee10aa:   mov    ebx,DWORD PTR [rsp+0xc]
  0x0000000122ee10ae:   mov    DWORD PTR [rsp],ebx
  0x0000000122ee10b1:   mov    ebx,DWORD PTR [rsp+0x14]
  0x0000000122ee10b5:   mov    DWORD PTR [rsp+0x8],ebx
  0x0000000122ee10b9:   mov    edx,DWORD PTR [rsp+0x18]
  0x0000000122ee10bd:   mov    DWORD PTR [rsp+0xc],edx
  0x0000000122ee10c1:   mov    DWORD PTR [rsp+0x10],ecx
  0x0000000122ee10c5:   mov    DWORD PTR [rsp+0x14],r10d
  0x0000000122ee10ca:   mov    DWORD PTR [rsp+0x18],r11d
  0x0000000122ee10cf:   mov    QWORD PTR [rsp+0x20],r14
  0x0000000122ee10d4:   mov    r10,QWORD PTR [rsp+0x30]
  0x0000000122ee10d9:   mov    QWORD PTR [rsp+0x28],r10
  0x0000000122ee10de:   mov    DWORD PTR [rsp+0x38],r13d
  0x0000000122ee10e3:   mov    DWORD PTR [rsp+0x3c],r8d
  0x0000000122ee10e8:   mov    QWORD PTR [rsp+0x40],r9
  0x0000000122ee10ed:   mov    DWORD PTR [rsp+0x48],edi
  0x0000000122ee10f1:   data16 xchg ax,ax
  0x0000000122ee10f4:   vzeroupper
  0x0000000122ee10f7:   call   0x000000011b433000           ; ImmutableOopMap {[32]=Oop [40]=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@16 (line 550)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@313 (line 376)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ee10fc:   nop    DWORD PTR [rax+0x0]
  0x0000000122ee1100:   cmp    eax,DWORD PTR [rsp+0x1c]
  0x0000000122ee1104:   jl     0x0000000122ee175c
  0x0000000122ee110a:   mov    edi,DWORD PTR [rsp+0x18]
  0x0000000122ee110e:   test   edi,edi
  0x0000000122ee1110:   je     0x0000000122ee12d9
  0x0000000122ee1116:   cmp    r8d,0x13
  0x0000000122ee111a:   nop    WORD PTR [rax+rax*1+0x0]
  0x0000000122ee1120:   jg     0x0000000122ee1820
  0x0000000122ee1126:   mov    rdx,QWORD PTR [rsp+0x50]
  0x0000000122ee112b:   test   rdx,rdx
  0x0000000122ee112e:   je     0x0000000122ee186c
  0x0000000122ee1134:   mov    r10d,r13d
  0x0000000122ee1137:   add    r10d,0x145
  0x0000000122ee113e:   xchg   ax,ax
  0x0000000122ee1140:   cmp    r10d,0x27a
  0x0000000122ee1147:   jae    0x0000000122ee18c0
  0x0000000122ee114d:   mov    esi,DWORD PTR [rsp+0x14]
  0x0000000122ee1151:   mov    ecx,r13d
  0x0000000122ee1154:   vzeroupper
  0x0000000122ee1157:   call   0x0000000122ee1a60           ; ImmutableOopMap {[48]=Oop }
                                                            ;*invokestatic tryDecToDoubleWithFastAlgorithm {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleMath::decFloatLiteralToDouble@131 (line 763)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@463 (line 404)
                                                            ;   {static_call}
  0x0000000122ee115c:   nop    DWORD PTR [rax+0x0]
  0x0000000122ee1160:   vucomisd xmm0,xmm0
  0x0000000122ee1164:   jp     0x0000000122ee1468
  0x0000000122ee116a:   jne    0x0000000122ee1468
  0x0000000122ee1170:   vzeroupper
  0x0000000122ee1173:   add    rsp,0x70
  0x0000000122ee1177:   pop    rbp
  0x0000000122ee1178:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x0000000122ee117f:   ja     0x0000000122ee1a45
  0x0000000122ee1185:   ret
  0x0000000122ee1186:   cmp    edx,0x2e
  0x0000000122ee1189:   jne    0x0000000122ee15a2
  0x0000000122ee118f:   cmp    r10d,0xffffffff
  0x0000000122ee1193:   jne    0x0000000122ee194f
  0x0000000122ee1199:   mov    rbp,rax
  0x0000000122ee119c:   mov    r10d,r11d
  0x0000000122ee119f:   nop
  0x0000000122ee11a0:   jmp    0x0000000122ee0f54
  0x0000000122ee11a5:   mov    ebx,r11d
  0x0000000122ee11a8:   inc    ebx
  0x0000000122ee11aa:   cmp    edx,0x2e
  0x0000000122ee11ad:   jne    0x0000000122ee15b4
  0x0000000122ee11b3:   cmp    r10d,0xffffffff
  0x0000000122ee11b7:   jne    0x0000000122ee1955
  0x0000000122ee11bd:   mov    edx,0x2e
  0x0000000122ee11c2:   mov    r10d,ebx
  0x0000000122ee11c5:   jmp    0x0000000122ee0f80
  0x0000000122ee11ca:   mov    r9d,r11d
  0x0000000122ee11cd:   inc    r9d
  0x0000000122ee11d0:   mov    eax,DWORD PTR [rsp+0x1c]
  0x0000000122ee11d4:   cmp    r9d,eax
  0x0000000122ee11d7:   jge    0x0000000122ee126e
  0x0000000122ee11dd:   mov    ebp,r9d
  0x0000000122ee11e0:   mov    DWORD PTR [rsp+0x44],edi
  0x0000000122ee11e4:   mov    DWORD PTR [rsp+0x40],r8d
  0x0000000122ee11e9:   mov    DWORD PTR [rsp+0x8],esi
  0x0000000122ee11ed:   mov    DWORD PTR [rsp+0x4],ebx
  0x0000000122ee11f1:   mov    DWORD PTR [rsp+0x2c],r11d
  0x0000000122ee11f6:   mov    QWORD PTR [rsp+0x38],r14
  0x0000000122ee11fb:   mov    DWORD PTR [rsp+0x28],r10d
  0x0000000122ee1200:   mov    r10,QWORD PTR [rsp+0x30]
  0x0000000122ee1205:   mov    QWORD PTR [rsp+0x20],r10
  0x0000000122ee120a:   mov    DWORD PTR [rsp],eax
  0x0000000122ee120d:   mov    DWORD PTR [rsp+0x10],ecx
  0x0000000122ee1211:   mov    rsi,r14
  0x0000000122ee1214:   mov    edx,r9d
  0x0000000122ee1217:   nop
  0x0000000122ee1218:   vzeroupper
  0x0000000122ee121b:   call   0x0000000122eb0640           ; ImmutableOopMap {[32]=Oop [56]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@164 (line 353)
                                                            ;   {optimized virtual_call}
  0x0000000122ee1220:   cmp    eax,0x2d
  0x0000000122ee1223:   je     0x0000000122ee1508
  0x0000000122ee1229:   cmp    eax,0x2b
  0x0000000122ee122c:   je     0x0000000122ee1510
  0x0000000122ee1232:   mov    ecx,DWORD PTR [rsp+0x10]
  0x0000000122ee1236:   mov    r10d,DWORD PTR [rsp]
  0x0000000122ee123a:   mov    DWORD PTR [rsp+0x1c],r10d
  0x0000000122ee123f:   mov    r10,QWORD PTR [rsp+0x20]
  0x0000000122ee1244:   mov    QWORD PTR [rsp+0x30],r10
  0x0000000122ee1249:   mov    r10d,DWORD PTR [rsp+0x28]
  0x0000000122ee124e:   mov    r14,QWORD PTR [rsp+0x38]
  0x0000000122ee1253:   mov    r11d,DWORD PTR [rsp+0x2c]
  0x0000000122ee1258:   mov    ebx,DWORD PTR [rsp+0x4]
  0x0000000122ee125c:   mov    esi,DWORD PTR [rsp+0x8]
  0x0000000122ee1260:   mov    r8d,DWORD PTR [rsp+0x40]
  0x0000000122ee1265:   mov    edi,DWORD PTR [rsp+0x44]
  0x0000000122ee1269:   mov    r9d,ebp
  0x0000000122ee126c:   jmp    0x0000000122ee1270
  0x0000000122ee126e:   xor    eax,eax
  0x0000000122ee1270:   mov    ebp,r9d
  0x0000000122ee1273:   mov    DWORD PTR [rsp+0x4c],eax
  0x0000000122ee1277:   xor    r9d,r9d
  0x0000000122ee127a:   mov    QWORD PTR [rsp+0x38],r14
  0x0000000122ee127f:   mov    DWORD PTR [rsp+0x4],ebx
  0x0000000122ee1283:   mov    DWORD PTR [rsp+0x8],esi
  0x0000000122ee1287:   mov    DWORD PTR [rsp+0x48],r9d
  0x0000000122ee128c:   mov    DWORD PTR [rsp+0x44],edi
  0x0000000122ee1290:   mov    DWORD PTR [rsp+0x40],r8d
  0x0000000122ee1295:   mov    DWORD PTR [rsp+0x2c],r11d
  0x0000000122ee129a:   mov    DWORD PTR [rsp+0x28],r10d
  0x0000000122ee129f:   mov    r10,QWORD PTR [rsp+0x30]
  0x0000000122ee12a4:   mov    QWORD PTR [rsp+0x20],r10
  0x0000000122ee12a9:   mov    r11d,DWORD PTR [rsp+0x1c]
  0x0000000122ee12ae:   mov    DWORD PTR [rsp+0x10],r11d
  0x0000000122ee12b3:   mov    DWORD PTR [rsp],ecx
  0x0000000122ee12b6:   mov    esi,DWORD PTR [rsp+0x4c]
  0x0000000122ee12ba:   xchg   ax,ax
  0x0000000122ee12bc:   vzeroupper
  0x0000000122ee12bf:   call   0x0000000122edba80           ; ImmutableOopMap {[32]=Oop [56]=Oop }
                                                            ;*invokestatic isDigit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@224 (line 358)
                                                            ;   {static_call}
  0x0000000122ee12c4:   test   eax,eax
  0x0000000122ee12c6:   je     0x0000000122ee14a5
  0x0000000122ee12cc:   mov    r10d,DWORD PTR [rsp+0x4c]
  0x0000000122ee12d1:   xor    r11d,r11d
  0x0000000122ee12d4:   jmp    0x0000000122ee13d0
  0x0000000122ee12d9:   cmp    ebx,0x1
  0x0000000122ee12dc:   nop    DWORD PTR [rax+0x0]
  0x0000000122ee12e0:   jne    0x0000000122ee1116
  0x0000000122ee12e6:   mov    DWORD PTR [rsp+0x38],eax
  0x0000000122ee12ea:   mov    DWORD PTR [rsp+0x18],r13d
  0x0000000122ee12ef:   mov    QWORD PTR [rsp+0x28],r9
  0x0000000122ee12f4:   mov    DWORD PTR [rsp+0x10],r8d
  0x0000000122ee12f9:   mov    DWORD PTR [rsp+0x8],r11d
  0x0000000122ee12fe:   mov    DWORD PTR [rsp+0x4],r10d
  0x0000000122ee1303:   mov    r10,QWORD PTR [rsp+0x30]
  0x0000000122ee1308:   mov    QWORD PTR [rsp+0x20],r10
  0x0000000122ee130d:   mov    r11d,DWORD PTR [rsp+0x1c]
  0x0000000122ee1312:   mov    DWORD PTR [rsp],r11d
  0x0000000122ee1316:   mov    ebp,ecx
  0x0000000122ee1318:   mov    rsi,QWORD PTR [rsp+0x30]
  0x0000000122ee131d:   mov    edx,DWORD PTR [rsp+0x4]
  0x0000000122ee1321:   nop
  0x0000000122ee1322:   vzeroupper
  0x0000000122ee1325:   movabs rax,0xffffffffffffffff
  0x0000000122ee132f:   call   0x000000011b42dd80           ; ImmutableOopMap {[32]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@335 (line 378)
                                                            ;   {virtual_call}
  0x0000000122ee1334:   cmp    eax,0x2e
  0x0000000122ee1337:   je     0x0000000122ee15cb
  0x0000000122ee133d:   mov    rsi,QWORD PTR [rsp+0x20]
  0x0000000122ee1342:   mov    edx,DWORD PTR [rsp+0xc]
  0x0000000122ee1346:   mov    ecx,DWORD PTR [rsp]
  0x0000000122ee1349:   data16 xchg ax,ax
  0x0000000122ee134c:   vzeroupper
  0x0000000122ee134f:   call   0x000000011b42e080           ; ImmutableOopMap {}
                                                            ;*invokestatic newNumberFormatException {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@348 (line 379)
                                                            ;   {static_call}
  0x0000000122ee1354:   test   rax,rax
  0x0000000122ee1357:   jne    0x0000000122ee14c9
  0x0000000122ee135d:   mov    esi,0xfffffff6
  0x0000000122ee1362:   xchg   ax,ax
  0x0000000122ee1364:   vzeroupper
  0x0000000122ee1367:   call   0x000000011b433000           ; ImmutableOopMap {}
                                                            ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@351 (line 379)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ee136c:   movsxd r10,r10d
  0x0000000122ee136f:   mov    r8,r11
  0x0000000122ee1372:   shl    r8,1
  0x0000000122ee1375:   shl    r11,0x3
  0x0000000122ee1379:   add    r8,r11
  0x0000000122ee137c:   add    r8,r10
  0x0000000122ee137f:   add    r8,0xffffffffffffffd0
  0x0000000122ee1383:   mov    r11d,ebp
  0x0000000122ee1386:   inc    r11d
  0x0000000122ee1389:   cmp    r11d,DWORD PTR [rsp+0x10]
  0x0000000122ee138e:   jl     0x0000000122ee13e2
  0x0000000122ee1394:   xor    r10d,r10d
  0x0000000122ee1397:   mov    DWORD PTR [rsp+0x1c],r10d
  0x0000000122ee139c:   mov    ebp,r11d
  0x0000000122ee139f:   mov    QWORD PTR [rsp+0x30],r8
  0x0000000122ee13a4:   mov    esi,r10d
  0x0000000122ee13a7:   nop
  0x0000000122ee13a8:   vzeroupper
  0x0000000122ee13ab:   call   0x0000000122edba80           ; ImmutableOopMap {[32]=Oop [56]=Oop }
                                                            ;*invokestatic isDigit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@285 (line 367)
                                                            ;   {static_call}
  0x0000000122ee13b0:   mov    r10,QWORD PTR [r15+0x340]    ; ImmutableOopMap {[32]=Oop [56]=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@288 (line 367)
  0x0000000122ee13b7:   test   DWORD PTR [r10],eax          ;   {poll}
  0x0000000122ee13ba:   test   eax,eax
  0x0000000122ee13bc:   nop    DWORD PTR [rax+0x0]
  0x0000000122ee13c0:   je     0x0000000122ee1411
  0x0000000122ee13c6:   mov    r10d,DWORD PTR [rsp+0x1c]
  0x0000000122ee13cb:   mov    r11,QWORD PTR [rsp+0x30]
  0x0000000122ee13d0:   cmp    r11,0x989680
  0x0000000122ee13d7:   jl     0x0000000122ee136c
  0x0000000122ee13d9:   mov    r8,r11
  0x0000000122ee13dc:   nop    DWORD PTR [rax+0x0]
  0x0000000122ee13e0:   jmp    0x0000000122ee1383
  0x0000000122ee13e2:   mov    DWORD PTR [rsp+0x1c],r11d
  0x0000000122ee13e7:   mov    rbp,r8
  0x0000000122ee13ea:   mov    rsi,QWORD PTR [rsp+0x20]
  0x0000000122ee13ef:   mov    edx,r11d
  0x0000000122ee13f2:   vzeroupper
  0x0000000122ee13f5:   movabs rax,0xffffffffffffffff
  0x0000000122ee13ff:   call   0x000000011b42dd80           ; ImmutableOopMap {[32]=Oop [56]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@272 (line 366)
                                                            ;   {virtual_call}
  0x0000000122ee1404:   mov    r8,rbp
  0x0000000122ee1407:   mov    r11d,DWORD PTR [rsp+0x1c]
  0x0000000122ee140c:   mov    r10d,eax
  0x0000000122ee140f:   jmp    0x0000000122ee1397
  0x0000000122ee1411:   mov    r11d,DWORD PTR [rsp+0x48]
  0x0000000122ee1416:   test   r11d,r11d
  0x0000000122ee1419:   je     0x0000000122ee14d9
  0x0000000122ee141f:   mov    r9,QWORD PTR [rsp+0x30]
  0x0000000122ee1424:   neg    r9
  0x0000000122ee1427:   mov    r13d,r9d
  0x0000000122ee142a:   add    r13d,DWORD PTR [rsp+0x8]
  0x0000000122ee142f:   inc    r13d
  0x0000000122ee1432:   mov    eax,ebp
  0x0000000122ee1434:   mov    ecx,DWORD PTR [rsp]
  0x0000000122ee1437:   mov    r11d,DWORD PTR [rsp+0x10]
  0x0000000122ee143c:   mov    DWORD PTR [rsp+0x1c],r11d
  0x0000000122ee1441:   mov    r10,QWORD PTR [rsp+0x20]
  0x0000000122ee1446:   mov    QWORD PTR [rsp+0x30],r10
  0x0000000122ee144b:   mov    r10d,DWORD PTR [rsp+0x28]
  0x0000000122ee1450:   mov    r14,QWORD PTR [rsp+0x38]
  0x0000000122ee1455:   mov    r11d,DWORD PTR [rsp+0x2c]
  0x0000000122ee145a:   mov    ebx,DWORD PTR [rsp+0x4]
  0x0000000122ee145e:   mov    r8d,DWORD PTR [rsp+0x40]
  0x0000000122ee1463:   jmp    0x0000000122ee105f
  0x0000000122ee1468:   mov    rsi,QWORD PTR [rsp+0x30]
  0x0000000122ee146d:   mov    edx,DWORD PTR [rsp+0xc]
  0x0000000122ee1471:   mov    ecx,DWORD PTR [rsp+0x1c]
  0x0000000122ee1475:   data16 xchg ax,ax
  0x0000000122ee1478:   vzeroupper
  0x0000000122ee147b:   call   0x0000000122ee1aab           ; ImmutableOopMap {}
                                                            ;*invokestatic parseRestOfDecimalFloatLiteralTheHardWay {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@479 (line 405)
                                                            ;   {static_call}
  0x0000000122ee1480:   jmp    0x0000000122ee1170
  0x0000000122ee1485:   cmp    edx,0x2e
  0x0000000122ee1488:   jne    0x0000000122ee17b4
  0x0000000122ee148e:   cmp    r10d,0xffffffff
  0x0000000122ee1492:   jne    0x0000000122ee1994
  0x0000000122ee1498:   mov    edx,0x2e
  0x0000000122ee149d:   mov    r10d,r11d
  0x0000000122ee14a0:   jmp    0x0000000122ee0ee9
  0x0000000122ee14a5:   mov    rsi,QWORD PTR [rsp+0x20]
  0x0000000122ee14aa:   mov    edx,DWORD PTR [rsp+0xc]
  0x0000000122ee14ae:   mov    ecx,DWORD PTR [rsp+0x10]
  0x0000000122ee14b2:   xchg   ax,ax
  0x0000000122ee14b4:   vzeroupper
  0x0000000122ee14b7:   call   0x000000011b42e080           ; ImmutableOopMap {}
                                                            ;*invokestatic newNumberFormatException {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@233 (line 359)
                                                            ;   {static_call}
  0x0000000122ee14bc:   nop    DWORD PTR [rax+0x0]
  0x0000000122ee14c0:   test   rax,rax
  0x0000000122ee14c3:   je     0x0000000122ee1984
  0x0000000122ee14c9:   mov    rsi,rax
  0x0000000122ee14cc:   vzeroupper
  0x0000000122ee14cf:   add    rsp,0x70
  0x0000000122ee14d3:   pop    rbp
  0x0000000122ee14d4:   jmp    0x000000011b4e2700           ;   {runtime_call _rethrow_Java}
  0x0000000122ee14d9:   mov    r9,QWORD PTR [rsp+0x30]
  0x0000000122ee14de:   xchg   ax,ax
  0x0000000122ee14e0:   jmp    0x0000000122ee1427
  0x0000000122ee14e5:   cmp    edx,0x2e
  0x0000000122ee14e8:   jne    0x0000000122ee1940
  0x0000000122ee14ee:   cmp    r10d,0xffffffff
  0x0000000122ee14f2:   jne    0x0000000122ee1958
  0x0000000122ee14f8:   mov    edx,0x2e
  0x0000000122ee14fd:   mov    r10d,r11d
  0x0000000122ee1500:   mov    r9,rbp
  0x0000000122ee1503:   jmp    0x0000000122ee1004
  0x0000000122ee1508:   mov    r9d,0x1
  0x0000000122ee150e:   jmp    0x0000000122ee1513
  0x0000000122ee1510:   xor    r9d,r9d
  0x0000000122ee1513:   mov    r11d,DWORD PTR [rsp+0x2c]
  0x0000000122ee1518:   mov    r10d,r11d
  0x0000000122ee151b:   add    r10d,0x2
  0x0000000122ee151f:   nop
  0x0000000122ee1520:   cmp    r10d,DWORD PTR [rsp]
  0x0000000122ee1524:   jl     0x0000000122ee155e
  0x0000000122ee1526:   xor    eax,eax
  0x0000000122ee1528:   mov    ebp,r10d
  0x0000000122ee152b:   mov    DWORD PTR [rsp+0x4c],eax
  0x0000000122ee152f:   mov    ecx,DWORD PTR [rsp+0x10]
  0x0000000122ee1533:   mov    r11d,DWORD PTR [rsp]
  0x0000000122ee1537:   mov    DWORD PTR [rsp+0x1c],r11d
  0x0000000122ee153c:   mov    r10,QWORD PTR [rsp+0x20]
  0x0000000122ee1541:   mov    QWORD PTR [rsp+0x30],r10
  0x0000000122ee1546:   mov    r10d,DWORD PTR [rsp+0x28]
  0x0000000122ee154b:   mov    r11d,DWORD PTR [rsp+0x2c]
  0x0000000122ee1550:   mov    r8d,DWORD PTR [rsp+0x40]
  0x0000000122ee1555:   mov    edi,DWORD PTR [rsp+0x44]
  0x0000000122ee1559:   jmp    0x0000000122ee1287
  0x0000000122ee155e:   mov    r11,QWORD PTR [rsp+0x20]
  0x0000000122ee1563:   mov    ecx,DWORD PTR [r11+0x8]
  0x0000000122ee1567:   cmp    ecx,0x8340                   ;   {metadata('java/lang/String')}
  0x0000000122ee156d:   jne    0x0000000122ee199c
  0x0000000122ee1573:   mov    DWORD PTR [rsp+0x1c],r10d
  0x0000000122ee1578:   mov    ebp,r9d
  0x0000000122ee157b:   mov    r10,r11
  0x0000000122ee157e:   mov    rsi,r10
  0x0000000122ee1581:   mov    edx,DWORD PTR [rsp+0x1c]
  0x0000000122ee1585:   mov    QWORD PTR [rsp+0x30],r10
  0x0000000122ee158a:   xchg   ax,ax
  0x0000000122ee158c:   vzeroupper
  0x0000000122ee158f:   call   0x0000000122eb0640           ; ImmutableOopMap {[32]=Oop [48]=Oop [56]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@211 (line 356)
                                                            ;   {optimized virtual_call}
  0x0000000122ee1594:   mov    r9d,ebp
  0x0000000122ee1597:   mov    r10d,DWORD PTR [rsp+0x1c]
  0x0000000122ee159c:   nop    DWORD PTR [rax+0x0]
  0x0000000122ee15a0:   jmp    0x0000000122ee1528
  0x0000000122ee15a2:   cmp    r10d,0xffffffff
  0x0000000122ee15a6:   je     0x0000000122ee19f0
  0x0000000122ee15ac:   mov    rbp,rax
  0x0000000122ee15af:   mov    ebx,r11d
  0x0000000122ee15b2:   jmp    0x0000000122ee15be
  0x0000000122ee15b4:   cmp    r10d,0xffffffff
  0x0000000122ee15b8:   je     0x0000000122ee19f6
  0x0000000122ee15be:   mov    r11d,ebx
  0x0000000122ee15c1:   mov    QWORD PTR [rsp+0x50],rbp
  0x0000000122ee15c6:   jmp    0x0000000122ee102f
  0x0000000122ee15cb:   mov    ecx,ebp
  0x0000000122ee15cd:   mov    r10d,DWORD PTR [rsp]
  0x0000000122ee15d1:   mov    DWORD PTR [rsp+0x1c],r10d
  0x0000000122ee15d6:   mov    r10,QWORD PTR [rsp+0x20]
  0x0000000122ee15db:   mov    QWORD PTR [rsp+0x30],r10
  0x0000000122ee15e0:   mov    r10d,DWORD PTR [rsp+0x4]
  0x0000000122ee15e5:   mov    r11d,DWORD PTR [rsp+0x8]
  0x0000000122ee15ea:   mov    r8d,DWORD PTR [rsp+0x10]
  0x0000000122ee15ef:   mov    r9,QWORD PTR [rsp+0x28]
  0x0000000122ee15f4:   mov    r13d,DWORD PTR [rsp+0x18]
  0x0000000122ee15f9:   mov    eax,DWORD PTR [rsp+0x38]
  0x0000000122ee15fd:   data16 xchg ax,ax
  0x0000000122ee1600:   jmp    0x0000000122ee1116
  0x0000000122ee1605:   xor    edx,edx
  0x0000000122ee1607:   mov    r10d,0xffffffff
  0x0000000122ee160d:   xor    r9d,r9d
  0x0000000122ee1610:   mov    r11d,ecx
  0x0000000122ee1613:   mov    esi,0xffffff45
  0x0000000122ee1618:   mov    r8d,DWORD PTR [rsp+0xc]
  0x0000000122ee161d:   mov    DWORD PTR [rsp],r8d
  0x0000000122ee1621:   mov    r8d,DWORD PTR [rsp+0x1c]
  0x0000000122ee1626:   mov    DWORD PTR [rsp+0x4],r8d
  0x0000000122ee162b:   mov    ebx,DWORD PTR [rsp+0x14]
  0x0000000122ee162f:   mov    DWORD PTR [rsp+0x8],ebx
  0x0000000122ee1633:   mov    r8d,DWORD PTR [rsp+0x18]
  0x0000000122ee1638:   mov    DWORD PTR [rsp+0xc],r8d
  0x0000000122ee163d:   mov    DWORD PTR [rsp+0x10],ecx
  0x0000000122ee1641:   mov    DWORD PTR [rsp+0x18],edx
  0x0000000122ee1645:   mov    DWORD PTR [rsp+0x1c],r11d
  0x0000000122ee164a:   mov    DWORD PTR [rsp+0x20],r10d
  0x0000000122ee164f:   mov    r10,QWORD PTR [rsp+0x30]
  0x0000000122ee1654:   mov    QWORD PTR [rsp+0x28],r10
  0x0000000122ee1659:   mov    QWORD PTR [rsp+0x30],r9
  0x0000000122ee165e:   xchg   ax,ax
  0x0000000122ee1660:   vzeroupper
  0x0000000122ee1663:   call   0x000000011b433000           ; ImmutableOopMap {[40]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@91 (line 340)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ee1668:   mov    esi,0xffffff76
  0x0000000122ee166d:   mov    r11d,DWORD PTR [rsp+0xc]
  0x0000000122ee1672:   mov    DWORD PTR [rsp],r11d
  0x0000000122ee1676:   mov    r10d,DWORD PTR [rsp+0x1c]
  0x0000000122ee167b:   mov    DWORD PTR [rsp+0x4],r10d
  0x0000000122ee1680:   mov    DWORD PTR [rsp+0x8],r9d
  0x0000000122ee1685:   mov    DWORD PTR [rsp+0xc],edi
  0x0000000122ee1689:   mov    DWORD PTR [rsp+0x10],edx
  0x0000000122ee168d:   mov    DWORD PTR [rsp+0x14],edx
  0x0000000122ee1691:   data16 xchg ax,ax
  0x0000000122ee1694:   vzeroupper
  0x0000000122ee1697:   call   0x000000011b433000           ; ImmutableOopMap {[48]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@17 (line 325)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ee169c:   mov    esi,0xffffffe4
  0x0000000122ee16a1:   mov    ebx,DWORD PTR [rsp+0xc]
  0x0000000122ee16a5:   mov    DWORD PTR [rsp],ebx
  0x0000000122ee16a8:   mov    ebx,DWORD PTR [rsp+0x14]
  0x0000000122ee16ac:   mov    DWORD PTR [rsp+0x8],ebx
  0x0000000122ee16b0:   mov    ebx,DWORD PTR [rsp+0x18]
  0x0000000122ee16b4:   mov    DWORD PTR [rsp+0xc],ebx
  0x0000000122ee16b8:   mov    DWORD PTR [rsp+0x10],ecx
  0x0000000122ee16bc:   mov    DWORD PTR [rsp+0x14],r10d
  0x0000000122ee16c1:   mov    DWORD PTR [rsp+0x18],r11d
  0x0000000122ee16c6:   mov    QWORD PTR [rsp+0x20],r14
  0x0000000122ee16cb:   mov    r10,QWORD PTR [rsp+0x30]
  0x0000000122ee16d0:   mov    QWORD PTR [rsp+0x28],r10
  0x0000000122ee16d5:   mov    r10,QWORD PTR [rsp+0x50]
  0x0000000122ee16da:   mov    QWORD PTR [rsp+0x30],r10
  0x0000000122ee16df:   mov    DWORD PTR [rsp+0x38],r13d
  0x0000000122ee16e4:   mov    DWORD PTR [rsp+0x3c],r8d
  0x0000000122ee16e9:   mov    QWORD PTR [rsp+0x40],r9
  0x0000000122ee16ee:   mov    DWORD PTR [rsp+0x4c],eax
  0x0000000122ee16f2:   mov    DWORD PTR [rsp+0x50],eax
  0x0000000122ee16f6:   mov    DWORD PTR [rsp+0x54],edx
  0x0000000122ee16fa:   xchg   ax,ax
  0x0000000122ee16fc:   vzeroupper
  0x0000000122ee16ff:   call   0x000000011b433000           ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [40]=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::checkIndex@5 (line 4554)
                                                            ; - java.lang.StringLatin1::charAt@3 (line 46)
                                                            ; - java.lang.String::charAt@12 (line 1512)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@9 (line 550)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@313 (line 376)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ee1704:   mov    esi,0xffffffe4
  0x0000000122ee1709:   mov    edx,DWORD PTR [rsp+0xc]
  0x0000000122ee170d:   mov    DWORD PTR [rsp],edx
  0x0000000122ee1710:   mov    edx,DWORD PTR [rsp+0x14]
  0x0000000122ee1714:   mov    DWORD PTR [rsp+0x8],edx
  0x0000000122ee1718:   mov    edx,DWORD PTR [rsp+0x18]
  0x0000000122ee171c:   mov    DWORD PTR [rsp+0xc],edx
  0x0000000122ee1720:   mov    DWORD PTR [rsp+0x10],ecx
  0x0000000122ee1724:   mov    DWORD PTR [rsp+0x14],r10d
  0x0000000122ee1729:   mov    DWORD PTR [rsp+0x18],r11d
  0x0000000122ee172e:   mov    QWORD PTR [rsp+0x20],r14
  0x0000000122ee1733:   mov    r10,QWORD PTR [rsp+0x30]
  0x0000000122ee1738:   mov    QWORD PTR [rsp+0x28],r10
  0x0000000122ee173d:   mov    DWORD PTR [rsp+0x38],r13d
  0x0000000122ee1742:   mov    DWORD PTR [rsp+0x3c],r8d
  0x0000000122ee1747:   mov    QWORD PTR [rsp+0x40],r9
  0x0000000122ee174c:   mov    DWORD PTR [rsp+0x48],eax
  0x0000000122ee1750:   mov    DWORD PTR [rsp+0x4c],edi
  0x0000000122ee1754:   vzeroupper
  0x0000000122ee1757:   call   0x000000011b433000           ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [40]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::charAt@8 (line 47)
                                                            ; - java.lang.String::charAt@12 (line 1512)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@9 (line 550)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@313 (line 376)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ee175c:   mov    esi,0xffffff45
  0x0000000122ee1761:   mov    ebp,DWORD PTR [rsp+0xc]
  0x0000000122ee1765:   mov    ebx,DWORD PTR [rsp+0x14]
  0x0000000122ee1769:   mov    DWORD PTR [rsp+0x4],ebx
  0x0000000122ee176d:   mov    edi,DWORD PTR [rsp+0x18]
  0x0000000122ee1771:   mov    DWORD PTR [rsp+0x8],edi
  0x0000000122ee1775:   mov    DWORD PTR [rsp+0xc],ecx
  0x0000000122ee1779:   mov    DWORD PTR [rsp+0x10],r10d
  0x0000000122ee177e:   mov    DWORD PTR [rsp+0x14],r11d
  0x0000000122ee1783:   mov    r10d,DWORD PTR [rsp+0x1c]
  0x0000000122ee1788:   mov    DWORD PTR [rsp+0x18],r10d
  0x0000000122ee178d:   mov    r10,QWORD PTR [rsp+0x30]
  0x0000000122ee1792:   mov    QWORD PTR [rsp+0x20],r10
  0x0000000122ee1797:   mov    DWORD PTR [rsp+0x30],r13d
  0x0000000122ee179c:   mov    DWORD PTR [rsp+0x34],r8d
  0x0000000122ee17a1:   mov    QWORD PTR [rsp+0x38],r9
  0x0000000122ee17a6:   mov    DWORD PTR [rsp+0x40],eax
  0x0000000122ee17aa:   xchg   ax,ax
  0x0000000122ee17ac:   vzeroupper
  0x0000000122ee17af:   call   0x000000011b433000           ; ImmutableOopMap {[32]=Oop }
                                                            ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@319 (line 377)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ee17b4:   cmp    r10d,0xffffffff
  0x0000000122ee17b8:   je     0x0000000122ee1a05
  0x0000000122ee17be:   mov    rbp,rax
  0x0000000122ee17c1:   mov    ebx,r11d
  0x0000000122ee17c4:   jmp    0x0000000122ee15be
  0x0000000122ee17c9:   mov    esi,0xffffff45
  0x0000000122ee17ce:   mov    r9d,DWORD PTR [rsp+0xc]
  0x0000000122ee17d3:   mov    DWORD PTR [rsp],r9d
  0x0000000122ee17d7:   mov    ebx,DWORD PTR [rsp+0x1c]
  0x0000000122ee17db:   mov    DWORD PTR [rsp+0x4],ebx
  0x0000000122ee17df:   mov    ebx,DWORD PTR [rsp+0x14]
  0x0000000122ee17e3:   mov    DWORD PTR [rsp+0x8],ebx
  0x0000000122ee17e7:   mov    r9d,DWORD PTR [rsp+0x18]
  0x0000000122ee17ec:   mov    DWORD PTR [rsp+0xc],r9d
  0x0000000122ee17f1:   mov    DWORD PTR [rsp+0x10],ecx
  0x0000000122ee17f5:   mov    DWORD PTR [rsp+0x14],r10d
  0x0000000122ee17fa:   mov    DWORD PTR [rsp+0x1c],r11d
  0x0000000122ee17ff:   mov    DWORD PTR [rsp+0x20],edx
  0x0000000122ee1803:   mov    r10,QWORD PTR [rsp+0x30]
  0x0000000122ee1808:   mov    QWORD PTR [rsp+0x28],r10
  0x0000000122ee180d:   mov    DWORD PTR [rsp+0x24],edi
  0x0000000122ee1811:   mov    DWORD PTR [rsp+0x38],r8d
  0x0000000122ee1816:   xchg   ax,ax
  0x0000000122ee1818:   vzeroupper
  0x0000000122ee181b:   call   0x000000011b433000           ; ImmutableOopMap {[40]=Oop }
                                                            ;*if_icmpeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@132 (line 351)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ee1820:   mov    esi,0xffffff45
  0x0000000122ee1825:   mov    ebp,DWORD PTR [rsp+0xc]
  0x0000000122ee1829:   mov    edi,DWORD PTR [rsp+0x1c]
  0x0000000122ee182d:   mov    DWORD PTR [rsp],edi
  0x0000000122ee1830:   mov    edi,DWORD PTR [rsp+0x14]
  0x0000000122ee1834:   mov    DWORD PTR [rsp+0x4],edi
  0x0000000122ee1838:   mov    DWORD PTR [rsp+0x8],ecx
  0x0000000122ee183c:   mov    DWORD PTR [rsp+0xc],r10d
  0x0000000122ee1841:   mov    DWORD PTR [rsp+0x10],r11d
  0x0000000122ee1846:   mov    r10,QWORD PTR [rsp+0x30]
  0x0000000122ee184b:   mov    QWORD PTR [rsp+0x18],r10
  0x0000000122ee1850:   mov    DWORD PTR [rsp+0x14],eax
  0x0000000122ee1854:   mov    DWORD PTR [rsp+0x28],r13d
  0x0000000122ee1859:   mov    QWORD PTR [rsp+0x30],r9
  0x0000000122ee185e:   mov    DWORD PTR [rsp+0x2c],r8d
  0x0000000122ee1863:   nop
  0x0000000122ee1864:   vzeroupper
  0x0000000122ee1867:   call   0x000000011b433000           ; ImmutableOopMap {[24]=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@359 (line 386)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ee186c:   xor    r11d,r11d
  0x0000000122ee186f:   cmp    rdx,r11
  0x0000000122ee1872:   mov    ebp,0xffffffff
  0x0000000122ee1877:   jl     0x0000000122ee1881
  0x0000000122ee1879:   setne  bpl
  0x0000000122ee187d:   movzx  ebp,bpl
  0x0000000122ee1881:   mov    esi,0xffffff45
  0x0000000122ee1886:   mov    r8d,DWORD PTR [rsp+0xc]
  0x0000000122ee188b:   mov    DWORD PTR [rsp],r8d
  0x0000000122ee188f:   mov    r11d,DWORD PTR [rsp+0x1c]
  0x0000000122ee1894:   mov    DWORD PTR [rsp+0x4],r11d
  0x0000000122ee1899:   mov    r11d,DWORD PTR [rsp+0x14]
  0x0000000122ee189e:   mov    DWORD PTR [rsp+0x8],r11d
  0x0000000122ee18a3:   mov    DWORD PTR [rsp+0xc],r10d
  0x0000000122ee18a8:   mov    DWORD PTR [rsp+0x18],eax
  0x0000000122ee18ac:   mov    DWORD PTR [rsp+0x1c],r13d
  0x0000000122ee18b1:   mov    QWORD PTR [rsp+0x28],r9
  0x0000000122ee18b6:   xchg   ax,ax
  0x0000000122ee18b8:   vzeroupper
  0x0000000122ee18bb:   call   0x000000011b433000           ; ImmutableOopMap {[48]=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleMath::decFloatLiteralToDouble@3 (line 738)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@463 (line 404)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ee18c0:   mov    esi,0xffffff3d
  0x0000000122ee18c5:   mov    ebp,DWORD PTR [rsp+0xc]
  0x0000000122ee18c9:   mov    r11d,DWORD PTR [rsp+0x1c]
  0x0000000122ee18ce:   mov    DWORD PTR [rsp],r11d
  0x0000000122ee18d2:   mov    r10d,DWORD PTR [rsp+0x14]
  0x0000000122ee18d7:   mov    DWORD PTR [rsp+0x4],r10d
  0x0000000122ee18dc:   mov    DWORD PTR [rsp+0x1c],r13d
  0x0000000122ee18e1:   data16 xchg ax,ax
  0x0000000122ee18e4:   vzeroupper
  0x0000000122ee18e7:   call   0x000000011b433000           ; ImmutableOopMap {[48]=Oop }
                                                            ;*if_icmpgt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleMath::decFloatLiteralToDouble@116 (line 762)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@463 (line 404)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ee18ec:   mov    esi,0xffffff45
  0x0000000122ee18f1:   mov    edi,DWORD PTR [rsp+0xc]
  0x0000000122ee18f5:   mov    DWORD PTR [rsp],edi
  0x0000000122ee18f8:   mov    edi,DWORD PTR [rsp+0x14]
  0x0000000122ee18fc:   mov    DWORD PTR [rsp+0x8],edi
  0x0000000122ee1900:   mov    ebx,DWORD PTR [rsp+0x18]
  0x0000000122ee1904:   mov    DWORD PTR [rsp+0xc],ebx
  0x0000000122ee1908:   mov    DWORD PTR [rsp+0x10],ecx
  0x0000000122ee190c:   mov    DWORD PTR [rsp+0x14],r10d
  0x0000000122ee1911:   mov    DWORD PTR [rsp+0x18],r11d
  0x0000000122ee1916:   mov    QWORD PTR [rsp+0x28],r14
  0x0000000122ee191b:   mov    r10,QWORD PTR [rsp+0x50]
  0x0000000122ee1920:   mov    QWORD PTR [rsp+0x38],r10
  0x0000000122ee1925:   mov    DWORD PTR [rsp+0x40],r13d
  0x0000000122ee192a:   mov    DWORD PTR [rsp+0x44],r8d
  0x0000000122ee192f:   mov    QWORD PTR [rsp+0x48],r9
  0x0000000122ee1934:   mov    DWORD PTR [rsp+0x54],eax
  0x0000000122ee1938:   vzeroupper
  0x0000000122ee193b:   call   0x000000011b433000           ; ImmutableOopMap {[40]=Oop [48]=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.String::isLatin1@10 (line 4543)
                                                            ; - java.lang.String::charAt@1 (line 1511)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@9 (line 550)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@313 (line 376)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ee1940:   cmp    r10d,0xffffffff
  0x0000000122ee1944:   jne    0x0000000122ee15c1
  0x0000000122ee194a:   jmp    0x0000000122ee19f9
  0x0000000122ee194f:   mov    rbp,rax
  0x0000000122ee1952:   mov    ebx,r11d
  0x0000000122ee1955:   mov    r11d,ebx
  0x0000000122ee1958:   mov    esi,0xffffff45
  0x0000000122ee195d:   mov    QWORD PTR [rsp],r14
  0x0000000122ee1961:   mov    DWORD PTR [rsp+0x8],r11d
  0x0000000122ee1966:   mov    r11d,DWORD PTR [rsp+0x1c]
  0x0000000122ee196b:   mov    DWORD PTR [rsp+0x10],r11d
  0x0000000122ee1970:   mov    DWORD PTR [rsp+0x1c],ecx
  0x0000000122ee1974:   mov    DWORD PTR [rsp+0x20],r10d
  0x0000000122ee1979:   data16 xchg ax,ax
  0x0000000122ee197c:   vzeroupper
  0x0000000122ee197f:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@66 (line 331)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ee1984:   mov    esi,0xfffffff6
  0x0000000122ee1989:   data16 xchg ax,ax
  0x0000000122ee198c:   vzeroupper
  0x0000000122ee198f:   call   0x000000011b433000           ; ImmutableOopMap {}
                                                            ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@236 (line 359)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ee1994:   mov    rbp,rax
  0x0000000122ee1997:   mov    ebx,r11d
  0x0000000122ee199a:   jmp    0x0000000122ee1955
  0x0000000122ee199c:   mov    esi,0xffffffde
  0x0000000122ee19a1:   mov    ebp,DWORD PTR [rsp+0xc]
  0x0000000122ee19a5:   mov    ecx,DWORD PTR [rsp+0x14]
  0x0000000122ee19a9:   mov    DWORD PTR [rsp+0x4],ecx
  0x0000000122ee19ad:   mov    r8d,DWORD PTR [rsp+0x18]
  0x0000000122ee19b2:   mov    DWORD PTR [rsp+0x8],r8d
  0x0000000122ee19b7:   mov    ecx,DWORD PTR [rsp+0x10]
  0x0000000122ee19bb:   mov    DWORD PTR [rsp+0xc],ecx
  0x0000000122ee19bf:   mov    r8d,DWORD PTR [rsp+0x28]
  0x0000000122ee19c4:   mov    DWORD PTR [rsp+0x10],r8d
  0x0000000122ee19c9:   mov    ecx,DWORD PTR [rsp+0x2c]
  0x0000000122ee19cd:   mov    DWORD PTR [rsp+0x14],ecx
  0x0000000122ee19d1:   mov    ecx,DWORD PTR [rsp+0x40]
  0x0000000122ee19d5:   mov    DWORD PTR [rsp+0x30],ecx
  0x0000000122ee19d9:   mov    DWORD PTR [rsp+0x34],r9d
  0x0000000122ee19de:   mov    QWORD PTR [rsp+0x38],r11
  0x0000000122ee19e3:   mov    DWORD PTR [rsp+0x40],r10d
  0x0000000122ee19e8:   vzeroupper
  0x0000000122ee19eb:   call   0x000000011b433000           ; ImmutableOopMap {[56]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@211 (line 356)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ee19f0:   mov    rbp,rax
  0x0000000122ee19f3:   mov    ebx,r11d
  0x0000000122ee19f6:   mov    r11d,ebx
  0x0000000122ee19f9:   mov    r9,rbp
  0x0000000122ee19fc:   nop    DWORD PTR [rax+0x0]
  0x0000000122ee1a00:   jmp    0x0000000122ee1613
  0x0000000122ee1a05:   mov    rbp,rax
  0x0000000122ee1a08:   mov    ebx,r11d
  0x0000000122ee1a0b:   jmp    0x0000000122ee19f6
  0x0000000122ee1a0d:   mov    esi,0xfffffff6
  0x0000000122ee1a12:   xchg   ax,ax
  0x0000000122ee1a14:   vzeroupper
  0x0000000122ee1a17:   call   0x000000011b433000           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::charAt@2 (line 46)
                                                            ; - java.lang.String::charAt@12 (line 1512)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@9 (line 550)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@313 (line 376)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ee1a1c:   nop    DWORD PTR [rax+0x0]
  0x0000000122ee1a20:   jmp    0x0000000122ee1a3b
  0x0000000122ee1a25:   jmp    0x0000000122ee1a3b
  0x0000000122ee1a2a:   jmp    0x0000000122ee1a3b
  0x0000000122ee1a2f:   jmp    0x0000000122ee1a3b
  0x0000000122ee1a31:   jmp    0x0000000122ee1a3b
  0x0000000122ee1a33:   jmp    0x0000000122ee1a3b
  0x0000000122ee1a35:   jmp    0x0000000122ee1a3b
  0x0000000122ee1a37:   jmp    0x0000000122ee1a3b
  0x0000000122ee1a39:   jmp    0x0000000122ee1a3b
  0x0000000122ee1a3b:   mov    rsi,rax
  0x0000000122ee1a3e:   xchg   ax,ax
  0x0000000122ee1a40:   jmp    0x0000000122ee14cc
  0x0000000122ee1a45:   movabs r10,0x122ee1178              ;   {internal_word}
  0x0000000122ee1a4f:   mov    QWORD PTR [r15+0x350],r10
  0x0000000122ee1a56:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x0000000122ee1a5b:   hlt
  0x0000000122ee1a5c:   hlt
  0x0000000122ee1a5d:   hlt
  0x0000000122ee1a5e:   hlt
  0x0000000122ee1a5f:   hlt
[Stub Code]
  0x0000000122ee1a60:   movabs rbx,0x13a835ec8              ;   {no_reloc}
  0x0000000122ee1a6a:   jmp    0x000000011b4de4df           ;   {runtime_call I2C/C2I adapters}
  0x0000000122ee1a6f:   movabs rbx,0x0                      ;   {static_stub}
  0x0000000122ee1a79:   jmp    0x0000000122ee1a79           ;   {runtime_call}
  0x0000000122ee1a7e:   movabs rbx,0x0                      ;   {static_stub}
  0x0000000122ee1a88:   jmp    0x0000000122ee1a88           ;   {runtime_call}
  0x0000000122ee1a8d:   movabs rbx,0x0                      ;   {static_stub}
  0x0000000122ee1a97:   jmp    0x0000000122ee1a97           ;   {runtime_call}
  0x0000000122ee1a9c:   movabs rbx,0x0                      ;   {static_stub}
  0x0000000122ee1aa6:   jmp    0x0000000122ee1aa6           ;   {runtime_call}
  0x0000000122ee1aab:   movabs rbx,0x13a80e8a8              ;   {static_stub}
  0x0000000122ee1ab5:   jmp    0x000000011b40fb5f           ;   {runtime_call I2C/C2I adapters}
  0x0000000122ee1aba:   movabs rbx,0x0                      ;   {static_stub}
  0x0000000122ee1ac4:   jmp    0x0000000122ee1ac4           ;   {runtime_call}
  0x0000000122ee1ac9:   movabs rbx,0x0                      ;   {static_stub}
  0x0000000122ee1ad3:   jmp    0x0000000122ee1ad3           ;   {runtime_call}
[Exception Handler]
  0x0000000122ee1ad8:   jmp    0x000000011b447880           ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000122ee1add:   call   0x0000000122ee1ae2
  0x0000000122ee1ae2:   sub    QWORD PTR [rsp],0x5
  0x0000000122ee1ae7:   jmp    0x000000011b4333a0           ;   {runtime_call DeoptimizationBlob}
  0x0000000122ee1aec:   hlt
  0x0000000122ee1aed:   hlt
  0x0000000122ee1aee:   hlt
  0x0000000122ee1aef:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     331  534       3       ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::skipWhitespace (30 bytes)
 total in heap  [0x000000011ba44e10,0x000000011ba452b0] = 1184
 relocation     [0x000000011ba44f70,0x000000011ba44fb0] = 64
 main code      [0x000000011ba44fc0,0x000000011ba451a0] = 480
 stub code      [0x000000011ba451a0,0x000000011ba451d0] = 48
 oops           [0x000000011ba451d0,0x000000011ba451d8] = 8
 metadata       [0x000000011ba451d8,0x000000011ba451e0] = 8
 scopes data    [0x000000011ba451e0,0x000000011ba45210] = 48
 scopes pcs     [0x000000011ba45210,0x000000011ba45290] = 128
 dependencies   [0x000000011ba45290,0x000000011ba45298] = 8
 nul chk table  [0x000000011ba45298,0x000000011ba452b0] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013a82f378} 'skipWhitespace' '([BII)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000011ba44fc0:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ba44fc7:   push   rbp
  0x000000011ba44fc8:   sub    rsp,0x30
  0x000000011ba44fcc:   movabs rax,0x13a838378              ;   {metadata(method data for {method} {0x000000013a82f378} 'skipWhitespace' '([BII)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba44fd6:   mov    edi,DWORD PTR [rax+0xac]
  0x000000011ba44fdc:   add    edi,0x2
  0x000000011ba44fdf:   mov    DWORD PTR [rax+0xac],edi
  0x000000011ba44fe5:   and    edi,0x7fe
  0x000000011ba44feb:   cmp    edi,0x0
  0x000000011ba44fee:   je     0x000000011ba450f7
  0x000000011ba44ff4:   jmp    0x000000011ba45094
  0x000000011ba44ff9:   nop    DWORD PTR [rax+0x0]
  0x000000011ba45000:   cmp    edx,DWORD PTR [rsi+0xc]      ; implicit exception: dispatches to 0x000000011ba45118
  0x000000011ba45003:   jae    0x000000011ba45122
  0x000000011ba45009:   movsxd rax,edx
  0x000000011ba4500c:   movsx  eax,BYTE PTR [rsi+rax*1+0x10]
  0x000000011ba45011:   and    eax,0xff
  0x000000011ba45017:   cmp    eax,0x20
  0x000000011ba4501a:   movabs rax,0x13a838378              ;   {metadata(method data for {method} {0x000000013a82f378} 'skipWhitespace' '([BII)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba45024:   movabs rdi,0x120
  0x000000011ba4502e:   jg     0x000000011ba4503e
  0x000000011ba45034:   movabs rdi,0x110
  0x000000011ba4503e:   mov    rbx,QWORD PTR [rax+rdi*1]
  0x000000011ba45042:   lea    rbx,[rbx+0x1]
  0x000000011ba45046:   mov    QWORD PTR [rax+rdi*1],rbx
  0x000000011ba4504a:   jg     0x000000011ba450d1
  0x000000011ba45050:   inc    edx
  0x000000011ba45052:   movabs rax,0x13a838378              ;   {metadata(method data for {method} {0x000000013a82f378} 'skipWhitespace' '([BII)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba4505c:   mov    edi,DWORD PTR [rax+0xb0]
  0x000000011ba45062:   add    edi,0x2
  0x000000011ba45065:   mov    DWORD PTR [rax+0xb0],edi
  0x000000011ba4506b:   and    edi,0x3ffe
  0x000000011ba45071:   cmp    edi,0x0
  0x000000011ba45074:   je     0x000000011ba45130
  0x000000011ba4507a:   mov    r10,QWORD PTR [r15+0x340]    ; ImmutableOopMap {rsi=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::skipWhitespace@25 (line 592)
  0x000000011ba45081:   test   DWORD PTR [r10],eax          ;   {poll}
  0x000000011ba45084:   movabs rax,0x13a838378              ;   {metadata(method data for {method} {0x000000013a82f378} 'skipWhitespace' '([BII)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba4508e:   inc    DWORD PTR [rax+0x148]
  0x000000011ba45094:   cmp    edx,ecx
  0x000000011ba45096:   movabs rax,0x13a838378              ;   {metadata(method data for {method} {0x000000013a82f378} 'skipWhitespace' '([BII)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba450a0:   movabs rdi,0xf0
  0x000000011ba450aa:   jge    0x000000011ba450ba
  0x000000011ba450b0:   movabs rdi,0x100
  0x000000011ba450ba:   mov    rbx,QWORD PTR [rax+rdi*1]
  0x000000011ba450be:   lea    rbx,[rbx+0x1]
  0x000000011ba450c2:   mov    QWORD PTR [rax+rdi*1],rbx
  0x000000011ba450c6:   jge    0x000000011ba450e1
  0x000000011ba450cc:   jmp    0x000000011ba45000
  0x000000011ba450d1:   movabs rax,0x13a838378              ;   {metadata(method data for {method} {0x000000013a82f378} 'skipWhitespace' '([BII)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba450db:   inc    DWORD PTR [rax+0x130]
  0x000000011ba450e1:   mov    rax,rdx
  0x000000011ba450e4:   add    rsp,0x30
  0x000000011ba450e8:   pop    rbp
  0x000000011ba450e9:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x000000011ba450f0:   ja     0x000000011ba45151
  0x000000011ba450f6:   ret
  0x000000011ba450f7:   movabs r10,0x13a82f378              ;   {metadata({method} {0x000000013a82f378} 'skipWhitespace' '([BII)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba45101:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011ba45106:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011ba4510e:   call   0x000000011b4db500           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::skipWhitespace@-1 (line 591)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba45113:   jmp    0x000000011ba44ff4
  0x000000011ba45118:   call   0x000000011b4d5b20           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::skipWhitespace@9 (line 593)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba4511d:   call   0x000000011b4d5b20           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::skipWhitespace@9 (line 593)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba45122:   mov    QWORD PTR [rsp],rdx
  0x000000011ba45126:   mov    QWORD PTR [rsp+0x8],rsi
  0x000000011ba4512b:   call   0x000000011b4d4f20           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::skipWhitespace@9 (line 593)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba45130:   movabs r10,0x13a82f378              ;   {metadata({method} {0x000000013a82f378} 'skipWhitespace' '([BII)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba4513a:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011ba4513f:   mov    QWORD PTR [rsp],0x19
  0x000000011ba45147:   call   0x000000011b4db500           ; ImmutableOopMap {rsi=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::skipWhitespace@25 (line 592)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba4514c:   jmp    0x000000011ba4507a
  0x000000011ba45151:   movabs r10,0x11ba450e9              ;   {internal_word}
  0x000000011ba4515b:   mov    QWORD PTR [r15+0x350],r10
  0x000000011ba45162:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x000000011ba45167:   nop
  0x000000011ba45168:   nop
  0x000000011ba45169:   mov    rax,QWORD PTR [r15+0x3c8]
  0x000000011ba45170:   mov    QWORD PTR [r15+0x3c8],0x0
  0x000000011ba4517b:   mov    QWORD PTR [r15+0x3d0],0x0
  0x000000011ba45186:   add    rsp,0x30
  0x000000011ba4518a:   pop    rbp
  0x000000011ba4518b:   jmp    0x000000011b446f00           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba45190:   hlt
  0x000000011ba45191:   hlt
  0x000000011ba45192:   hlt
  0x000000011ba45193:   hlt
  0x000000011ba45194:   hlt
  0x000000011ba45195:   hlt
  0x000000011ba45196:   hlt
  0x000000011ba45197:   hlt
  0x000000011ba45198:   hlt
  0x000000011ba45199:   hlt
  0x000000011ba4519a:   hlt
  0x000000011ba4519b:   hlt
  0x000000011ba4519c:   hlt
  0x000000011ba4519d:   hlt
  0x000000011ba4519e:   hlt
  0x000000011ba4519f:   hlt
[Exception Handler]
  0x000000011ba451a0:   call   0x000000011b4d7900           ;   {no_reloc}
  0x000000011ba451a5:   movabs rdi,0x10db45fc1              ;   {external_word}
  0x000000011ba451af:   and    rsp,0xfffffffffffffff0
  0x000000011ba451b3:   call   0x000000010d7f0290           ;   {runtime_call _ZN14MacroAssembler7debug64EPcxPx}
  0x000000011ba451b8:   hlt
[Deopt Handler Code]
  0x000000011ba451b9:   movabs r10,0x11ba451b9              ;   {section_word}
  0x000000011ba451c3:   push   r10
  0x000000011ba451c5:   jmp    0x000000011b4333a0           ;   {runtime_call DeoptimizationBlob}
  0x000000011ba451ca:   hlt
  0x000000011ba451cb:   hlt
  0x000000011ba451cc:   hlt
  0x000000011ba451cd:   hlt
  0x000000011ba451ce:   hlt
  0x000000011ba451cf:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     335  591       4       ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral (512 bytes)
 total in heap  [0x0000000122ee4590,0x0000000122ee5c90] = 5888
 relocation     [0x0000000122ee46f0,0x0000000122ee4790] = 160
 main code      [0x0000000122ee47a0,0x0000000122ee5280] = 2784
 stub code      [0x0000000122ee5280,0x0000000122ee5300] = 128
 oops           [0x0000000122ee5300,0x0000000122ee5308] = 8
 metadata       [0x0000000122ee5308,0x0000000122ee5358] = 80
 scopes data    [0x0000000122ee5358,0x0000000122ee5990] = 1592
 scopes pcs     [0x0000000122ee5990,0x0000000122ee5bb0] = 544
 dependencies   [0x0000000122ee5bb0,0x0000000122ee5bb8] = 8
 handler table  [0x0000000122ee5bb8,0x0000000122ee5c60] = 168
 nul chk table  [0x0000000122ee5c60,0x0000000122ee5c90] = 48

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013a82f040} 'parseRestOfDecimalFloatLiteral' '([BIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  # parm3:    r8        = int
  # parm4:    r9        = boolean
  # parm5:    rdi       = boolean
  #           [sp+0x70]  (sp of caller)
  0x0000000122ee47a0:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000122ee47a7:   push   rbp
  0x0000000122ee47a8:   sub    rsp,0x60
  0x0000000122ee47ac:   mov    DWORD PTR [rsp+0x14],edi
  0x0000000122ee47b0:   mov    DWORD PTR [rsp+0x10],r9d
  0x0000000122ee47b5:   mov    DWORD PTR [rsp+0x4],ecx
  0x0000000122ee47b9:   mov    QWORD PTR [rsp+0x8],rsi
  0x0000000122ee47be:   mov    DWORD PTR [rsp],r8d
  0x0000000122ee47c2:   mov    r14d,edx
  0x0000000122ee47c5:   cmp    edx,r8d
  0x0000000122ee47c8:   jge    0x0000000122ee4960
  0x0000000122ee47ce:   mov    r8d,DWORD PTR [rsi+0xc]      ; implicit exception: dispatches to 0x0000000122ee51ec
  0x0000000122ee47d2:   mov    r10d,edx
  0x0000000122ee47d5:   mov    r11d,0xffffffff
  0x0000000122ee47db:   xor    ecx,ecx
  0x0000000122ee47dd:   data16 xchg ax,ax
  0x0000000122ee47e0:   cmp    r10d,r8d
  0x0000000122ee47e3:   jae    0x0000000122ee4dbc
  0x0000000122ee47e9:   mov    r9,QWORD PTR [rsp+0x8]
  0x0000000122ee47ee:   movsx  r9d,BYTE PTR [r9+r10*1+0x10]
  0x0000000122ee47f4:   mov    edi,r9d
  0x0000000122ee47f7:   add    edi,0xffffffd0
  0x0000000122ee47fa:   nop    WORD PTR [rax+rax*1+0x0]
  0x0000000122ee4800:   cmp    edi,0xa
  0x0000000122ee4803:   jae    0x0000000122ee4973
  0x0000000122ee4809:   mov    rbx,rcx
  0x0000000122ee480c:   shl    rbx,0x3
  0x0000000122ee4810:   movsxd rdi,r9d
  0x0000000122ee4813:   shl    rcx,1
  0x0000000122ee4816:   add    rcx,rbx
  0x0000000122ee4819:   add    rcx,rdi
  0x0000000122ee481c:   add    rcx,0xffffffffffffffd0
  0x0000000122ee4820:   mov    rbx,QWORD PTR [r15+0x340]
  0x0000000122ee4827:   inc    r10d                         ; ImmutableOopMap {[8]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@120 (line 347)
  0x0000000122ee482a:   test   DWORD PTR [rbx],eax          ;   {poll}
  0x0000000122ee482c:   cmp    r10d,DWORD PTR [rsp]
  0x0000000122ee4830:   jl     0x0000000122ee47dd
  0x0000000122ee4832:   mov    rdi,rcx
  0x0000000122ee4835:   cmp    r11d,0xffffffff
  0x0000000122ee4839:   je     0x0000000122ee4eb8
  0x0000000122ee483f:   mov    esi,r11d
  0x0000000122ee4842:   sub    esi,r10d
  0x0000000122ee4845:   mov    ebx,r10d
  0x0000000122ee4848:   sub    ebx,r14d
  0x0000000122ee484b:   mov    ecx,esi
  0x0000000122ee484d:   inc    ecx
  0x0000000122ee484f:   mov    r8d,ebx
  0x0000000122ee4852:   dec    r8d
  0x0000000122ee4855:   cmp    r9d,0x65
  0x0000000122ee4859:   je     0x0000000122ee4f08
  0x0000000122ee485f:   mov    ebp,DWORD PTR [rsp]
  0x0000000122ee4862:   sub    ebp,DWORD PTR [rsp+0x4]
  0x0000000122ee4866:   cmp    r9d,0x45
  0x0000000122ee486a:   je     0x0000000122ee4b35
  0x0000000122ee4870:   mov    eax,ecx
  0x0000000122ee4872:   mov    DWORD PTR [rsp+0x3c],r10d
  0x0000000122ee4877:   xor    ecx,ecx
  0x0000000122ee4879:   mov    r9d,DWORD PTR [rsp+0x3c]
  0x0000000122ee487e:   xchg   ax,ax
  0x0000000122ee4880:   cmp    r9d,DWORD PTR [rsp]
  0x0000000122ee4884:   jl     0x0000000122ee4906
  0x0000000122ee488a:   mov    edx,DWORD PTR [rsp+0x14]
  0x0000000122ee488e:   test   edx,edx
  0x0000000122ee4890:   je     0x0000000122ee4ce5
  0x0000000122ee4896:   cmp    r8d,0x13
  0x0000000122ee489a:   nop    WORD PTR [rax+rax*1+0x0]
  0x0000000122ee48a0:   jg     0x0000000122ee4f60
  0x0000000122ee48a6:   test   rdi,rdi
  0x0000000122ee48a9:   je     0x0000000122ee4fa8
  0x0000000122ee48af:   mov    r10d,eax
  0x0000000122ee48b2:   add    r10d,0x145
  0x0000000122ee48b9:   nop    DWORD PTR [rax+0x0]
  0x0000000122ee48c0:   cmp    r10d,0x27a
  0x0000000122ee48c7:   jae    0x0000000122ee4fe0
  0x0000000122ee48cd:   mov    esi,DWORD PTR [rsp+0x10]
  0x0000000122ee48d1:   mov    rdx,rdi
  0x0000000122ee48d4:   mov    ecx,eax
  0x0000000122ee48d6:   xchg   ax,ax
  0x0000000122ee48d8:   vzeroupper
  0x0000000122ee48db:   call   0x000000011ba45c20           ; ImmutableOopMap {[8]=Oop }
                                                            ;*invokestatic tryDecToDoubleWithFastAlgorithm {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleMath::decFloatLiteralToDouble@131 (line 763)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@485 (line 437)
                                                            ;   {static_call}
  0x0000000122ee48e0:   vucomisd xmm0,xmm0
  0x0000000122ee48e4:   jp     0x0000000122ee4d38
  0x0000000122ee48ea:   jne    0x0000000122ee4d38
  0x0000000122ee48f0:   vzeroupper
  0x0000000122ee48f3:   add    rsp,0x60
  0x0000000122ee48f7:   pop    rbp
  0x0000000122ee48f8:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x0000000122ee48ff:   ja     0x0000000122ee5264
  0x0000000122ee4905:   ret
  0x0000000122ee4906:   mov    rbx,QWORD PTR [rsp+0x8]
  0x0000000122ee490b:   mov    ebx,DWORD PTR [rbx+0xc]      ; implicit exception: dispatches to 0x0000000122ee5210
  0x0000000122ee490e:   cmp    r9d,ebx
  0x0000000122ee4911:   jae    0x0000000122ee4e17
  0x0000000122ee4917:   mov    rbx,QWORD PTR [rsp+0x8]
  0x0000000122ee491c:   movzx  ebp,BYTE PTR [rbx+r9*1+0x10]
  0x0000000122ee4922:   cmp    ebp,0x20
  0x0000000122ee4925:   jg     0x0000000122ee4e4c
  0x0000000122ee492b:   mov    esi,0xffffff45
  0x0000000122ee4930:   mov    QWORD PTR [rsp+0x18],rdi
  0x0000000122ee4935:   mov    DWORD PTR [rsp+0x20],eax
  0x0000000122ee4939:   mov    DWORD PTR [rsp+0x24],r14d
  0x0000000122ee493e:   mov    DWORD PTR [rsp+0x28],r11d
  0x0000000122ee4943:   mov    DWORD PTR [rsp+0x2c],r8d
  0x0000000122ee4948:   mov    DWORD PTR [rsp+0x30],r10d
  0x0000000122ee494d:   mov    QWORD PTR [rsp+0x38],rcx
  0x0000000122ee4952:   mov    DWORD PTR [rsp+0x48],r9d
  0x0000000122ee4957:   nop
  0x0000000122ee4958:   vzeroupper
  0x0000000122ee495b:   call   0x000000011b433000           ; ImmutableOopMap {[8]=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::skipWhitespace@16 (line 593)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@341 (line 408)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ee4960:   mov    r11d,0xffffffff
  0x0000000122ee4966:   xor    r9d,r9d
  0x0000000122ee4969:   xor    edi,edi
  0x0000000122ee496b:   mov    r10d,edx
  0x0000000122ee496e:   jmp    0x0000000122ee4835
  0x0000000122ee4973:   cmp    r9d,0x2e
  0x0000000122ee4977:   jne    0x0000000122ee4de0
  0x0000000122ee497d:   data16 xchg ax,ax
  0x0000000122ee4980:   cmp    r11d,0xffffffff
  0x0000000122ee4984:   jne    0x0000000122ee50e8
  0x0000000122ee498a:   mov    r11d,DWORD PTR [rsp]
  0x0000000122ee498e:   add    r11d,0xfffffff7
  0x0000000122ee4992:   cmp    r10d,r11d
  0x0000000122ee4995:   jl     0x0000000122ee49a5
  0x0000000122ee4997:   mov    r9d,0x2e
  0x0000000122ee499d:   mov    r11d,r10d
  0x0000000122ee49a0:   jmp    0x0000000122ee4820
  0x0000000122ee49a5:   mov    ebx,r8d
  0x0000000122ee49a8:   add    ebx,0xfffffff9
  0x0000000122ee49ab:   test   ebx,ebx
  0x0000000122ee49ad:   jl     0x0000000122ee5048
  0x0000000122ee49b3:   movsxd rbx,r8d
  0x0000000122ee49b6:   movsxd rdi,r10d
  0x0000000122ee49b9:   add    rbx,0xfffffffffffffff9
  0x0000000122ee49bd:   mov    r9,rdi
  0x0000000122ee49c0:   add    r9,0x1
  0x0000000122ee49c4:   cmp    r9,rbx
  0x0000000122ee49c7:   jae    0x0000000122ee5048
  0x0000000122ee49cd:   movsxd r9,r11d
  0x0000000122ee49d0:   sub    r9,rdi
  0x0000000122ee49d3:   add    r9,0x7
  0x0000000122ee49d7:   and    r9,0xfffffffffffffff8
  0x0000000122ee49db:   mov    edi,r9d
  0x0000000122ee49de:   add    edi,r10d
  0x0000000122ee49e1:   movsxd r9,edi
  0x0000000122ee49e4:   add    r9,0xfffffffffffffff9
  0x0000000122ee49e8:   cmp    r9,rbx
  0x0000000122ee49eb:   jae    0x0000000122ee5048
  0x0000000122ee49f1:   cmp    r11d,0x7ffffff8
  0x0000000122ee49f8:   jg     0x0000000122ee5098
  0x0000000122ee49fe:   mov    DWORD PTR [rsp+0x28],r11d
  0x0000000122ee4a03:   mov    QWORD PTR [rsp+0x20],rcx
  0x0000000122ee4a08:   mov    DWORD PTR [rsp+0x1c],r10d
  0x0000000122ee4a0d:   mov    DWORD PTR [rsp+0x18],r8d
  0x0000000122ee4a12:   mov    ebp,r14d
  0x0000000122ee4a15:   mov    DWORD PTR [rsp+0x2c],r10d
  0x0000000122ee4a1a:   mov    r10d,0x2e
  0x0000000122ee4a20:   mov    DWORD PTR [rsp+0x30],r10d
  0x0000000122ee4a25:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x0000000122ee4a30:   movsxd rcx,DWORD PTR [rsp+0x2c]
  0x0000000122ee4a35:   add    rcx,0x11
  0x0000000122ee4a39:   movabs rsi,0x61fc04978              ;   {oop(a 'jdk/internal/misc/Unsafe'{0x000000061fc04978})}
  0x0000000122ee4a43:   mov    rdx,QWORD PTR [rsp+0x8]
  0x0000000122ee4a48:   xor    r8d,r8d
  0x0000000122ee4a4b:   nop
  0x0000000122ee4a4c:   vzeroupper
  0x0000000122ee4a4f:   call   0x000000011ba48ee0           ; ImmutableOopMap {[8]=Oop }
                                                            ;*invokevirtual getLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.VarHandleByteArrayAsLongs$ArrayHandle::get@32 (line 115)
                                                            ; - java.lang.invoke.VarHandleGuards::guard_LI_J@45 (line 798)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::tryToParseEightDigitsSwarIndependentMultiplications@5 (line 620)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::tryToParseEightDigits@2 (line 608)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@89 (line 358)
                                                            ;   {optimized virtual_call}
  0x0000000122ee4a54:   mov    r10,rax
  0x0000000122ee4a57:   movabs r11,0x4646464646464646
  0x0000000122ee4a61:   add    r10,r11
  0x0000000122ee4a64:   movabs r11,0xcfcfcfcfcfcfcfd0
  0x0000000122ee4a6e:   add    rax,r11
  0x0000000122ee4a71:   or     r10,rax
  0x0000000122ee4a74:   movabs r11,0x8080808080808080
  0x0000000122ee4a7e:   and    r10,r11
  0x0000000122ee4a81:   test   r10,r10
  0x0000000122ee4a84:   jne    0x0000000122ee4e0c
  0x0000000122ee4a8a:   imul   r11,rax,0xa01
  0x0000000122ee4a91:   mov    r8,r11
  0x0000000122ee4a94:   sar    r8,0x8
  0x0000000122ee4a98:   shr    r11,0x8
  0x0000000122ee4a9c:   movabs r10,0xff000000ff
  0x0000000122ee4aa6:   and    r11,r10
  0x0000000122ee4aa9:   movabs r10,0xf424000000064
  0x0000000122ee4ab3:   imul   r11,r10
  0x0000000122ee4ab7:   shr    r8,0x10
  0x0000000122ee4abb:   movabs r10,0xff000000ff
  0x0000000122ee4ac5:   and    r8,r10
  0x0000000122ee4ac8:   movabs r10,0x271000000001
  0x0000000122ee4ad2:   imul   r8,r10
  0x0000000122ee4ad6:   add    r11,r8
  0x0000000122ee4ad9:   shr    r11,0x20
  0x0000000122ee4add:   mov    r11d,r11d
  0x0000000122ee4ae0:   test   r11d,r11d
  0x0000000122ee4ae3:   jl     0x0000000122ee4de8
  0x0000000122ee4ae9:   movsxd r11,r11d
  0x0000000122ee4aec:   imul   r10,QWORD PTR [rsp+0x20],0x5f5e100
  0x0000000122ee4af5:   add    r10,r11
  0x0000000122ee4af8:   mov    QWORD PTR [rsp+0x20],r10
  0x0000000122ee4afd:   mov    r10d,DWORD PTR [rsp+0x2c]
  0x0000000122ee4b02:   add    r10d,0x8
  0x0000000122ee4b06:   mov    DWORD PTR [rsp+0x2c],r10d
  0x0000000122ee4b0b:   cmp    r10d,DWORD PTR [rsp+0x28]
  0x0000000122ee4b10:   jl     0x0000000122ee4a30
  0x0000000122ee4b16:   mov    r9d,DWORD PTR [rsp+0x1c]
  0x0000000122ee4b1b:   mov    r14d,ebp
  0x0000000122ee4b1e:   mov    r8d,DWORD PTR [rsp+0x18]
  0x0000000122ee4b23:   mov    r11d,r9d
  0x0000000122ee4b26:   mov    rcx,QWORD PTR [rsp+0x20]
  0x0000000122ee4b2b:   mov    r9d,DWORD PTR [rsp+0x30]
  0x0000000122ee4b30:   jmp    0x0000000122ee4820
  0x0000000122ee4b35:   mov    edx,r10d
  0x0000000122ee4b38:   inc    edx
  0x0000000122ee4b3a:   nop    WORD PTR [rax+rax*1+0x0]
  0x0000000122ee4b40:   cmp    edx,DWORD PTR [rsp]
  0x0000000122ee4b43:   jge    0x0000000122ee4b85
  0x0000000122ee4b49:   mov    r9,QWORD PTR [rsp+0x8]
  0x0000000122ee4b4e:   mov    eax,DWORD PTR [r9+0xc]       ; implicit exception: dispatches to 0x0000000122ee5230
  0x0000000122ee4b52:   cmp    edx,eax
  0x0000000122ee4b54:   jae    0x0000000122ee5134
  0x0000000122ee4b5a:   movsxd r13,r10d
  0x0000000122ee4b5d:   mov    r9,QWORD PTR [rsp+0x8]
  0x0000000122ee4b62:   movsx  r9d,BYTE PTR [r9+r13*1+0x11]
  0x0000000122ee4b68:   cmp    r9d,0x2d
  0x0000000122ee4b6c:   je     0x0000000122ee4d8b
  0x0000000122ee4b72:   cmp    r9d,0x2b
  0x0000000122ee4b76:   jne    0x0000000122ee4b88
  0x0000000122ee4b78:   xor    r9d,r9d
  0x0000000122ee4b7b:   nop    DWORD PTR [rax+rax*1+0x0]
  0x0000000122ee4b80:   jmp    0x0000000122ee4d91
  0x0000000122ee4b85:   xor    r9d,r9d
  0x0000000122ee4b88:   mov    DWORD PTR [rsp+0x44],r9d
  0x0000000122ee4b8d:   xor    r9d,r9d
  0x0000000122ee4b90:   mov    DWORD PTR [rsp+0x40],r9d
  0x0000000122ee4b95:   mov    DWORD PTR [rsp+0x3c],edx
  0x0000000122ee4b99:   mov    DWORD PTR [rsp+0x38],ebp
  0x0000000122ee4b9d:   mov    DWORD PTR [rsp+0x34],r8d
  0x0000000122ee4ba2:   mov    DWORD PTR [rsp+0x30],ecx
  0x0000000122ee4ba6:   mov    DWORD PTR [rsp+0x2c],ebx
  0x0000000122ee4baa:   mov    DWORD PTR [rsp+0x28],esi
  0x0000000122ee4bae:   mov    QWORD PTR [rsp+0x20],rdi
  0x0000000122ee4bb3:   mov    DWORD PTR [rsp+0x1c],r11d
  0x0000000122ee4bb8:   mov    DWORD PTR [rsp+0x18],r10d
  0x0000000122ee4bbd:   mov    ebp,r14d
  0x0000000122ee4bc0:   mov    esi,DWORD PTR [rsp+0x44]
  0x0000000122ee4bc4:   vzeroupper
  0x0000000122ee4bc7:   call   0x0000000122ee0300           ; ImmutableOopMap {[8]=Oop }
                                                            ;*invokestatic isDigit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@254 (line 390)
                                                            ;   {static_call}
  0x0000000122ee4bcc:   test   eax,eax
  0x0000000122ee4bce:   je     0x0000000122ee4d51
  0x0000000122ee4bd4:   mov    r10d,DWORD PTR [rsp+0x44]
  0x0000000122ee4bd9:   xor    r8d,r8d
  0x0000000122ee4bdc:   nop    DWORD PTR [rax+0x0]
  0x0000000122ee4be0:   jmp    0x0000000122ee4c54
  0x0000000122ee4be5:   movsxd r10,r10d
  0x0000000122ee4be8:   mov    r11,r8
  0x0000000122ee4beb:   shl    r11,1
  0x0000000122ee4bee:   shl    r8,0x3
  0x0000000122ee4bf2:   add    r11,r8
  0x0000000122ee4bf5:   add    r11,r10
  0x0000000122ee4bf8:   add    r11,0xffffffffffffffd0
  0x0000000122ee4bfc:   mov    r8d,DWORD PTR [rsp+0x3c]
  0x0000000122ee4c01:   inc    r8d
  0x0000000122ee4c04:   cmp    r8d,DWORD PTR [rsp]
  0x0000000122ee4c08:   jl     0x0000000122ee4c72
  0x0000000122ee4c0e:   xor    r10d,r10d
  0x0000000122ee4c11:   mov    r9,QWORD PTR [rsp+0x8]
  0x0000000122ee4c16:   mov    DWORD PTR [rsp+0x44],r10d
  0x0000000122ee4c1b:   mov    DWORD PTR [rsp+0x3c],r8d
  0x0000000122ee4c20:   mov    QWORD PTR [rsp+0x48],r11
  0x0000000122ee4c25:   mov    QWORD PTR [rsp+0x8],r9
  0x0000000122ee4c2a:   mov    esi,r10d
  0x0000000122ee4c2d:   data16 xchg ax,ax
  0x0000000122ee4c30:   vzeroupper
  0x0000000122ee4c33:   call   0x0000000122ee0300           ; ImmutableOopMap {[8]=Oop }
                                                            ;*invokestatic isDigit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@313 (line 399)
                                                            ;   {static_call}
  0x0000000122ee4c38:   mov    r10,QWORD PTR [r15+0x340]    ; ImmutableOopMap {[8]=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@316 (line 399)
  0x0000000122ee4c3f:   test   DWORD PTR [r10],eax          ;   {poll}
  0x0000000122ee4c42:   test   eax,eax
  0x0000000122ee4c44:   je     0x0000000122ee4c99
  0x0000000122ee4c4a:   mov    r10d,DWORD PTR [rsp+0x44]
  0x0000000122ee4c4f:   mov    r8,QWORD PTR [rsp+0x48]
  0x0000000122ee4c54:   nop    DWORD PTR [rax+rax*1+0x0]
  0x0000000122ee4c5c:   data16 data16 xchg ax,ax
  0x0000000122ee4c60:   cmp    r8,0x989680
  0x0000000122ee4c67:   jl     0x0000000122ee4be5
  0x0000000122ee4c6d:   mov    r11,r8
  0x0000000122ee4c70:   jmp    0x0000000122ee4bfc
  0x0000000122ee4c72:   mov    r9,QWORD PTR [rsp+0x8]
  0x0000000122ee4c77:   mov    ecx,DWORD PTR [r9+0xc]       ; implicit exception: dispatches to 0x0000000122ee5220
  0x0000000122ee4c7b:   nop    DWORD PTR [rax+rax*1+0x0]
  0x0000000122ee4c80:   cmp    r8d,ecx
  0x0000000122ee4c83:   jae    0x0000000122ee5010
  0x0000000122ee4c89:   movsxd r10,DWORD PTR [rsp+0x3c]
  0x0000000122ee4c8e:   movsx  r10d,BYTE PTR [r9+r10*1+0x11]
  0x0000000122ee4c94:   jmp    0x0000000122ee4c16
  0x0000000122ee4c99:   mov    r10d,DWORD PTR [rsp+0x40]
  0x0000000122ee4c9e:   xchg   ax,ax
  0x0000000122ee4ca0:   test   r10d,r10d
  0x0000000122ee4ca3:   je     0x0000000122ee4d81
  0x0000000122ee4ca9:   mov    rcx,QWORD PTR [rsp+0x48]
  0x0000000122ee4cae:   neg    rcx
  0x0000000122ee4cb1:   mov    r11d,ecx
  0x0000000122ee4cb4:   add    r11d,DWORD PTR [rsp+0x28]
  0x0000000122ee4cb9:   inc    r11d
  0x0000000122ee4cbc:   mov    eax,r11d
  0x0000000122ee4cbf:   mov    r14d,ebp
  0x0000000122ee4cc2:   mov    r10d,DWORD PTR [rsp+0x18]
  0x0000000122ee4cc7:   mov    r11d,DWORD PTR [rsp+0x1c]
  0x0000000122ee4ccc:   mov    rdi,QWORD PTR [rsp+0x20]
  0x0000000122ee4cd1:   mov    ebx,DWORD PTR [rsp+0x2c]
  0x0000000122ee4cd5:   mov    r8d,DWORD PTR [rsp+0x34]
  0x0000000122ee4cda:   mov    ebp,DWORD PTR [rsp+0x38]
  0x0000000122ee4cde:   xchg   ax,ax
  0x0000000122ee4ce0:   jmp    0x0000000122ee4879
  0x0000000122ee4ce5:   cmp    ebx,0x1
  0x0000000122ee4ce8:   jne    0x0000000122ee4896
  0x0000000122ee4cee:   mov    rbx,QWORD PTR [rsp+0x8]
  0x0000000122ee4cf3:   mov    ebx,DWORD PTR [rbx+0xc]      ; implicit exception: dispatches to 0x0000000122ee5254
  0x0000000122ee4cf6:   cmp    r11d,ebx
  0x0000000122ee4cf9:   jae    0x0000000122ee5174
  0x0000000122ee4cff:   mov    rbx,QWORD PTR [rsp+0x8]
  0x0000000122ee4d04:   cmp    BYTE PTR [rbx+r11*1+0x10],0x2e
  0x0000000122ee4d0a:   je     0x0000000122ee4896
  0x0000000122ee4d10:   mov    rsi,QWORD PTR [rsp+0x8]
  0x0000000122ee4d15:   mov    edx,DWORD PTR [rsp+0x4]
  0x0000000122ee4d19:   mov    ecx,ebp
  0x0000000122ee4d1b:   nop
  0x0000000122ee4d1c:   vzeroupper
  0x0000000122ee4d1f:   call   0x000000011b42e080           ; ImmutableOopMap {}
                                                            ;*invokestatic newNumberFormatException {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@374 (line 411)
                                                            ;   {static_call}
  0x0000000122ee4d24:   test   rax,rax
  0x0000000122ee4d27:   jne    0x0000000122ee4d71
  0x0000000122ee4d29:   mov    esi,0xfffffff6
  0x0000000122ee4d2e:   xchg   ax,ax
  0x0000000122ee4d30:   vzeroupper
  0x0000000122ee4d33:   call   0x000000011b433000           ; ImmutableOopMap {}
                                                            ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@377 (line 411)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ee4d38:   mov    rsi,QWORD PTR [rsp+0x8]
  0x0000000122ee4d3d:   mov    edx,DWORD PTR [rsp+0x4]
  0x0000000122ee4d41:   mov    ecx,ebp
  0x0000000122ee4d43:   nop
  0x0000000122ee4d44:   vzeroupper
  0x0000000122ee4d47:   call   0x000000011b42e080           ; ImmutableOopMap {}
                                                            ;*invokestatic parseRestOfDecimalFloatLiteralTheHardWay {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@503 (line 438)
                                                            ;   {static_call}
  0x0000000122ee4d4c:   jmp    0x0000000122ee48f0
  0x0000000122ee4d51:   mov    rsi,QWORD PTR [rsp+0x8]
  0x0000000122ee4d56:   mov    edx,DWORD PTR [rsp+0x4]
  0x0000000122ee4d5a:   mov    ecx,DWORD PTR [rsp+0x38]
  0x0000000122ee4d5e:   xchg   ax,ax
  0x0000000122ee4d60:   vzeroupper
  0x0000000122ee4d63:   call   0x000000011b42e080           ; ImmutableOopMap {}
                                                            ;*invokestatic newNumberFormatException {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@265 (line 391)
                                                            ;   {static_call}
  0x0000000122ee4d68:   test   rax,rax
  0x0000000122ee4d6b:   je     0x0000000122ee5164
  0x0000000122ee4d71:   mov    rsi,rax
  0x0000000122ee4d74:   vzeroupper
  0x0000000122ee4d77:   add    rsp,0x60
  0x0000000122ee4d7b:   pop    rbp
  0x0000000122ee4d7c:   jmp    0x000000011b4e2700           ;   {runtime_call _rethrow_Java}
  0x0000000122ee4d81:   mov    rcx,QWORD PTR [rsp+0x48]
  0x0000000122ee4d86:   jmp    0x0000000122ee4cb1
  0x0000000122ee4d8b:   mov    r9d,0x1
  0x0000000122ee4d91:   mov    edx,r10d
  0x0000000122ee4d94:   add    edx,0x2
  0x0000000122ee4d97:   cmp    edx,DWORD PTR [rsp]
  0x0000000122ee4d9a:   jl     0x0000000122ee4da7
  0x0000000122ee4d9c:   xor    eax,eax
  0x0000000122ee4d9e:   mov    DWORD PTR [rsp+0x44],eax
  0x0000000122ee4da2:   jmp    0x0000000122ee4b90
  0x0000000122ee4da7:   cmp    edx,eax
  0x0000000122ee4da9:   jae    0x0000000122ee51b8
  0x0000000122ee4daf:   mov    rax,QWORD PTR [rsp+0x8]
  0x0000000122ee4db4:   movsx  eax,BYTE PTR [rax+r13*1+0x12]
  0x0000000122ee4dba:   jmp    0x0000000122ee4d9e
  0x0000000122ee4dbc:   mov    esi,0xffffffe4
  0x0000000122ee4dc1:   mov    QWORD PTR [rsp+0x20],rcx
  0x0000000122ee4dc6:   mov    DWORD PTR [rsp+0x1c],r14d
  0x0000000122ee4dcb:   mov    DWORD PTR [rsp+0x28],r11d
  0x0000000122ee4dd0:   mov    DWORD PTR [rsp+0x2c],r10d
  0x0000000122ee4dd5:   data16 xchg ax,ax
  0x0000000122ee4dd8:   vzeroupper
  0x0000000122ee4ddb:   call   0x000000011b433000           ; ImmutableOopMap {[8]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@22 (line 348)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ee4de0:   mov    rdi,rcx
  0x0000000122ee4de3:   jmp    0x0000000122ee4835
  0x0000000122ee4de8:   mov    r9d,DWORD PTR [rsp+0x1c]
  0x0000000122ee4ded:   mov    r14d,ebp
  0x0000000122ee4df0:   mov    r8d,DWORD PTR [rsp+0x18]
  0x0000000122ee4df5:   mov    r10d,DWORD PTR [rsp+0x2c]
  0x0000000122ee4dfa:   mov    r11d,r9d
  0x0000000122ee4dfd:   mov    rcx,QWORD PTR [rsp+0x20]
  0x0000000122ee4e02:   mov    r9d,DWORD PTR [rsp+0x30]
  0x0000000122ee4e07:   jmp    0x0000000122ee4820
  0x0000000122ee4e0c:   mov    r11d,0xffffffff
  0x0000000122ee4e12:   jmp    0x0000000122ee4ae0
  0x0000000122ee4e17:   mov    esi,0xffffffe4
  0x0000000122ee4e1c:   mov    QWORD PTR [rsp+0x18],rdi
  0x0000000122ee4e21:   mov    DWORD PTR [rsp+0x20],eax
  0x0000000122ee4e25:   mov    DWORD PTR [rsp+0x24],r14d
  0x0000000122ee4e2a:   mov    DWORD PTR [rsp+0x28],r11d
  0x0000000122ee4e2f:   mov    DWORD PTR [rsp+0x2c],r8d
  0x0000000122ee4e34:   mov    DWORD PTR [rsp+0x30],r10d
  0x0000000122ee4e39:   mov    QWORD PTR [rsp+0x38],rcx
  0x0000000122ee4e3e:   mov    DWORD PTR [rsp+0x44],r9d
  0x0000000122ee4e43:   nop
  0x0000000122ee4e44:   vzeroupper
  0x0000000122ee4e47:   call   0x000000011b433000           ; ImmutableOopMap {[8]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::skipWhitespace@9 (line 593)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@341 (line 408)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ee4e4c:   mov    esi,0xffffff45
  0x0000000122ee4e51:   mov    rbp,QWORD PTR [rsp+0x8]
  0x0000000122ee4e56:   mov    QWORD PTR [rsp-0x8],rax
  0x0000000122ee4e5b:   mov    eax,DWORD PTR [rsp+0x10]
  0x0000000122ee4e5f:   mov    DWORD PTR [rsp+0xc],eax
  0x0000000122ee4e63:   mov    rax,QWORD PTR [rsp-0x8]
  0x0000000122ee4e68:   mov    QWORD PTR [rsp-0x8],rax
  0x0000000122ee4e6d:   mov    eax,DWORD PTR [rsp+0x14]
  0x0000000122ee4e71:   mov    DWORD PTR [rsp+0x10],eax
  0x0000000122ee4e75:   mov    rax,QWORD PTR [rsp-0x8]
  0x0000000122ee4e7a:   mov    QWORD PTR [rsp+0x18],rdi
  0x0000000122ee4e7f:   mov    DWORD PTR [rsp+0x14],eax
  0x0000000122ee4e83:   mov    DWORD PTR [rsp+0x20],r14d
  0x0000000122ee4e88:   mov    DWORD PTR [rsp+0x24],r11d
  0x0000000122ee4e8d:   mov    DWORD PTR [rsp+0x28],r8d
  0x0000000122ee4e92:   mov    DWORD PTR [rsp+0x2c],r10d
  0x0000000122ee4e97:   mov    QWORD PTR [rsp+0x30],rcx
  0x0000000122ee4e9c:   mov    QWORD PTR [rsp-0x8],rax
  0x0000000122ee4ea1:   mov    eax,DWORD PTR [rsp+0x3c]
  0x0000000122ee4ea5:   mov    DWORD PTR [rsp+0x38],eax
  0x0000000122ee4ea9:   mov    rax,QWORD PTR [rsp-0x8]
  0x0000000122ee4eae:   xchg   ax,ax
  0x0000000122ee4eb0:   vzeroupper
  0x0000000122ee4eb3:   call   0x000000011b433000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@347 (line 409)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ee4eb8:   mov    esi,0xffffff45
  0x0000000122ee4ebd:   mov    rbp,QWORD PTR [rsp+0x8]
  0x0000000122ee4ec2:   mov    QWORD PTR [rsp-0x8],rax
  0x0000000122ee4ec7:   mov    eax,DWORD PTR [rsp+0x10]
  0x0000000122ee4ecb:   mov    DWORD PTR [rsp+0xc],eax
  0x0000000122ee4ecf:   mov    rax,QWORD PTR [rsp-0x8]
  0x0000000122ee4ed4:   mov    QWORD PTR [rsp-0x8],rax
  0x0000000122ee4ed9:   mov    eax,DWORD PTR [rsp+0x14]
  0x0000000122ee4edd:   mov    DWORD PTR [rsp+0x10],eax
  0x0000000122ee4ee1:   mov    rax,QWORD PTR [rsp-0x8]
  0x0000000122ee4ee6:   mov    QWORD PTR [rsp+0x18],rdi
  0x0000000122ee4eeb:   mov    DWORD PTR [rsp+0x14],r14d
  0x0000000122ee4ef0:   mov    DWORD PTR [rsp+0x24],r9d
  0x0000000122ee4ef5:   mov    DWORD PTR [rsp+0x28],r10d
  0x0000000122ee4efa:   mov    DWORD PTR [rsp+0x2c],r11d
  0x0000000122ee4eff:   nop
  0x0000000122ee4f00:   vzeroupper
  0x0000000122ee4f03:   call   0x000000011b433000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@129 (line 372)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ee4f08:   mov    esi,0xffffff45
  0x0000000122ee4f0d:   mov    rbp,QWORD PTR [rsp+0x8]
  0x0000000122ee4f12:   mov    QWORD PTR [rsp-0x8],rax
  0x0000000122ee4f17:   mov    eax,DWORD PTR [rsp+0x10]
  0x0000000122ee4f1b:   mov    DWORD PTR [rsp+0xc],eax
  0x0000000122ee4f1f:   mov    rax,QWORD PTR [rsp-0x8]
  0x0000000122ee4f24:   mov    QWORD PTR [rsp-0x8],rax
  0x0000000122ee4f29:   mov    eax,DWORD PTR [rsp+0x14]
  0x0000000122ee4f2d:   mov    DWORD PTR [rsp+0x10],eax
  0x0000000122ee4f31:   mov    rax,QWORD PTR [rsp-0x8]
  0x0000000122ee4f36:   mov    QWORD PTR [rsp+0x18],rdi
  0x0000000122ee4f3b:   mov    DWORD PTR [rsp+0x14],ecx
  0x0000000122ee4f3f:   mov    DWORD PTR [rsp+0x20],r14d
  0x0000000122ee4f44:   mov    DWORD PTR [rsp+0x24],r11d
  0x0000000122ee4f49:   mov    DWORD PTR [rsp+0x28],r8d
  0x0000000122ee4f4e:   mov    DWORD PTR [rsp+0x30],r10d
  0x0000000122ee4f53:   mov    DWORD PTR [rsp+0x34],r9d
  0x0000000122ee4f58:   vzeroupper
  0x0000000122ee4f5b:   call   0x000000011b433000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@170 (line 383)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ee4f60:   mov    esi,0xffffff45
  0x0000000122ee4f65:   mov    rbp,QWORD PTR [rsp+0x8]
  0x0000000122ee4f6a:   mov    QWORD PTR [rsp-0x8],rax
  0x0000000122ee4f6f:   mov    eax,DWORD PTR [rsp+0x10]
  0x0000000122ee4f73:   mov    DWORD PTR [rsp+0xc],eax
  0x0000000122ee4f77:   mov    rax,QWORD PTR [rsp-0x8]
  0x0000000122ee4f7c:   mov    QWORD PTR [rsp+0x10],rdi
  0x0000000122ee4f81:   mov    DWORD PTR [rsp+0x18],eax
  0x0000000122ee4f85:   mov    DWORD PTR [rsp+0x1c],r14d
  0x0000000122ee4f8a:   mov    DWORD PTR [rsp+0x20],r11d
  0x0000000122ee4f8f:   mov    DWORD PTR [rsp+0x24],r10d
  0x0000000122ee4f94:   mov    QWORD PTR [rsp+0x28],rcx
  0x0000000122ee4f99:   mov    DWORD PTR [rsp+0x30],r8d
  0x0000000122ee4f9e:   xchg   ax,ax
  0x0000000122ee4fa0:   vzeroupper
  0x0000000122ee4fa3:   call   0x000000011b433000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@385 (line 418)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ee4fa8:   xor    r10d,r10d
  0x0000000122ee4fab:   cmp    rdi,r10
  0x0000000122ee4fae:   mov    ebp,0xffffffff
  0x0000000122ee4fb3:   jl     0x0000000122ee4fbd
  0x0000000122ee4fb5:   setne  bpl
  0x0000000122ee4fb9:   movzx  ebp,bpl
  0x0000000122ee4fbd:   mov    esi,0xffffff45
  0x0000000122ee4fc2:   mov    QWORD PTR [rsp+0x18],rdi
  0x0000000122ee4fc7:   mov    DWORD PTR [rsp+0x20],eax
  0x0000000122ee4fcb:   mov    DWORD PTR [rsp+0x24],r11d
  0x0000000122ee4fd0:   mov    QWORD PTR [rsp+0x28],rcx
  0x0000000122ee4fd5:   data16 xchg ax,ax
  0x0000000122ee4fd8:   vzeroupper
  0x0000000122ee4fdb:   call   0x000000011b433000           ; ImmutableOopMap {[8]=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleMath::decFloatLiteralToDouble@3 (line 738)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@485 (line 437)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ee4fe0:   mov    esi,0xffffff3d
  0x0000000122ee4fe5:   mov    rbp,QWORD PTR [rsp+0x8]
  0x0000000122ee4fea:   mov    QWORD PTR [rsp-0x8],rax
  0x0000000122ee4fef:   mov    eax,DWORD PTR [rsp+0x10]
  0x0000000122ee4ff3:   mov    DWORD PTR [rsp+0x8],eax
  0x0000000122ee4ff7:   mov    rax,QWORD PTR [rsp-0x8]
  0x0000000122ee4ffc:   mov    QWORD PTR [rsp+0x10],rdi
  0x0000000122ee5001:   mov    DWORD PTR [rsp+0x18],eax
  0x0000000122ee5005:   data16 xchg ax,ax
  0x0000000122ee5008:   vzeroupper
  0x0000000122ee500b:   call   0x000000011b433000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpgt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleMath::decFloatLiteralToDouble@116 (line 762)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@485 (line 437)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ee5010:   mov    esi,0xffffffe4
  0x0000000122ee5015:   mov    r10d,DWORD PTR [rsp+0x30]
  0x0000000122ee501a:   mov    DWORD PTR [rsp+0x2c],r10d
  0x0000000122ee501f:   mov    r10d,DWORD PTR [rsp+0x34]
  0x0000000122ee5024:   mov    DWORD PTR [rsp+0x30],r10d
  0x0000000122ee5029:   mov    QWORD PTR [rsp+0x38],r11
  0x0000000122ee502e:   mov    r11d,DWORD PTR [rsp+0x40]
  0x0000000122ee5033:   mov    DWORD PTR [rsp+0x34],r11d
  0x0000000122ee5038:   mov    DWORD PTR [rsp+0x48],r8d
  0x0000000122ee503d:   data16 xchg ax,ax
  0x0000000122ee5040:   vzeroupper
  0x0000000122ee5043:   call   0x000000011b433000           ; ImmutableOopMap {[8]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@304 (line 398)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ee5048:   mov    esi,0xffffff76
  0x0000000122ee504d:   mov    rbp,QWORD PTR [rsp+0x8]
  0x0000000122ee5052:   mov    QWORD PTR [rsp-0x8],rax
  0x0000000122ee5057:   mov    eax,DWORD PTR [rsp+0x10]
  0x0000000122ee505b:   mov    DWORD PTR [rsp+0xc],eax
  0x0000000122ee505f:   mov    rax,QWORD PTR [rsp-0x8]
  0x0000000122ee5064:   mov    QWORD PTR [rsp-0x8],rax
  0x0000000122ee5069:   mov    eax,DWORD PTR [rsp+0x14]
  0x0000000122ee506d:   mov    DWORD PTR [rsp+0x10],eax
  0x0000000122ee5071:   mov    rax,QWORD PTR [rsp-0x8]
  0x0000000122ee5076:   mov    QWORD PTR [rsp+0x18],rcx
  0x0000000122ee507b:   mov    DWORD PTR [rsp+0x14],r14d
  0x0000000122ee5080:   mov    DWORD PTR [rsp+0x20],r10d
  0x0000000122ee5085:   mov    DWORD PTR [rsp+0x24],r10d
  0x0000000122ee508a:   mov    DWORD PTR [rsp+0x28],r11d
  0x0000000122ee508f:   nop
  0x0000000122ee5090:   vzeroupper
  0x0000000122ee5093:   call   0x000000011b433000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@82 (line 357)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ee5098:   mov    esi,0xffffff6e
  0x0000000122ee509d:   mov    rbp,QWORD PTR [rsp+0x8]
  0x0000000122ee50a2:   mov    QWORD PTR [rsp-0x8],rax
  0x0000000122ee50a7:   mov    eax,DWORD PTR [rsp+0x10]
  0x0000000122ee50ab:   mov    DWORD PTR [rsp+0xc],eax
  0x0000000122ee50af:   mov    rax,QWORD PTR [rsp-0x8]
  0x0000000122ee50b4:   mov    QWORD PTR [rsp-0x8],rax
  0x0000000122ee50b9:   mov    eax,DWORD PTR [rsp+0x14]
  0x0000000122ee50bd:   mov    DWORD PTR [rsp+0x10],eax
  0x0000000122ee50c1:   mov    rax,QWORD PTR [rsp-0x8]
  0x0000000122ee50c6:   mov    QWORD PTR [rsp+0x18],rcx
  0x0000000122ee50cb:   mov    DWORD PTR [rsp+0x14],r14d
  0x0000000122ee50d0:   mov    DWORD PTR [rsp+0x20],r10d
  0x0000000122ee50d5:   mov    DWORD PTR [rsp+0x24],r10d
  0x0000000122ee50da:   mov    DWORD PTR [rsp+0x28],r11d
  0x0000000122ee50df:   nop
  0x0000000122ee50e0:   vzeroupper
  0x0000000122ee50e3:   call   0x000000011b433000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@82 (line 357)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ee50e8:   mov    esi,0xffffff45
  0x0000000122ee50ed:   mov    rbp,QWORD PTR [rsp+0x8]
  0x0000000122ee50f2:   mov    DWORD PTR [rsp+0x8],r10d
  0x0000000122ee50f7:   mov    QWORD PTR [rsp-0x8],rax
  0x0000000122ee50fc:   mov    eax,DWORD PTR [rsp+0x10]
  0x0000000122ee5100:   mov    DWORD PTR [rsp+0xc],eax
  0x0000000122ee5104:   mov    rax,QWORD PTR [rsp-0x8]
  0x0000000122ee5109:   mov    QWORD PTR [rsp-0x8],rax
  0x0000000122ee510e:   mov    eax,DWORD PTR [rsp+0x14]
  0x0000000122ee5112:   mov    DWORD PTR [rsp+0x10],eax
  0x0000000122ee5116:   mov    rax,QWORD PTR [rsp-0x8]
  0x0000000122ee511b:   mov    QWORD PTR [rsp+0x18],rcx
  0x0000000122ee5120:   mov    DWORD PTR [rsp+0x14],r14d
  0x0000000122ee5125:   mov    DWORD PTR [rsp+0x20],r11d
  0x0000000122ee512a:   xchg   ax,ax
  0x0000000122ee512c:   vzeroupper
  0x0000000122ee512f:   call   0x000000011b433000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@62 (line 353)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ee5134:   mov    esi,0xffffffe4
  0x0000000122ee5139:   mov    QWORD PTR [rsp+0x20],rdi
  0x0000000122ee513e:   mov    DWORD PTR [rsp+0x1c],ecx
  0x0000000122ee5142:   mov    DWORD PTR [rsp+0x28],r14d
  0x0000000122ee5147:   mov    DWORD PTR [rsp+0x2c],r11d
  0x0000000122ee514c:   mov    DWORD PTR [rsp+0x30],r8d
  0x0000000122ee5151:   mov    DWORD PTR [rsp+0x34],r10d
  0x0000000122ee5156:   mov    DWORD PTR [rsp+0x38],edx
  0x0000000122ee515a:   xchg   ax,ax
  0x0000000122ee515c:   vzeroupper
  0x0000000122ee515f:   call   0x000000011b433000           ; ImmutableOopMap {[8]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@202 (line 385)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ee5164:   mov    esi,0xfffffff6
  0x0000000122ee5169:   data16 xchg ax,ax
  0x0000000122ee516c:   vzeroupper
  0x0000000122ee516f:   call   0x000000011b433000           ; ImmutableOopMap {}
                                                            ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@268 (line 391)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ee5174:   mov    esi,0xffffffe4
  0x0000000122ee5179:   mov    QWORD PTR [rsp-0x8],rax
  0x0000000122ee517e:   mov    eax,DWORD PTR [rsp+0x3c]
  0x0000000122ee5182:   mov    DWORD PTR [rsp+0x14],eax
  0x0000000122ee5186:   mov    rax,QWORD PTR [rsp-0x8]
  0x0000000122ee518b:   mov    QWORD PTR [rsp+0x18],rdi
  0x0000000122ee5190:   mov    DWORD PTR [rsp+0x20],eax
  0x0000000122ee5194:   mov    DWORD PTR [rsp+0x24],r14d
  0x0000000122ee5199:   mov    DWORD PTR [rsp+0x2c],r8d
  0x0000000122ee519e:   mov    DWORD PTR [rsp+0x30],r10d
  0x0000000122ee51a3:   mov    QWORD PTR [rsp+0x38],rcx
  0x0000000122ee51a8:   mov    DWORD PTR [rsp+0x34],r11d
  0x0000000122ee51ad:   data16 xchg ax,ax
  0x0000000122ee51b0:   vzeroupper
  0x0000000122ee51b3:   call   0x000000011b433000           ; ImmutableOopMap {[8]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@363 (line 409)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ee51b8:   mov    esi,0xffffffe4
  0x0000000122ee51bd:   mov    QWORD PTR [rsp+0x20],rdi
  0x0000000122ee51c2:   mov    DWORD PTR [rsp+0x1c],ecx
  0x0000000122ee51c6:   mov    DWORD PTR [rsp+0x28],r14d
  0x0000000122ee51cb:   mov    DWORD PTR [rsp+0x2c],r11d
  0x0000000122ee51d0:   mov    DWORD PTR [rsp+0x30],r8d
  0x0000000122ee51d5:   mov    DWORD PTR [rsp+0x34],r10d
  0x0000000122ee51da:   mov    DWORD PTR [rsp+0x38],r9d
  0x0000000122ee51df:   mov    DWORD PTR [rsp+0x3c],edx
  0x0000000122ee51e3:   nop
  0x0000000122ee51e4:   vzeroupper
  0x0000000122ee51e7:   call   0x000000011b433000           ; ImmutableOopMap {[8]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@245 (line 388)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ee51ec:   mov    esi,0xffffff76
  0x0000000122ee51f1:   mov    rbp,QWORD PTR [rsp+0x8]
  0x0000000122ee51f6:   mov    DWORD PTR [rsp+0xc],r9d
  0x0000000122ee51fb:   mov    DWORD PTR [rsp+0x10],edi
  0x0000000122ee51ff:   mov    DWORD PTR [rsp+0x14],edx
  0x0000000122ee5203:   mov    DWORD PTR [rsp+0x18],edx
  0x0000000122ee5207:   nop
  0x0000000122ee5208:   vzeroupper
  0x0000000122ee520b:   call   0x000000011b433000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@17 (line 347)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ee5210:   mov    esi,0xfffffff6
  0x0000000122ee5215:   data16 xchg ax,ax
  0x0000000122ee5218:   vzeroupper
  0x0000000122ee521b:   call   0x000000011b433000           ; ImmutableOopMap {}
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::skipWhitespace@9 (line 593)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@341 (line 408)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ee5220:   mov    esi,0xfffffff6
  0x0000000122ee5225:   mov    ebp,r8d
  0x0000000122ee5228:   vzeroupper
  0x0000000122ee522b:   call   0x000000011b433000           ; ImmutableOopMap {}
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@304 (line 398)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ee5230:   mov    esi,0xfffffff6
  0x0000000122ee5235:   mov    ebp,edx
  0x0000000122ee5237:   nop
  0x0000000122ee5238:   vzeroupper
  0x0000000122ee523b:   call   0x000000011b433000           ; ImmutableOopMap {}
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@202 (line 385)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ee5240:   jmp    0x0000000122ee524c
  0x0000000122ee5242:   jmp    0x0000000122ee524c
  0x0000000122ee5244:   jmp    0x0000000122ee524c
  0x0000000122ee5246:   jmp    0x0000000122ee524c
  0x0000000122ee5248:   jmp    0x0000000122ee524c
  0x0000000122ee524a:   jmp    0x0000000122ee524c
  0x0000000122ee524c:   mov    rsi,rax
  0x0000000122ee524f:   jmp    0x0000000122ee4d74
  0x0000000122ee5254:   mov    esi,0xfffffff6
  0x0000000122ee5259:   mov    ebp,r11d
  0x0000000122ee525c:   vzeroupper
  0x0000000122ee525f:   call   0x000000011b433000           ; ImmutableOopMap {}
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteral@363 (line 409)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ee5264:   movabs r10,0x122ee48f8              ;   {internal_word}
  0x0000000122ee526e:   mov    QWORD PTR [r15+0x350],r10
  0x0000000122ee5275:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x0000000122ee527a:   hlt
  0x0000000122ee527b:   hlt
  0x0000000122ee527c:   hlt
  0x0000000122ee527d:   hlt
  0x0000000122ee527e:   hlt
  0x0000000122ee527f:   hlt
[Stub Code]
  0x0000000122ee5280:   movabs rbx,0x13a835ec8              ;   {no_reloc}
  0x0000000122ee528a:   jmp    0x000000011b4de4df           ;   {runtime_call I2C/C2I adapters}
  0x0000000122ee528f:   movabs rbx,0x8003fe518              ;   {static_stub}
  0x0000000122ee5299:   jmp    0x000000011b428ee5           ;   {runtime_call I2C/C2I adapters}
  0x0000000122ee529e:   movabs rbx,0x0                      ;   {static_stub}
  0x0000000122ee52a8:   jmp    0x0000000122ee52a8           ;   {runtime_call}
  0x0000000122ee52ad:   movabs rbx,0x0                      ;   {static_stub}
  0x0000000122ee52b7:   jmp    0x0000000122ee52b7           ;   {runtime_call}
  0x0000000122ee52bc:   movabs rbx,0x0                      ;   {static_stub}
  0x0000000122ee52c6:   jmp    0x0000000122ee52c6           ;   {runtime_call}
  0x0000000122ee52cb:   movabs rbx,0x13a82f198              ;   {static_stub}
  0x0000000122ee52d5:   jmp    0x000000011b40fb5f           ;   {runtime_call I2C/C2I adapters}
  0x0000000122ee52da:   movabs rbx,0x0                      ;   {static_stub}
  0x0000000122ee52e4:   jmp    0x0000000122ee52e4           ;   {runtime_call}
[Exception Handler]
  0x0000000122ee52e9:   jmp    0x000000011b447880           ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000122ee52ee:   call   0x0000000122ee52f3
  0x0000000122ee52f3:   sub    QWORD PTR [rsp],0x5
  0x0000000122ee52f8:   jmp    0x000000011b4333a0           ;   {runtime_call DeoptimizationBlob}
  0x0000000122ee52fd:   hlt
  0x0000000122ee52fe:   hlt
  0x0000000122ee52ff:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     353  533       2       ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace (30 bytes)
 total in heap  [0x000000011ba49c90,0x000000011ba4a070] = 992
 relocation     [0x000000011ba49df0,0x000000011ba49e30] = 64
 main code      [0x000000011ba49e40,0x000000011ba49f80] = 320
 stub code      [0x000000011ba49f80,0x000000011ba49fc0] = 64
 oops           [0x000000011ba49fc0,0x000000011ba49fc8] = 8
 metadata       [0x000000011ba49fc8,0x000000011ba49fd0] = 8
 scopes data    [0x000000011ba49fd0,0x000000011ba4a008] = 56
 scopes pcs     [0x000000011ba4a008,0x000000011ba4a068] = 96
 dependencies   [0x000000011ba4a068,0x000000011ba4a070] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013a80ee10} 'skipWhitespace' '(Ljava/lang/CharSequence;II)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser'
  # parm0:    rsi:rsi   = 'java/lang/CharSequence'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x50]  (sp of caller)
  0x000000011ba49e40:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ba49e47:   push   rbp
  0x000000011ba49e48:   sub    rsp,0x40
  0x000000011ba49e4c:   mov    QWORD PTR [rsp+0x28],rsi
  0x000000011ba49e51:   mov    DWORD PTR [rsp+0x24],ecx
  0x000000011ba49e55:   movabs rdi,0x13a80f458
  0x000000011ba49e5f:   mov    ebx,DWORD PTR [rdi+0x8]
  0x000000011ba49e62:   add    ebx,0x2
  0x000000011ba49e65:   mov    DWORD PTR [rdi+0x8],ebx
  0x000000011ba49e68:   and    ebx,0xffe
  0x000000011ba49e6e:   cmp    ebx,0x0
  0x000000011ba49e71:   je     0x000000011ba49f02
  0x000000011ba49e77:   jmp    0x000000011ba49ee8
  0x000000011ba49e7c:   nop    DWORD PTR [rax+0x0]
  0x000000011ba49e80:   mov    rdi,rdx
  0x000000011ba49e83:   mov    rdx,rdi
  0x000000011ba49e86:   mov    rbx,rsi
  0x000000011ba49e89:   mov    rsi,rbx
  0x000000011ba49e8c:   mov    DWORD PTR [rsp+0x20],edi
  0x000000011ba49e90:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011ba49e95:   movabs rax,0x800008340
  0x000000011ba49e9f:   call   0x0000000122eb0620           ; ImmutableOopMap {[40]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@9 (line 550)
                                                            ;   {virtual_call}
  0x000000011ba49ea4:   cmp    eax,0x20
  0x000000011ba49ea7:   mov    edx,DWORD PTR [rsp+0x20]
  0x000000011ba49eab:   jg     0x000000011ba49eec
  0x000000011ba49eb1:   inc    edx
  0x000000011ba49eb3:   movabs rax,0x13a80f458
  0x000000011ba49ebd:   mov    esi,DWORD PTR [rax+0xc]
  0x000000011ba49ec0:   add    esi,0x2
  0x000000011ba49ec3:   mov    DWORD PTR [rax+0xc],esi
  0x000000011ba49ec6:   and    esi,0x7ffe
  0x000000011ba49ecc:   cmp    esi,0x0
  0x000000011ba49ecf:   je     0x000000011ba49f23
  0x000000011ba49ed5:   mov    r10,QWORD PTR [r15+0x340]    ; ImmutableOopMap {[40]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@25 (line 549)
  0x000000011ba49edc:   test   DWORD PTR [r10],eax          ;   {poll}
  0x000000011ba49edf:   mov    ecx,DWORD PTR [rsp+0x24]
  0x000000011ba49ee3:   mov    rsi,QWORD PTR [rsp+0x28]
  0x000000011ba49ee8:   cmp    edx,ecx
  0x000000011ba49eea:   jl     0x000000011ba49e80
  0x000000011ba49eec:   mov    rax,rdx
  0x000000011ba49eef:   add    rsp,0x40
  0x000000011ba49ef3:   pop    rbp
  0x000000011ba49ef4:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x000000011ba49efb:   ja     0x000000011ba49f41
  0x000000011ba49f01:   ret
  0x000000011ba49f02:   movabs r10,0x13a80ee10              ;   {metadata({method} {0x000000013a80ee10} 'skipWhitespace' '(Ljava/lang/CharSequence;II)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba49f0c:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011ba49f11:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011ba49f19:   call   0x000000011b4db500           ; ImmutableOopMap {rsi=Oop [40]=Oop }
                                                            ;*synchronization entry
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@-1 (line 548)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba49f1e:   jmp    0x000000011ba49e77
  0x000000011ba49f23:   movabs r10,0x13a80ee10              ;   {metadata({method} {0x000000013a80ee10} 'skipWhitespace' '(Ljava/lang/CharSequence;II)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba49f2d:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011ba49f32:   mov    QWORD PTR [rsp],0x19
  0x000000011ba49f3a:   call   0x000000011b4db500           ; ImmutableOopMap {[40]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@25 (line 549)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba49f3f:   jmp    0x000000011ba49ed5
  0x000000011ba49f41:   movabs r10,0x11ba49ef4              ;   {internal_word}
  0x000000011ba49f4b:   mov    QWORD PTR [r15+0x350],r10
  0x000000011ba49f52:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x000000011ba49f57:   nop
  0x000000011ba49f58:   nop
  0x000000011ba49f59:   mov    rax,QWORD PTR [r15+0x3c8]
  0x000000011ba49f60:   mov    QWORD PTR [r15+0x3c8],0x0
  0x000000011ba49f6b:   mov    QWORD PTR [r15+0x3d0],0x0
  0x000000011ba49f76:   add    rsp,0x40
  0x000000011ba49f7a:   pop    rbp
  0x000000011ba49f7b:   jmp    0x000000011b446f00           ;   {runtime_call unwind_exception Runtime1 stub}
[Stub Code]
  0x000000011ba49f80:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x000000011ba49f85:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011ba49f8f:   jmp    0x000000011ba49f8f           ;   {runtime_call}
[Exception Handler]
  0x000000011ba49f94:   call   0x000000011b4d7900           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba49f99:   movabs rdi,0x10db45fc1              ;   {external_word}
  0x000000011ba49fa3:   and    rsp,0xfffffffffffffff0
  0x000000011ba49fa7:   call   0x000000010d7f0290           ;   {runtime_call _ZN14MacroAssembler7debug64EPcxPx}
  0x000000011ba49fac:   hlt
[Deopt Handler Code]
  0x000000011ba49fad:   movabs r10,0x11ba49fad              ;   {section_word}
  0x000000011ba49fb7:   push   r10
  0x000000011ba49fb9:   jmp    0x000000011b4333a0           ;   {runtime_call DeoptimizationBlob}
  0x000000011ba49fbe:   hlt
  0x000000011ba49fbf:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     355  597       4       ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::skipWhitespace (30 bytes)
 total in heap  [0x0000000122ee7490,0x0000000122ee7790] = 768
 relocation     [0x0000000122ee75f0,0x0000000122ee7608] = 24
 main code      [0x0000000122ee7620,0x0000000122ee76c0] = 160
 stub code      [0x0000000122ee76c0,0x0000000122ee76d8] = 24
 oops           [0x0000000122ee76d8,0x0000000122ee76e0] = 8
 metadata       [0x0000000122ee76e0,0x0000000122ee76e8] = 8
 scopes data    [0x0000000122ee76e8,0x0000000122ee7728] = 64
 scopes pcs     [0x0000000122ee7728,0x0000000122ee7778] = 80
 dependencies   [0x0000000122ee7778,0x0000000122ee7780] = 8
 nul chk table  [0x0000000122ee7780,0x0000000122ee7790] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013a82f378} 'skipWhitespace' '([BII)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000122ee7620:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000122ee7627:   push   rbp
  0x0000000122ee7628:   sub    rsp,0x30
  0x0000000122ee762c:   cmp    edx,ecx
  0x0000000122ee762e:   jge    0x0000000122ee7645
  0x0000000122ee7630:   mov    r10d,DWORD PTR [rsi+0xc]     ; implicit exception: dispatches to 0x0000000122ee7688
  0x0000000122ee7634:   cmp    edx,r10d
  0x0000000122ee7637:   jae    0x0000000122ee765a
  0x0000000122ee7639:   movzx  ebp,BYTE PTR [rsi+rdx*1+0x10]
  0x0000000122ee763e:   xchg   ax,ax
  0x0000000122ee7640:   cmp    ebp,0x20
  0x0000000122ee7643:   jle    0x0000000122ee7670
  0x0000000122ee7645:   mov    eax,edx
  0x0000000122ee7647:   add    rsp,0x30
  0x0000000122ee764b:   pop    rbp
  0x0000000122ee764c:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x0000000122ee7653:   ja     0x0000000122ee7694
  0x0000000122ee7659:   ret
  0x0000000122ee765a:   mov    DWORD PTR [rsp],ecx
  0x0000000122ee765d:   mov    QWORD PTR [rsp+0x8],rsi
  0x0000000122ee7662:   mov    DWORD PTR [rsp+0x10],edx
  0x0000000122ee7666:   mov    esi,0xffffffe4
  0x0000000122ee766b:   call   0x000000011b433000           ; ImmutableOopMap {[8]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::skipWhitespace@9 (line 593)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ee7670:   mov    QWORD PTR [rsp],rsi
  0x0000000122ee7674:   mov    DWORD PTR [rsp+0x8],ecx
  0x0000000122ee7678:   mov    DWORD PTR [rsp+0xc],edx
  0x0000000122ee767c:   mov    esi,0xffffff45
  0x0000000122ee7681:   xchg   ax,ax
  0x0000000122ee7683:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::skipWhitespace@16 (line 593)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ee7688:   mov    esi,0xfffffff6
  0x0000000122ee768d:   mov    ebp,edx
  0x0000000122ee768f:   call   0x000000011b433000           ; ImmutableOopMap {}
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::skipWhitespace@9 (line 593)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ee7694:   movabs r10,0x122ee764c              ;   {internal_word}
  0x0000000122ee769e:   mov    QWORD PTR [r15+0x350],r10
  0x0000000122ee76a5:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x0000000122ee76aa:   hlt
  0x0000000122ee76ab:   hlt
  0x0000000122ee76ac:   hlt
  0x0000000122ee76ad:   hlt
  0x0000000122ee76ae:   hlt
  0x0000000122ee76af:   hlt
  0x0000000122ee76b0:   hlt
  0x0000000122ee76b1:   hlt
  0x0000000122ee76b2:   hlt
  0x0000000122ee76b3:   hlt
  0x0000000122ee76b4:   hlt
  0x0000000122ee76b5:   hlt
  0x0000000122ee76b6:   hlt
  0x0000000122ee76b7:   hlt
  0x0000000122ee76b8:   hlt
  0x0000000122ee76b9:   hlt
  0x0000000122ee76ba:   hlt
  0x0000000122ee76bb:   hlt
  0x0000000122ee76bc:   hlt
  0x0000000122ee76bd:   hlt
  0x0000000122ee76be:   hlt
  0x0000000122ee76bf:   hlt
[Exception Handler]
  0x0000000122ee76c0:   jmp    0x000000011b447880           ;   {no_reloc}
[Deopt Handler Code]
  0x0000000122ee76c5:   call   0x0000000122ee76ca
  0x0000000122ee76ca:   sub    QWORD PTR [rsp],0x5
  0x0000000122ee76cf:   jmp    0x000000011b4333a0           ;   {runtime_call DeoptimizationBlob}
  0x0000000122ee76d4:   hlt
  0x0000000122ee76d5:   hlt
  0x0000000122ee76d6:   hlt
  0x0000000122ee76d7:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     357  566       3       ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble (213 bytes)
 total in heap  [0x000000011ba4bf90,0x000000011ba4d0f0] = 4448
 relocation     [0x000000011ba4c0f0,0x000000011ba4c210] = 288
 main code      [0x000000011ba4c220,0x000000011ba4cd20] = 2816
 stub code      [0x000000011ba4cd20,0x000000011ba4cdf0] = 208
 oops           [0x000000011ba4cdf0,0x000000011ba4cdf8] = 8
 metadata       [0x000000011ba4cdf8,0x000000011ba4ce08] = 16
 scopes data    [0x000000011ba4ce08,0x000000011ba4cf60] = 344
 scopes pcs     [0x000000011ba4cf60,0x000000011ba4d0c0] = 352
 dependencies   [0x000000011ba4d0c0,0x000000011ba4d0c8] = 8
 nul chk table  [0x000000011ba4d0c8,0x000000011ba4d0f0] = 40

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013a80e0e8} 'parseDouble' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser'
  # parm0:    rsi:rsi   = 'java/lang/CharSequence'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0xa0]  (sp of caller)
  0x000000011ba4c220:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ba4c227:   push   rbp
  0x000000011ba4c228:   sub    rsp,0x90
  0x000000011ba4c22f:   mov    QWORD PTR [rsp+0x58],rsi
  0x000000011ba4c234:   mov    DWORD PTR [rsp+0x60],edx
  0x000000011ba4c238:   movabs rdi,0x13a838d20              ;   {metadata(method data for {method} {0x000000013a80e0e8} 'parseDouble' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba4c242:   mov    ebx,DWORD PTR [rdi+0xac]
  0x000000011ba4c248:   add    ebx,0x2
  0x000000011ba4c24b:   mov    DWORD PTR [rdi+0xac],ebx
  0x000000011ba4c251:   and    ebx,0x7fe
  0x000000011ba4c257:   cmp    ebx,0x0
  0x000000011ba4c25a:   je     0x000000011ba4cbee
  0x000000011ba4c260:   add    ecx,edx
  0x000000011ba4c262:   mov    DWORD PTR [rsp+0x54],ecx
  0x000000011ba4c266:   movabs rdi,0x13a838d20              ;   {metadata(method data for {method} {0x000000013a80e0e8} 'parseDouble' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba4c270:   add    QWORD PTR [rdi+0xf0],0x1
  0x000000011ba4c278:   movabs rdi,0x13a82fcc0              ;   {metadata(method data for {method} {0x000000013a80ee10} 'skipWhitespace' '(Ljava/lang/CharSequence;II)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba4c282:   mov    ebx,DWORD PTR [rdi+0xac]
  0x000000011ba4c288:   add    ebx,0x2
  0x000000011ba4c28b:   mov    DWORD PTR [rdi+0xac],ebx
  0x000000011ba4c291:   and    ebx,0x1ffffe
  0x000000011ba4c297:   cmp    ebx,0x0
  0x000000011ba4c29a:   je     0x000000011ba4cc0f
  0x000000011ba4c2a0:   mov    rdi,rdx
  0x000000011ba4c2a3:   jmp    0x000000011ba4c3ee
  0x000000011ba4c2a8:   cmp    rax,QWORD PTR [rsi]          ; implicit exception: dispatches to 0x000000011ba4cc30
  0x000000011ba4c2ab:   mov    rbx,rsi
  0x000000011ba4c2ae:   movabs rax,0x13a82fcc0              ;   {metadata(method data for {method} {0x000000013a80ee10} 'skipWhitespace' '(Ljava/lang/CharSequence;II)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba4c2b8:   mov    ebx,DWORD PTR [rbx+0x8]
  0x000000011ba4c2bb:   movabs r10,0x800000000
  0x000000011ba4c2c5:   add    rbx,r10
  0x000000011ba4c2c8:   cmp    rbx,QWORD PTR [rax+0x120]
  0x000000011ba4c2cf:   jne    0x000000011ba4c2de
  0x000000011ba4c2d1:   add    QWORD PTR [rax+0x128],0x1
  0x000000011ba4c2d9:   jmp    0x000000011ba4c344
  0x000000011ba4c2de:   cmp    rbx,QWORD PTR [rax+0x130]
  0x000000011ba4c2e5:   jne    0x000000011ba4c2f4
  0x000000011ba4c2e7:   add    QWORD PTR [rax+0x138],0x1
  0x000000011ba4c2ef:   jmp    0x000000011ba4c344
  0x000000011ba4c2f4:   cmp    QWORD PTR [rax+0x120],0x0
  0x000000011ba4c2ff:   jne    0x000000011ba4c318
  0x000000011ba4c301:   mov    QWORD PTR [rax+0x120],rbx
  0x000000011ba4c308:   mov    QWORD PTR [rax+0x128],0x1
  0x000000011ba4c313:   jmp    0x000000011ba4c344
  0x000000011ba4c318:   cmp    QWORD PTR [rax+0x130],0x0
  0x000000011ba4c323:   jne    0x000000011ba4c33c
  0x000000011ba4c325:   mov    QWORD PTR [rax+0x130],rbx
  0x000000011ba4c32c:   mov    QWORD PTR [rax+0x138],0x1
  0x000000011ba4c337:   jmp    0x000000011ba4c344
  0x000000011ba4c33c:   add    QWORD PTR [rax+0x110],0x1
  0x000000011ba4c344:   mov    rdx,rdi
  0x000000011ba4c347:   mov    rax,rsi
  0x000000011ba4c34a:   mov    rsi,rax
  0x000000011ba4c34d:   mov    DWORD PTR [rsp+0x50],edi
  0x000000011ba4c351:   nop    DWORD PTR [rax+0x0]
  0x000000011ba4c355:   movabs rax,0x800008340
  0x000000011ba4c35f:   call   0x0000000122eb0620           ; ImmutableOopMap {[88]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@9 (line 550)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@7 (line 221)
                                                            ;   {virtual_call}
  0x000000011ba4c364:   cmp    eax,0x20
  0x000000011ba4c367:   movabs rdx,0x13a82fcc0              ;   {metadata(method data for {method} {0x000000013a80ee10} 'skipWhitespace' '(Ljava/lang/CharSequence;II)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba4c371:   movabs rsi,0x158
  0x000000011ba4c37b:   jg     0x000000011ba4c38b
  0x000000011ba4c381:   movabs rsi,0x148
  0x000000011ba4c38b:   mov    rdi,QWORD PTR [rdx+rsi*1]
  0x000000011ba4c38f:   lea    rdi,[rdi+0x1]
  0x000000011ba4c393:   mov    QWORD PTR [rdx+rsi*1],rdi
  0x000000011ba4c397:   mov    edi,DWORD PTR [rsp+0x50]
  0x000000011ba4c39b:   jg     0x000000011ba4c42b
  0x000000011ba4c3a1:   inc    edi
  0x000000011ba4c3a3:   movabs rdx,0x13a82fcc0              ;   {metadata(method data for {method} {0x000000013a80ee10} 'skipWhitespace' '(Ljava/lang/CharSequence;II)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba4c3ad:   mov    esi,DWORD PTR [rdx+0xb0]
  0x000000011ba4c3b3:   add    esi,0x2
  0x000000011ba4c3b6:   mov    DWORD PTR [rdx+0xb0],esi
  0x000000011ba4c3bc:   and    esi,0x3ffe
  0x000000011ba4c3c2:   cmp    esi,0x0
  0x000000011ba4c3c5:   je     0x000000011ba4cc35
  0x000000011ba4c3cb:   mov    r10,QWORD PTR [r15+0x340]    ; ImmutableOopMap {[88]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@25 (line 549)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@7 (line 221)
  0x000000011ba4c3d2:   test   DWORD PTR [r10],eax          ;   {poll}
  0x000000011ba4c3d5:   movabs rdx,0x13a82fcc0              ;   {metadata(method data for {method} {0x000000013a80ee10} 'skipWhitespace' '(Ljava/lang/CharSequence;II)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba4c3df:   inc    DWORD PTR [rdx+0x180]
  0x000000011ba4c3e5:   mov    ecx,DWORD PTR [rsp+0x54]
  0x000000011ba4c3e9:   mov    rsi,QWORD PTR [rsp+0x58]
  0x000000011ba4c3ee:   cmp    edi,ecx
  0x000000011ba4c3f0:   movabs rbx,0x13a82fcc0              ;   {metadata(method data for {method} {0x000000013a80ee10} 'skipWhitespace' '(Ljava/lang/CharSequence;II)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba4c3fa:   movabs rax,0xf0
  0x000000011ba4c404:   jge    0x000000011ba4c414
  0x000000011ba4c40a:   movabs rax,0x100
  0x000000011ba4c414:   mov    r8,QWORD PTR [rbx+rax*1]
  0x000000011ba4c418:   lea    r8,[r8+0x1]
  0x000000011ba4c41c:   mov    QWORD PTR [rbx+rax*1],r8
  0x000000011ba4c420:   jge    0x000000011ba4c43b
  0x000000011ba4c426:   jmp    0x000000011ba4c2a8
  0x000000011ba4c42b:   movabs rdx,0x13a82fcc0              ;   {metadata(method data for {method} {0x000000013a80ee10} 'skipWhitespace' '(Ljava/lang/CharSequence;II)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba4c435:   inc    DWORD PTR [rdx+0x168]
  0x000000011ba4c43b:   cmp    edi,DWORD PTR [rsp+0x54]
  0x000000011ba4c43f:   movabs rdx,0x13a838d20              ;   {metadata(method data for {method} {0x000000013a80e0e8} 'parseDouble' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba4c449:   movabs rsi,0x110
  0x000000011ba4c453:   je     0x000000011ba4c463
  0x000000011ba4c459:   movabs rsi,0x100
  0x000000011ba4c463:   mov    rbx,QWORD PTR [rdx+rsi*1]
  0x000000011ba4c467:   lea    rbx,[rbx+0x1]
  0x000000011ba4c46b:   mov    QWORD PTR [rdx+rsi*1],rbx
  0x000000011ba4c46f:   je     0x000000011ba4cb4c
  0x000000011ba4c475:   mov    rsi,QWORD PTR [rsp+0x58]
  0x000000011ba4c47a:   cmp    rax,QWORD PTR [rsi]          ; implicit exception: dispatches to 0x000000011ba4cc56
  0x000000011ba4c47d:   mov    rdx,rsi
  0x000000011ba4c480:   movabs rbx,0x13a838d20              ;   {metadata(method data for {method} {0x000000013a80e0e8} 'parseDouble' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba4c48a:   mov    edx,DWORD PTR [rdx+0x8]
  0x000000011ba4c48d:   movabs r10,0x800000000
  0x000000011ba4c497:   add    rdx,r10
  0x000000011ba4c49a:   cmp    rdx,QWORD PTR [rbx+0x140]
  0x000000011ba4c4a1:   jne    0x000000011ba4c4b0
  0x000000011ba4c4a3:   add    QWORD PTR [rbx+0x148],0x1
  0x000000011ba4c4ab:   jmp    0x000000011ba4c516
  0x000000011ba4c4b0:   cmp    rdx,QWORD PTR [rbx+0x150]
  0x000000011ba4c4b7:   jne    0x000000011ba4c4c6
  0x000000011ba4c4b9:   add    QWORD PTR [rbx+0x158],0x1
  0x000000011ba4c4c1:   jmp    0x000000011ba4c516
  0x000000011ba4c4c6:   cmp    QWORD PTR [rbx+0x140],0x0
  0x000000011ba4c4d1:   jne    0x000000011ba4c4ea
  0x000000011ba4c4d3:   mov    QWORD PTR [rbx+0x140],rdx
  0x000000011ba4c4da:   mov    QWORD PTR [rbx+0x148],0x1
  0x000000011ba4c4e5:   jmp    0x000000011ba4c516
  0x000000011ba4c4ea:   cmp    QWORD PTR [rbx+0x150],0x0
  0x000000011ba4c4f5:   jne    0x000000011ba4c50e
  0x000000011ba4c4f7:   mov    QWORD PTR [rbx+0x150],rdx
  0x000000011ba4c4fe:   mov    QWORD PTR [rbx+0x158],0x1
  0x000000011ba4c509:   jmp    0x000000011ba4c516
  0x000000011ba4c50e:   add    QWORD PTR [rbx+0x130],0x1
  0x000000011ba4c516:   mov    rdx,rdi
  0x000000011ba4c519:   mov    rbx,rsi
  0x000000011ba4c51c:   mov    rsi,rbx
  0x000000011ba4c51f:   mov    DWORD PTR [rsp+0x50],edi
  0x000000011ba4c523:   xchg   ax,ax
  0x000000011ba4c525:   movabs rax,0x800008340
  0x000000011ba4c52f:   call   0x0000000122eb0620           ; ImmutableOopMap {[88]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@31 (line 225)
                                                            ;   {virtual_call}
  0x000000011ba4c534:   cmp    eax,0x2d
  0x000000011ba4c537:   movabs rdx,0x13a838d20              ;   {metadata(method data for {method} {0x000000013a80e0e8} 'parseDouble' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba4c541:   movabs rsi,0x168
  0x000000011ba4c54b:   jne    0x000000011ba4c55b
  0x000000011ba4c551:   movabs rsi,0x178
  0x000000011ba4c55b:   mov    rdi,QWORD PTR [rdx+rsi*1]
  0x000000011ba4c55f:   lea    rdi,[rdi+0x1]
  0x000000011ba4c563:   mov    QWORD PTR [rdx+rsi*1],rdi
  0x000000011ba4c567:   jne    0x000000011ba4c587
  0x000000011ba4c56d:   movabs rdx,0x13a838d20              ;   {metadata(method data for {method} {0x000000013a80e0e8} 'parseDouble' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba4c577:   inc    DWORD PTR [rdx+0x188]
  0x000000011ba4c57d:   mov    edi,0x1
  0x000000011ba4c582:   jmp    0x000000011ba4c58c
  0x000000011ba4c587:   mov    edi,0x0
  0x000000011ba4c58c:   cmp    edi,0x0
  0x000000011ba4c58f:   movabs rdx,0x13a838d20              ;   {metadata(method data for {method} {0x000000013a80e0e8} 'parseDouble' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba4c599:   movabs rsi,0x1a0
  0x000000011ba4c5a3:   jne    0x000000011ba4c5b3
  0x000000011ba4c5a9:   movabs rsi,0x1b0
  0x000000011ba4c5b3:   mov    rbx,QWORD PTR [rdx+rsi*1]
  0x000000011ba4c5b7:   lea    rbx,[rbx+0x1]
  0x000000011ba4c5bb:   mov    QWORD PTR [rdx+rsi*1],rbx
  0x000000011ba4c5bf:   jne    0x000000011ba4c60b
  0x000000011ba4c5c5:   cmp    eax,0x2b
  0x000000011ba4c5c8:   movabs rdx,0x13a838d20              ;   {metadata(method data for {method} {0x000000013a80e0e8} 'parseDouble' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba4c5d2:   movabs rsi,0x1d0
  0x000000011ba4c5dc:   je     0x000000011ba4c5ec
  0x000000011ba4c5e2:   movabs rsi,0x1c0
  0x000000011ba4c5ec:   mov    rbx,QWORD PTR [rdx+rsi*1]
  0x000000011ba4c5f0:   lea    rbx,[rbx+0x1]
  0x000000011ba4c5f4:   mov    QWORD PTR [rdx+rsi*1],rbx
  0x000000011ba4c5f8:   je     0x000000011ba4c60b
  0x000000011ba4c5fe:   mov    ebx,DWORD PTR [rsp+0x50]
  0x000000011ba4c602:   mov    DWORD PTR [rsp+0x68],edi
  0x000000011ba4c606:   jmp    0x000000011ba4c76b
  0x000000011ba4c60b:   mov    edx,DWORD PTR [rsp+0x50]
  0x000000011ba4c60f:   mov    rbx,rdx
  0x000000011ba4c612:   inc    ebx
  0x000000011ba4c614:   cmp    ebx,DWORD PTR [rsp+0x54]
  0x000000011ba4c618:   movabs rdx,0x13a838d20              ;   {metadata(method data for {method} {0x000000013a80e0e8} 'parseDouble' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba4c622:   movabs rsi,0x1e0
  0x000000011ba4c62c:   jge    0x000000011ba4c63c
  0x000000011ba4c632:   movabs rsi,0x1f0
  0x000000011ba4c63c:   mov    rax,QWORD PTR [rdx+rsi*1]
  0x000000011ba4c640:   lea    rax,[rax+0x1]
  0x000000011ba4c644:   mov    QWORD PTR [rdx+rsi*1],rax
  0x000000011ba4c648:   jge    0x000000011ba4c721
  0x000000011ba4c64e:   mov    DWORD PTR [rsp+0x68],edi
  0x000000011ba4c652:   mov    rsi,QWORD PTR [rsp+0x58]
  0x000000011ba4c657:   movabs rdx,0x13a838d20              ;   {metadata(method data for {method} {0x000000013a80e0e8} 'parseDouble' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba4c661:   mov    esi,DWORD PTR [rsi+0x8]
  0x000000011ba4c664:   movabs r10,0x800000000
  0x000000011ba4c66e:   add    rsi,r10
  0x000000011ba4c671:   cmp    rsi,QWORD PTR [rdx+0x210]
  0x000000011ba4c678:   jne    0x000000011ba4c687
  0x000000011ba4c67a:   add    QWORD PTR [rdx+0x218],0x1
  0x000000011ba4c682:   jmp    0x000000011ba4c6ed
  0x000000011ba4c687:   cmp    rsi,QWORD PTR [rdx+0x220]
  0x000000011ba4c68e:   jne    0x000000011ba4c69d
  0x000000011ba4c690:   add    QWORD PTR [rdx+0x228],0x1
  0x000000011ba4c698:   jmp    0x000000011ba4c6ed
  0x000000011ba4c69d:   cmp    QWORD PTR [rdx+0x210],0x0
  0x000000011ba4c6a8:   jne    0x000000011ba4c6c1
  0x000000011ba4c6aa:   mov    QWORD PTR [rdx+0x210],rsi
  0x000000011ba4c6b1:   mov    QWORD PTR [rdx+0x218],0x1
  0x000000011ba4c6bc:   jmp    0x000000011ba4c6ed
  0x000000011ba4c6c1:   cmp    QWORD PTR [rdx+0x220],0x0
  0x000000011ba4c6cc:   jne    0x000000011ba4c6e5
  0x000000011ba4c6ce:   mov    QWORD PTR [rdx+0x220],rsi
  0x000000011ba4c6d5:   mov    QWORD PTR [rdx+0x228],0x1
  0x000000011ba4c6e0:   jmp    0x000000011ba4c6ed
  0x000000011ba4c6e5:   add    QWORD PTR [rdx+0x200],0x1
  0x000000011ba4c6ed:   mov    rdx,rbx
  0x000000011ba4c6f0:   mov    rsi,QWORD PTR [rsp+0x58]
  0x000000011ba4c6f5:   mov    DWORD PTR [rsp+0x64],ebx
  0x000000011ba4c6f9:   nop    DWORD PTR [rax+0x0]
  0x000000011ba4c6fd:   movabs rax,0xffffffffffffffff
  0x000000011ba4c707:   call   0x000000011b42dd80           ; ImmutableOopMap {[88]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@76 (line 231)
                                                            ;   {virtual_call}
  0x000000011ba4c70c:   movabs rdx,0x13a838d20              ;   {metadata(method data for {method} {0x000000013a80e0e8} 'parseDouble' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba4c716:   inc    DWORD PTR [rdx+0x238]
  0x000000011ba4c71c:   jmp    0x000000011ba4c72e
  0x000000011ba4c721:   mov    DWORD PTR [rsp+0x64],ebx
  0x000000011ba4c725:   mov    DWORD PTR [rsp+0x68],edi
  0x000000011ba4c729:   mov    eax,0x0
  0x000000011ba4c72e:   cmp    eax,0x0
  0x000000011ba4c731:   movabs rdx,0x13a838d20              ;   {metadata(method data for {method} {0x000000013a80e0e8} 'parseDouble' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba4c73b:   movabs rsi,0x260
  0x000000011ba4c745:   je     0x000000011ba4c755
  0x000000011ba4c74b:   movabs rsi,0x250
  0x000000011ba4c755:   mov    rdi,QWORD PTR [rdx+rsi*1]
  0x000000011ba4c759:   lea    rdi,[rdi+0x1]
  0x000000011ba4c75d:   mov    QWORD PTR [rdx+rsi*1],rdi
  0x000000011ba4c761:   je     0x000000011ba4cb1a
  0x000000011ba4c767:   mov    ebx,DWORD PTR [rsp+0x64]
  0x000000011ba4c76b:   cmp    eax,0x4e
  0x000000011ba4c76e:   movabs rdx,0x13a838d20              ;   {metadata(method data for {method} {0x000000013a80e0e8} 'parseDouble' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba4c778:   movabs rsi,0x290
  0x000000011ba4c782:   je     0x000000011ba4c792
  0x000000011ba4c788:   movabs rsi,0x280
  0x000000011ba4c792:   mov    rdi,QWORD PTR [rdx+rsi*1]
  0x000000011ba4c796:   lea    rdi,[rdi+0x1]
  0x000000011ba4c79a:   mov    QWORD PTR [rdx+rsi*1],rdi
  0x000000011ba4c79e:   je     0x000000011ba4cada
  0x000000011ba4c7a4:   cmp    eax,0x49
  0x000000011ba4c7a7:   movabs rdx,0x13a838d20              ;   {metadata(method data for {method} {0x000000013a80e0e8} 'parseDouble' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba4c7b1:   movabs rsi,0x2c0
  0x000000011ba4c7bb:   je     0x000000011ba4c7cb
  0x000000011ba4c7c1:   movabs rsi,0x2b0
  0x000000011ba4c7cb:   mov    rdi,QWORD PTR [rdx+rsi*1]
  0x000000011ba4c7cf:   lea    rdi,[rdi+0x1]
  0x000000011ba4c7d3:   mov    QWORD PTR [rdx+rsi*1],rdi
  0x000000011ba4c7d7:   je     0x000000011ba4ca9a
  0x000000011ba4c7dd:   cmp    eax,0x30
  0x000000011ba4c7e0:   movabs rdx,0x13a838d20              ;   {metadata(method data for {method} {0x000000013a80e0e8} 'parseDouble' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba4c7ea:   movabs rsi,0x2e0
  0x000000011ba4c7f4:   jne    0x000000011ba4c804
  0x000000011ba4c7fa:   movabs rsi,0x2f0
  0x000000011ba4c804:   mov    rdi,QWORD PTR [rdx+rsi*1]
  0x000000011ba4c808:   lea    rdi,[rdi+0x1]
  0x000000011ba4c80c:   mov    QWORD PTR [rdx+rsi*1],rdi
  0x000000011ba4c810:   jne    0x000000011ba4c830
  0x000000011ba4c816:   movabs rdx,0x13a838d20              ;   {metadata(method data for {method} {0x000000013a80e0e8} 'parseDouble' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba4c820:   inc    DWORD PTR [rdx+0x300]
  0x000000011ba4c826:   mov    edi,0x1
  0x000000011ba4c82b:   jmp    0x000000011ba4c835
  0x000000011ba4c830:   mov    edi,0x0
  0x000000011ba4c835:   cmp    edi,0x0
  0x000000011ba4c838:   movabs rdx,0x13a838d20              ;   {metadata(method data for {method} {0x000000013a80e0e8} 'parseDouble' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba4c842:   movabs rsi,0x318
  0x000000011ba4c84c:   je     0x000000011ba4c85c
  0x000000011ba4c852:   movabs rsi,0x328
  0x000000011ba4c85c:   mov    rax,QWORD PTR [rdx+rsi*1]
  0x000000011ba4c860:   lea    rax,[rax+0x1]
  0x000000011ba4c864:   mov    QWORD PTR [rdx+rsi*1],rax
  0x000000011ba4c868:   je     0x000000011ba4ca00
  0x000000011ba4c86e:   inc    ebx
  0x000000011ba4c870:   cmp    ebx,DWORD PTR [rsp+0x54]
  0x000000011ba4c874:   movabs rdx,0x13a838d20              ;   {metadata(method data for {method} {0x000000013a80e0e8} 'parseDouble' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba4c87e:   movabs rsi,0x338
  0x000000011ba4c888:   jge    0x000000011ba4c898
  0x000000011ba4c88e:   movabs rsi,0x348
  0x000000011ba4c898:   mov    rax,QWORD PTR [rdx+rsi*1]
  0x000000011ba4c89c:   lea    rax,[rax+0x1]
  0x000000011ba4c8a0:   mov    QWORD PTR [rdx+rsi*1],rax
  0x000000011ba4c8a4:   jge    0x000000011ba4c979
  0x000000011ba4c8aa:   mov    DWORD PTR [rsp+0x70],edi
  0x000000011ba4c8ae:   mov    rsi,QWORD PTR [rsp+0x58]
  0x000000011ba4c8b3:   movabs rdx,0x13a838d20              ;   {metadata(method data for {method} {0x000000013a80e0e8} 'parseDouble' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba4c8bd:   mov    esi,DWORD PTR [rsi+0x8]
  0x000000011ba4c8c0:   movabs r10,0x800000000
  0x000000011ba4c8ca:   add    rsi,r10
  0x000000011ba4c8cd:   cmp    rsi,QWORD PTR [rdx+0x368]
  0x000000011ba4c8d4:   jne    0x000000011ba4c8e3
  0x000000011ba4c8d6:   add    QWORD PTR [rdx+0x370],0x1
  0x000000011ba4c8de:   jmp    0x000000011ba4c949
  0x000000011ba4c8e3:   cmp    rsi,QWORD PTR [rdx+0x378]
  0x000000011ba4c8ea:   jne    0x000000011ba4c8f9
  0x000000011ba4c8ec:   add    QWORD PTR [rdx+0x380],0x1
  0x000000011ba4c8f4:   jmp    0x000000011ba4c949
  0x000000011ba4c8f9:   cmp    QWORD PTR [rdx+0x368],0x0
  0x000000011ba4c904:   jne    0x000000011ba4c91d
  0x000000011ba4c906:   mov    QWORD PTR [rdx+0x368],rsi
  0x000000011ba4c90d:   mov    QWORD PTR [rdx+0x370],0x1
  0x000000011ba4c918:   jmp    0x000000011ba4c949
  0x000000011ba4c91d:   cmp    QWORD PTR [rdx+0x378],0x0
  0x000000011ba4c928:   jne    0x000000011ba4c941
  0x000000011ba4c92a:   mov    QWORD PTR [rdx+0x378],rsi
  0x000000011ba4c931:   mov    QWORD PTR [rdx+0x380],0x1
  0x000000011ba4c93c:   jmp    0x000000011ba4c949
  0x000000011ba4c941:   add    QWORD PTR [rdx+0x358],0x1
  0x000000011ba4c949:   mov    rdx,rbx
  0x000000011ba4c94c:   mov    rsi,QWORD PTR [rsp+0x58]
  0x000000011ba4c951:   mov    DWORD PTR [rsp+0x6c],ebx
  0x000000011ba4c955:   movabs rax,0x800008340
  0x000000011ba4c95f:   call   0x0000000122eb0620           ; ImmutableOopMap {[88]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@162 (line 249)
                                                            ;   {virtual_call}
  0x000000011ba4c964:   movabs rsi,0x13a838d20              ;   {metadata(method data for {method} {0x000000013a80e0e8} 'parseDouble' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba4c96e:   inc    DWORD PTR [rsi+0x390]
  0x000000011ba4c974:   jmp    0x000000011ba4c986
  0x000000011ba4c979:   mov    DWORD PTR [rsp+0x6c],ebx
  0x000000011ba4c97d:   mov    DWORD PTR [rsp+0x70],edi
  0x000000011ba4c981:   mov    eax,0x0
  0x000000011ba4c986:   cmp    eax,0x78
  0x000000011ba4c989:   movabs rsi,0x13a838d20              ;   {metadata(method data for {method} {0x000000013a80e0e8} 'parseDouble' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba4c993:   movabs rdx,0x3a8
  0x000000011ba4c99d:   je     0x000000011ba4c9ad
  0x000000011ba4c9a3:   movabs rdx,0x3b8
  0x000000011ba4c9ad:   mov    rcx,QWORD PTR [rsi+rdx*1]
  0x000000011ba4c9b1:   lea    rcx,[rcx+0x1]
  0x000000011ba4c9b5:   mov    QWORD PTR [rsi+rdx*1],rcx
  0x000000011ba4c9b9:   je     0x000000011ba4ca4a
  0x000000011ba4c9bf:   cmp    eax,0x58
  0x000000011ba4c9c2:   movabs rsi,0x13a838d20              ;   {metadata(method data for {method} {0x000000013a80e0e8} 'parseDouble' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba4c9cc:   movabs rdx,0x3d8
  0x000000011ba4c9d6:   je     0x000000011ba4c9e6
  0x000000011ba4c9dc:   movabs rdx,0x3c8
  0x000000011ba4c9e6:   mov    rcx,QWORD PTR [rsi+rdx*1]
  0x000000011ba4c9ea:   lea    rcx,[rcx+0x1]
  0x000000011ba4c9ee:   mov    QWORD PTR [rsi+rdx*1],rcx
  0x000000011ba4c9f2:   je     0x000000011ba4ca4a
  0x000000011ba4c9f8:   mov    ebx,DWORD PTR [rsp+0x6c]
  0x000000011ba4c9fc:   mov    edi,DWORD PTR [rsp+0x70]
  0x000000011ba4ca00:   movabs rsi,0x13a838d20              ;   {metadata(method data for {method} {0x000000013a80e0e8} 'parseDouble' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba4ca0a:   add    QWORD PTR [rsi+0x3f8],0x1
  0x000000011ba4ca12:   mov    rsi,QWORD PTR [rsp+0x58]
  0x000000011ba4ca17:   mov    rdx,rbx
  0x000000011ba4ca1a:   mov    ecx,DWORD PTR [rsp+0x60]
  0x000000011ba4ca1e:   mov    r8d,DWORD PTR [rsp+0x54]
  0x000000011ba4ca23:   mov    r9d,DWORD PTR [rsp+0x68]
  0x000000011ba4ca28:   nop    DWORD PTR [rax+0x0]
  0x000000011ba4ca2f:   call   0x0000000122ee0e20           ; ImmutableOopMap {}
                                                            ;*invokestatic parseRestOfDecimalFloatLiteral {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@209 (line 255)
                                                            ;   {static_call}
  0x000000011ba4ca34:   add    rsp,0x90
  0x000000011ba4ca3b:   pop    rbp
  0x000000011ba4ca3c:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x000000011ba4ca43:   ja     0x000000011ba4cc5b
  0x000000011ba4ca49:   ret
  0x000000011ba4ca4a:   mov    ebx,DWORD PTR [rsp+0x6c]
  0x000000011ba4ca4e:   movabs rsi,0x13a838d20              ;   {metadata(method data for {method} {0x000000013a80e0e8} 'parseDouble' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba4ca58:   add    QWORD PTR [rsi+0x3e8],0x1
  0x000000011ba4ca60:   inc    ebx
  0x000000011ba4ca62:   mov    rsi,QWORD PTR [rsp+0x58]
  0x000000011ba4ca67:   mov    rdx,rbx
  0x000000011ba4ca6a:   mov    ecx,DWORD PTR [rsp+0x60]
  0x000000011ba4ca6e:   mov    r8d,DWORD PTR [rsp+0x54]
  0x000000011ba4ca73:   mov    r9d,DWORD PTR [rsp+0x68]
  0x000000011ba4ca78:   nop    DWORD PTR [rax+0x0]
  0x000000011ba4ca7f:   call   0x000000011b42e080           ; ImmutableOopMap {}
                                                            ;*invokestatic parseRestOfHexFloatingPointLiteral {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@196 (line 251)
                                                            ;   {static_call}
  0x000000011ba4ca84:   add    rsp,0x90
  0x000000011ba4ca8b:   pop    rbp
  0x000000011ba4ca8c:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x000000011ba4ca93:   ja     0x000000011ba4cc71
  0x000000011ba4ca99:   ret
  0x000000011ba4ca9a:   mov    edi,DWORD PTR [rsp+0x68]
  0x000000011ba4ca9e:   movabs rsi,0x13a838d20              ;   {metadata(method data for {method} {0x000000013a80e0e8} 'parseDouble' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba4caa8:   add    QWORD PTR [rsi+0x2d0],0x1
  0x000000011ba4cab0:   mov    rsi,QWORD PTR [rsp+0x58]
  0x000000011ba4cab5:   mov    rdx,rbx
  0x000000011ba4cab8:   mov    ecx,DWORD PTR [rsp+0x54]
  0x000000011ba4cabc:   mov    r8,rdi
  0x000000011ba4cabf:   call   0x000000011b42e080           ; ImmutableOopMap {}
                                                            ;*invokestatic parseInfinity {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@127 (line 242)
                                                            ;   {static_call}
  0x000000011ba4cac4:   add    rsp,0x90
  0x000000011ba4cacb:   pop    rbp
  0x000000011ba4cacc:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x000000011ba4cad3:   ja     0x000000011ba4cc87
  0x000000011ba4cad9:   ret
  0x000000011ba4cada:   movabs rsi,0x13a838d20              ;   {metadata(method data for {method} {0x000000013a80e0e8} 'parseDouble' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba4cae4:   add    QWORD PTR [rsi+0x2a0],0x1
  0x000000011ba4caec:   mov    rsi,QWORD PTR [rsp+0x58]
  0x000000011ba4caf1:   mov    rdx,rbx
  0x000000011ba4caf4:   mov    ecx,DWORD PTR [rsp+0x54]
  0x000000011ba4caf8:   nop    DWORD PTR [rax+0x0]
  0x000000011ba4caff:   call   0x000000011b42e080           ; ImmutableOopMap {}
                                                            ;*invokestatic parseNaN {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@110 (line 240)
                                                            ;   {static_call}
  0x000000011ba4cb04:   add    rsp,0x90
  0x000000011ba4cb0b:   pop    rbp
  0x000000011ba4cb0c:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x000000011ba4cb13:   ja     0x000000011ba4cc9d
  0x000000011ba4cb19:   ret
  0x000000011ba4cb1a:   mov    ecx,DWORD PTR [rsp+0x54]
  0x000000011ba4cb1e:   mov    edx,DWORD PTR [rsp+0x60]
  0x000000011ba4cb22:   mov    rsi,QWORD PTR [rsp+0x58]
  0x000000011ba4cb27:   movabs rdi,0x13a838d20              ;   {metadata(method data for {method} {0x000000013a80e0e8} 'parseDouble' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba4cb31:   add    QWORD PTR [rdi+0x270],0x1
  0x000000011ba4cb39:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011ba4cb3f:   call   0x000000011b42e080           ; ImmutableOopMap {}
                                                            ;*invokestatic newNumberFormatException {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@95 (line 233)
                                                            ;   {static_call}
  0x000000011ba4cb44:   cmp    rax,QWORD PTR [rax]          ; implicit exception: dispatches to 0x000000011ba4ccb3
  0x000000011ba4cb47:   jmp    0x000000011ba4cd02
  0x000000011ba4cb4c:   nop    DWORD PTR [rax+0x0]
  0x000000011ba4cb50:   jmp    0x000000011ba4ccc7           ;   {no_reloc}
  0x000000011ba4cb55:   add    BYTE PTR [rax],al
  0x000000011ba4cb57:   add    BYTE PTR [rax],al
  0x000000011ba4cb59:   add    BYTE PTR [rax+0x123ba],al
  0x000000011ba4cb5f:   add    BYTE PTR [rdi+rcx*1],al
  0x000000011ba4cb62:   test   DWORD PTR [rdi+0x1],ebp
  0x000000011ba4cb65:   add    BYTE PTR [rax],al
  0x000000011ba4cb67:   mov    rax,QWORD PTR [r15+0xf0]
  0x000000011ba4cb6e:   lea    rdi,[rax+0x28]
  0x000000011ba4cb72:   cmp    rdi,QWORD PTR [r15+0x100]
  0x000000011ba4cb79:   ja     0x000000011ba4ccd6
  0x000000011ba4cb7f:   mov    QWORD PTR [r15+0xf0],rdi
  0x000000011ba4cb86:   mov    QWORD PTR [rax],0x1
  0x000000011ba4cb8d:   mov    rcx,rdx
  0x000000011ba4cb90:   movabs r10,0x800000000
  0x000000011ba4cb9a:   sub    rcx,r10
  0x000000011ba4cb9d:   mov    DWORD PTR [rax+0x8],ecx
  0x000000011ba4cba0:   xor    rcx,rcx
  0x000000011ba4cba3:   mov    DWORD PTR [rax+0xc],ecx
  0x000000011ba4cba6:   xor    rcx,rcx
  0x000000011ba4cba9:   mov    QWORD PTR [rax+0x10],rcx
  0x000000011ba4cbad:   mov    QWORD PTR [rax+0x18],rcx
  0x000000011ba4cbb1:   mov    QWORD PTR [rax+0x20],rcx
  0x000000011ba4cbb5:   mov    rdx,rax
  0x000000011ba4cbb8:   movabs rsi,0x13a838d20              ;   {metadata(method data for {method} {0x000000013a80e0e8} 'parseDouble' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba4cbc2:   add    QWORD PTR [rsi+0x120],0x1
  0x000000011ba4cbca:   movabs rdx,0x7ffc50390              ;   {oop("empty String"{0x00000007ffc50390})}
  0x000000011ba4cbd4:   mov    rsi,rax
  0x000000011ba4cbd7:   mov    QWORD PTR [rsp+0x78],rax
  0x000000011ba4cbdc:   data16 xchg ax,ax
  0x000000011ba4cbdf:   call   0x000000011b42da80           ; ImmutableOopMap {[120]=Oop }
                                                            ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@24 (line 223)
                                                            ;   {optimized virtual_call}
  0x000000011ba4cbe4:   mov    rax,QWORD PTR [rsp+0x78]
  0x000000011ba4cbe9:   jmp    0x000000011ba4cd02
  0x000000011ba4cbee:   movabs r10,0x13a80e0e8              ;   {metadata({method} {0x000000013a80e0e8} 'parseDouble' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba4cbf8:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011ba4cbfd:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011ba4cc05:   call   0x000000011b4db500           ; ImmutableOopMap {rsi=Oop [88]=Oop }
                                                            ;*synchronization entry
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@-1 (line 217)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba4cc0a:   jmp    0x000000011ba4c260
  0x000000011ba4cc0f:   movabs r10,0x13a80ee10              ;   {metadata({method} {0x000000013a80ee10} 'skipWhitespace' '(Ljava/lang/CharSequence;II)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba4cc19:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011ba4cc1e:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011ba4cc26:   call   0x000000011b4db500           ; ImmutableOopMap {rsi=Oop [88]=Oop }
                                                            ;*synchronization entry
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@-1 (line 548)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@7 (line 221)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba4cc2b:   jmp    0x000000011ba4c2a0
  0x000000011ba4cc30:   call   0x000000011b4d5b20           ; ImmutableOopMap {rsi=Oop [88]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@9 (line 550)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@7 (line 221)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba4cc35:   movabs r10,0x13a80ee10              ;   {metadata({method} {0x000000013a80ee10} 'skipWhitespace' '(Ljava/lang/CharSequence;II)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba4cc3f:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011ba4cc44:   mov    QWORD PTR [rsp],0x19
  0x000000011ba4cc4c:   call   0x000000011b4db500           ; ImmutableOopMap {[88]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@25 (line 549)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@7 (line 221)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba4cc51:   jmp    0x000000011ba4c3cb
  0x000000011ba4cc56:   call   0x000000011b4d5b20           ; ImmutableOopMap {rsi=Oop [88]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@31 (line 225)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba4cc5b:   movabs r10,0x11ba4ca3c              ;   {internal_word}
  0x000000011ba4cc65:   mov    QWORD PTR [r15+0x350],r10
  0x000000011ba4cc6c:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x000000011ba4cc71:   movabs r10,0x11ba4ca8c              ;   {internal_word}
  0x000000011ba4cc7b:   mov    QWORD PTR [r15+0x350],r10
  0x000000011ba4cc82:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x000000011ba4cc87:   movabs r10,0x11ba4cacc              ;   {internal_word}
  0x000000011ba4cc91:   mov    QWORD PTR [r15+0x350],r10
  0x000000011ba4cc98:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x000000011ba4cc9d:   movabs r10,0x11ba4cb0c              ;   {internal_word}
  0x000000011ba4cca7:   mov    QWORD PTR [r15+0x350],r10
  0x000000011ba4ccae:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x000000011ba4ccb3:   call   0x000000011b4d5b20           ; ImmutableOopMap {rax=Oop }
                                                            ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@98 (line 233)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba4ccb8:   movabs rdx,0x0                      ;   {metadata(NULL)}
  0x000000011ba4ccc2:   mov    eax,0xa050f00
  0x000000011ba4ccc7:   call   0x000000011b4d9b80           ; ImmutableOopMap {}
                                                            ;*new {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@18 (line 223)
                                                            ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000000011ba4cccc:   jmp    0x000000011ba4cb50
  0x000000011ba4ccd1:   call   0x000000011b4d5b20           ; ImmutableOopMap {}
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@18 (line 223)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba4ccd6:   mov    rdx,rdx
  0x000000011ba4ccd9:   call   0x000000011b4d6700           ; ImmutableOopMap {}
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@18 (line 223)
                                                            ;   {runtime_call fast_new_instance_init_check Runtime1 stub}
  0x000000011ba4ccde:   jmp    0x000000011ba4cbb5
  0x000000011ba4cce3:   nop
  0x000000011ba4cce4:   nop
  0x000000011ba4cce5:   mov    rax,QWORD PTR [r15+0x3c8]
  0x000000011ba4ccec:   mov    QWORD PTR [r15+0x3c8],0x0
  0x000000011ba4ccf7:   mov    QWORD PTR [r15+0x3d0],0x0
  0x000000011ba4cd02:   add    rsp,0x90
  0x000000011ba4cd09:   pop    rbp
  0x000000011ba4cd0a:   jmp    0x000000011b446f00           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba4cd0f:   hlt
  0x000000011ba4cd10:   hlt
  0x000000011ba4cd11:   hlt
  0x000000011ba4cd12:   hlt
  0x000000011ba4cd13:   hlt
  0x000000011ba4cd14:   hlt
  0x000000011ba4cd15:   hlt
  0x000000011ba4cd16:   hlt
  0x000000011ba4cd17:   hlt
  0x000000011ba4cd18:   hlt
  0x000000011ba4cd19:   hlt
  0x000000011ba4cd1a:   hlt
  0x000000011ba4cd1b:   hlt
  0x000000011ba4cd1c:   hlt
  0x000000011ba4cd1d:   hlt
  0x000000011ba4cd1e:   hlt
  0x000000011ba4cd1f:   hlt
[Stub Code]
  0x000000011ba4cd20:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x000000011ba4cd25:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011ba4cd2f:   jmp    0x000000011ba4cd2f           ;   {runtime_call}
  0x000000011ba4cd34:   nop
  0x000000011ba4cd35:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011ba4cd3f:   jmp    0x000000011ba4cd3f           ;   {runtime_call}
  0x000000011ba4cd44:   nop
  0x000000011ba4cd45:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011ba4cd4f:   jmp    0x000000011ba4cd4f           ;   {runtime_call}
  0x000000011ba4cd54:   nop
  0x000000011ba4cd55:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011ba4cd5f:   jmp    0x000000011ba4cd5f           ;   {runtime_call}
  0x000000011ba4cd64:   nop
  0x000000011ba4cd65:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011ba4cd6f:   jmp    0x000000011ba4cd6f           ;   {runtime_call}
  0x000000011ba4cd74:   nop
  0x000000011ba4cd75:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011ba4cd7f:   jmp    0x000000011ba4cd7f           ;   {runtime_call}
  0x000000011ba4cd84:   nop
  0x000000011ba4cd85:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011ba4cd8f:   jmp    0x000000011ba4cd8f           ;   {runtime_call}
  0x000000011ba4cd94:   nop
  0x000000011ba4cd95:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011ba4cd9f:   jmp    0x000000011ba4cd9f           ;   {runtime_call}
  0x000000011ba4cda4:   nop
  0x000000011ba4cda5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011ba4cdaf:   jmp    0x000000011ba4cdaf           ;   {runtime_call}
  0x000000011ba4cdb4:   nop
  0x000000011ba4cdb5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011ba4cdbf:   jmp    0x000000011ba4cdbf           ;   {runtime_call}
[Exception Handler]
  0x000000011ba4cdc4:   call   0x000000011b4d7900           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba4cdc9:   movabs rdi,0x10db45fc1              ;   {external_word}
  0x000000011ba4cdd3:   and    rsp,0xfffffffffffffff0
  0x000000011ba4cdd7:   call   0x000000010d7f0290           ;   {runtime_call _ZN14MacroAssembler7debug64EPcxPx}
  0x000000011ba4cddc:   hlt
[Deopt Handler Code]
  0x000000011ba4cddd:   movabs r10,0x11ba4cddd              ;   {section_word}
  0x000000011ba4cde7:   push   r10
  0x000000011ba4cde9:   jmp    0x000000011b4333a0           ;   {runtime_call DeoptimizationBlob}
  0x000000011ba4cdee:   hlt
  0x000000011ba4cdef:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     373  565       2       ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble (12 bytes)
 total in heap  [0x000000011ba4d110,0x000000011ba4d478] = 872
 relocation     [0x000000011ba4d270,0x000000011ba4d2b0] = 64
 main code      [0x000000011ba4d2c0,0x000000011ba4d3a0] = 224
 stub code      [0x000000011ba4d3a0,0x000000011ba4d3f0] = 80
 oops           [0x000000011ba4d3f0,0x000000011ba4d3f8] = 8
 metadata       [0x000000011ba4d3f8,0x000000011ba4d400] = 8
 scopes data    [0x000000011ba4d400,0x000000011ba4d420] = 32
 scopes pcs     [0x000000011ba4d420,0x000000011ba4d470] = 80
 dependencies   [0x000000011ba4d470,0x000000011ba4d478] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013a80df08} 'parseDouble' '(Ljava/lang/CharSequence;)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser'
  # parm0:    rsi:rsi   = 'java/lang/CharSequence'
  #           [sp+0x40]  (sp of caller)
  0x000000011ba4d2c0:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ba4d2c7:   push   rbp
  0x000000011ba4d2c8:   sub    rsp,0x30
  0x000000011ba4d2cc:   movabs rdi,0x13a80f3e8
  0x000000011ba4d2d6:   mov    ebx,DWORD PTR [rdi+0x8]
  0x000000011ba4d2d9:   add    ebx,0x2
  0x000000011ba4d2dc:   mov    DWORD PTR [rdi+0x8],ebx
  0x000000011ba4d2df:   and    ebx,0xffe
  0x000000011ba4d2e5:   cmp    ebx,0x0
  0x000000011ba4d2e8:   je     0x000000011ba4d337
  0x000000011ba4d2ee:   mov    rdi,rsi
  0x000000011ba4d2f1:   mov    rsi,rdi
  0x000000011ba4d2f4:   mov    QWORD PTR [rsp+0x20],rdi
  0x000000011ba4d2f9:   nop    DWORD PTR [rax+0x0]
  0x000000011ba4d2fd:   movabs rax,0x800008340
  0x000000011ba4d307:   call   0x0000000122ebb620           ; ImmutableOopMap {[32]=Oop }
                                                            ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@3 (line 99)
                                                            ;   {virtual_call}
  0x000000011ba4d30c:   mov    rsi,QWORD PTR [rsp+0x20]
  0x000000011ba4d311:   mov    edx,0x0
  0x000000011ba4d316:   mov    rcx,rax
  0x000000011ba4d319:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011ba4d31f:   call   0x000000011ba4c220           ; ImmutableOopMap {}
                                                            ;*invokestatic parseDouble {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@8 (line 99)
                                                            ;   {static_call}
  0x000000011ba4d324:   add    rsp,0x30
  0x000000011ba4d328:   pop    rbp
  0x000000011ba4d329:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x000000011ba4d330:   ja     0x000000011ba4d355
  0x000000011ba4d336:   ret
  0x000000011ba4d337:   movabs r10,0x13a80df08              ;   {metadata({method} {0x000000013a80df08} 'parseDouble' '(Ljava/lang/CharSequence;)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011ba4d341:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011ba4d346:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011ba4d34e:   call   0x000000011b4db500           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@-1 (line 99)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba4d353:   jmp    0x000000011ba4d2ee
  0x000000011ba4d355:   movabs r10,0x11ba4d329              ;   {internal_word}
  0x000000011ba4d35f:   mov    QWORD PTR [r15+0x350],r10
  0x000000011ba4d366:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x000000011ba4d36b:   nop
  0x000000011ba4d36c:   nop
  0x000000011ba4d36d:   mov    rax,QWORD PTR [r15+0x3c8]
  0x000000011ba4d374:   mov    QWORD PTR [r15+0x3c8],0x0
  0x000000011ba4d37f:   mov    QWORD PTR [r15+0x3d0],0x0
  0x000000011ba4d38a:   add    rsp,0x30
  0x000000011ba4d38e:   pop    rbp
  0x000000011ba4d38f:   jmp    0x000000011b446f00           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba4d394:   hlt
  0x000000011ba4d395:   hlt
  0x000000011ba4d396:   hlt
  0x000000011ba4d397:   hlt
  0x000000011ba4d398:   hlt
  0x000000011ba4d399:   hlt
  0x000000011ba4d39a:   hlt
  0x000000011ba4d39b:   hlt
  0x000000011ba4d39c:   hlt
  0x000000011ba4d39d:   hlt
  0x000000011ba4d39e:   hlt
  0x000000011ba4d39f:   hlt
[Stub Code]
  0x000000011ba4d3a0:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x000000011ba4d3a5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011ba4d3af:   jmp    0x000000011ba4d3af           ;   {runtime_call}
  0x000000011ba4d3b4:   nop
  0x000000011ba4d3b5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011ba4d3bf:   jmp    0x000000011ba4d3bf           ;   {runtime_call}
[Exception Handler]
  0x000000011ba4d3c4:   call   0x000000011b4d7900           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba4d3c9:   movabs rdi,0x10db45fc1              ;   {external_word}
  0x000000011ba4d3d3:   and    rsp,0xfffffffffffffff0
  0x000000011ba4d3d7:   call   0x000000010d7f0290           ;   {runtime_call _ZN14MacroAssembler7debug64EPcxPx}
  0x000000011ba4d3dc:   hlt
[Deopt Handler Code]
  0x000000011ba4d3dd:   movabs r10,0x11ba4d3dd              ;   {section_word}
  0x000000011ba4d3e7:   push   r10
  0x000000011ba4d3e9:   jmp    0x000000011b4333a0           ;   {runtime_call DeoptimizationBlob}
  0x000000011ba4d3ee:   hlt
  0x000000011ba4d3ef:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     375  571       2       ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble (8 bytes)
 total in heap  [0x000000011ba4d910,0x000000011ba4dc58] = 840
 relocation     [0x000000011ba4da70,0x000000011ba4daa8] = 56
 main code      [0x000000011ba4dac0,0x000000011ba4db80] = 192
 stub code      [0x000000011ba4db80,0x000000011ba4dbc0] = 64
 oops           [0x000000011ba4dbc0,0x000000011ba4dbc8] = 8
 metadata       [0x000000011ba4dbc8,0x000000011ba4dbd0] = 8
 scopes data    [0x000000011ba4dbd0,0x000000011ba4dbf0] = 32
 scopes pcs     [0x000000011ba4dbf0,0x000000011ba4dc40] = 80
 dependencies   [0x000000011ba4dc40,0x000000011ba4dc48] = 8
 nul chk table  [0x000000011ba4dc48,0x000000011ba4dc58] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013a82ece0} 'parseDouble' '([B)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray'
  # parm0:    rsi:rsi   = '[B'
  #           [sp+0x40]  (sp of caller)
  0x000000011ba4dac0:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ba4dac7:   push   rbp
  0x000000011ba4dac8:   sub    rsp,0x30
  0x000000011ba4dacc:   movabs rdx,0x13a82a6b0
  0x000000011ba4dad6:   mov    ecx,DWORD PTR [rdx+0x8]
  0x000000011ba4dad9:   add    ecx,0x2
  0x000000011ba4dadc:   mov    DWORD PTR [rdx+0x8],ecx
  0x000000011ba4dadf:   and    ecx,0xffe
  0x000000011ba4dae5:   cmp    ecx,0x0
  0x000000011ba4dae8:   je     0x000000011ba4db0f
  0x000000011ba4daee:   mov    ecx,DWORD PTR [rsi+0xc]      ; implicit exception: dispatches to 0x000000011ba4db2d
  0x000000011ba4daf1:   mov    edx,0x0
  0x000000011ba4daf6:   nop
  0x000000011ba4daf7:   call   0x000000011ba4db85           ; ImmutableOopMap {}
                                                            ;*invokestatic parseDouble {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@4 (line 121)
                                                            ;   {static_call}
  0x000000011ba4dafc:   add    rsp,0x30
  0x000000011ba4db00:   pop    rbp
  0x000000011ba4db01:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x000000011ba4db08:   ja     0x000000011ba4db32
  0x000000011ba4db0e:   ret
  0x000000011ba4db0f:   movabs r10,0x13a82ece0              ;   {metadata({method} {0x000000013a82ece0} 'parseDouble' '([B)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba4db19:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011ba4db1e:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011ba4db26:   call   0x000000011b4db500           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@-1 (line 121)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba4db2b:   jmp    0x000000011ba4daee
  0x000000011ba4db2d:   call   0x000000011b4d5b20           ; ImmutableOopMap {rsi=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@3 (line 121)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba4db32:   movabs r10,0x11ba4db01              ;   {internal_word}
  0x000000011ba4db3c:   mov    QWORD PTR [r15+0x350],r10
  0x000000011ba4db43:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x000000011ba4db48:   nop
  0x000000011ba4db49:   nop
  0x000000011ba4db4a:   mov    rax,QWORD PTR [r15+0x3c8]
  0x000000011ba4db51:   mov    QWORD PTR [r15+0x3c8],0x0
  0x000000011ba4db5c:   mov    QWORD PTR [r15+0x3d0],0x0
  0x000000011ba4db67:   add    rsp,0x30
  0x000000011ba4db6b:   pop    rbp
  0x000000011ba4db6c:   jmp    0x000000011b446f00           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba4db71:   hlt
  0x000000011ba4db72:   hlt
  0x000000011ba4db73:   hlt
  0x000000011ba4db74:   hlt
  0x000000011ba4db75:   hlt
  0x000000011ba4db76:   hlt
  0x000000011ba4db77:   hlt
  0x000000011ba4db78:   hlt
  0x000000011ba4db79:   hlt
  0x000000011ba4db7a:   hlt
  0x000000011ba4db7b:   hlt
  0x000000011ba4db7c:   hlt
  0x000000011ba4db7d:   hlt
  0x000000011ba4db7e:   hlt
  0x000000011ba4db7f:   hlt
[Stub Code]
  0x000000011ba4db80:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x000000011ba4db85:   movabs rbx,0x13a82ed38              ;   {static_stub}
  0x000000011ba4db8f:   jmp    0x000000011b40fb5f           ;   {runtime_call I2C/C2I adapters}
[Exception Handler]
  0x000000011ba4db94:   call   0x000000011b4d7900           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba4db99:   movabs rdi,0x10db45fc1              ;   {external_word}
  0x000000011ba4dba3:   and    rsp,0xfffffffffffffff0
  0x000000011ba4dba7:   call   0x000000010d7f0290           ;   {runtime_call _ZN14MacroAssembler7debug64EPcxPx}
  0x000000011ba4dbac:   hlt
[Deopt Handler Code]
  0x000000011ba4dbad:   movabs r10,0x11ba4dbad              ;   {section_word}
  0x000000011ba4dbb7:   push   r10
  0x000000011ba4dbb9:   jmp    0x000000011b4333a0           ;   {runtime_call DeoptimizationBlob}
  0x000000011ba4dbbe:   hlt
  0x000000011ba4dbbf:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     377  603       4       ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace (30 bytes)
 total in heap  [0x0000000122ef1110,0x0000000122ef15e0] = 1232
 relocation     [0x0000000122ef1270,0x0000000122ef1290] = 32
 main code      [0x0000000122ef12a0,0x0000000122ef1400] = 352
 stub code      [0x0000000122ef1400,0x0000000122ef1418] = 24
 oops           [0x0000000122ef1418,0x0000000122ef1428] = 16
 metadata       [0x0000000122ef1428,0x0000000122ef1458] = 48
 scopes data    [0x0000000122ef1458,0x0000000122ef1530] = 216
 scopes pcs     [0x0000000122ef1530,0x0000000122ef15c0] = 144
 dependencies   [0x0000000122ef15c0,0x0000000122ef15c8] = 8
 nul chk table  [0x0000000122ef15c8,0x0000000122ef15e0] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013a80ee10} 'skipWhitespace' '(Ljava/lang/CharSequence;II)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser'
  # parm0:    rsi:rsi   = 'java/lang/CharSequence'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000122ef12a0:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000122ef12a7:   push   rbp
  0x0000000122ef12a8:   sub    rsp,0x30
  0x0000000122ef12ac:   cmp    edx,ecx
  0x0000000122ef12ae:   jge    0x0000000122ef1309
  0x0000000122ef12b4:   mov    r11d,DWORD PTR [rsi+0x8]     ; implicit exception: dispatches to 0x0000000122ef13c0
  0x0000000122ef12b8:   nop    DWORD PTR [rax+rax*1+0x0]
  0x0000000122ef12c0:   cmp    r11d,0x8340                  ;   {metadata('java/lang/String')}
  0x0000000122ef12c7:   jne    0x0000000122ef136c
  0x0000000122ef12cd:   movsx  ebp,BYTE PTR [rsi+0x10]
  0x0000000122ef12d1:   test   ebp,ebp
  0x0000000122ef12d3:   jne    0x0000000122ef1388
  0x0000000122ef12d9:   mov    r10d,DWORD PTR [rsi+0x14]
  0x0000000122ef12dd:   data16 xchg ax,ax
  0x0000000122ef12e0:   mov    r8d,DWORD PTR [r12+r10*8+0xc]; implicit exception: dispatches to 0x0000000122ef13d0
  0x0000000122ef12e5:   cmp    edx,r8d
  0x0000000122ef12e8:   jae    0x0000000122ef1321
  0x0000000122ef12ea:   mov    r11d,edx
  0x0000000122ef12ed:   cmp    r11d,r8d
  0x0000000122ef12f0:   jae    0x0000000122ef1348
  0x0000000122ef12f2:   shl    r10,0x3
  0x0000000122ef12f6:   movzx  ebp,BYTE PTR [r10+r11*1+0x10]
  0x0000000122ef12fc:   nop    DWORD PTR [rax+0x0]
  0x0000000122ef1300:   cmp    ebp,0x20
  0x0000000122ef1303:   jle    0x0000000122ef13a4
  0x0000000122ef1309:   mov    eax,edx
  0x0000000122ef130b:   vzeroupper
  0x0000000122ef130e:   add    rsp,0x30
  0x0000000122ef1312:   pop    rbp
  0x0000000122ef1313:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x0000000122ef131a:   ja     0x0000000122ef13e0
  0x0000000122ef1320:   ret
  0x0000000122ef1321:   mov    rbp,rsi
  0x0000000122ef1324:   mov    DWORD PTR [rsp],ecx
  0x0000000122ef1327:   mov    DWORD PTR [rsp+0x8],edx
  0x0000000122ef132b:   mov    DWORD PTR [rsp+0xc],edx
  0x0000000122ef132f:   mov    DWORD PTR [rsp+0x10],r10d
  0x0000000122ef1334:   mov    DWORD PTR [rsp+0x14],r8d
  0x0000000122ef1339:   mov    esi,0xffffffe4
  0x0000000122ef133e:   xchg   ax,ax
  0x0000000122ef1340:   vzeroupper
  0x0000000122ef1343:   call   0x000000011b433000           ; ImmutableOopMap {rbp=Oop [16]=NarrowOop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::checkIndex@5 (line 4554)
                                                            ; - java.lang.StringLatin1::charAt@3 (line 46)
                                                            ; - java.lang.String::charAt@12 (line 1512)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@9 (line 550)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef1348:   mov    rbp,rsi
  0x0000000122ef134b:   mov    DWORD PTR [rsp],ecx
  0x0000000122ef134e:   mov    DWORD PTR [rsp+0x4],edx
  0x0000000122ef1352:   mov    DWORD PTR [rsp+0x8],r10d
  0x0000000122ef1357:   mov    DWORD PTR [rsp+0xc],r11d
  0x0000000122ef135c:   mov    esi,0xffffffe4
  0x0000000122ef1361:   data16 xchg ax,ax
  0x0000000122ef1364:   vzeroupper
  0x0000000122ef1367:   call   0x000000011b433000           ; ImmutableOopMap {rbp=Oop [8]=NarrowOop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::charAt@8 (line 47)
                                                            ; - java.lang.String::charAt@12 (line 1512)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@9 (line 550)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef136c:   mov    DWORD PTR [rsp],ecx
  0x0000000122ef136f:   mov    QWORD PTR [rsp+0x8],rsi
  0x0000000122ef1374:   mov    DWORD PTR [rsp+0x10],edx
  0x0000000122ef1378:   mov    esi,0xffffffde
  0x0000000122ef137d:   data16 xchg ax,ax
  0x0000000122ef1380:   vzeroupper
  0x0000000122ef1383:   call   0x000000011b433000           ; ImmutableOopMap {[8]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@9 (line 550)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef1388:   mov    DWORD PTR [rsp+0x8],ecx
  0x0000000122ef138c:   mov    QWORD PTR [rsp+0x10],rsi
  0x0000000122ef1391:   mov    DWORD PTR [rsp+0x18],edx
  0x0000000122ef1395:   mov    esi,0xffffff45
  0x0000000122ef139a:   xchg   ax,ax
  0x0000000122ef139c:   vzeroupper
  0x0000000122ef139f:   call   0x000000011b433000           ; ImmutableOopMap {[16]=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.String::isLatin1@10 (line 4543)
                                                            ; - java.lang.String::charAt@1 (line 1511)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@9 (line 550)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef13a4:   mov    QWORD PTR [rsp],rsi
  0x0000000122ef13a8:   mov    DWORD PTR [rsp+0x8],ecx
  0x0000000122ef13ac:   mov    DWORD PTR [rsp+0xc],r11d
  0x0000000122ef13b1:   mov    esi,0xffffff45
  0x0000000122ef13b6:   xchg   ax,ax
  0x0000000122ef13b8:   vzeroupper
  0x0000000122ef13bb:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@16 (line 550)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef13c0:   mov    esi,0xfffffff6
  0x0000000122ef13c5:   mov    ebp,edx
  0x0000000122ef13c7:   nop
  0x0000000122ef13c8:   vzeroupper
  0x0000000122ef13cb:   call   0x000000011b433000           ; ImmutableOopMap {}
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@9 (line 550)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef13d0:   mov    esi,0xfffffff6
  0x0000000122ef13d5:   data16 xchg ax,ax
  0x0000000122ef13d8:   vzeroupper
  0x0000000122ef13db:   call   0x000000011b433000           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::charAt@2 (line 46)
                                                            ; - java.lang.String::charAt@12 (line 1512)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@9 (line 550)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef13e0:   movabs r10,0x122ef1313              ;   {internal_word}
  0x0000000122ef13ea:   mov    QWORD PTR [r15+0x350],r10
  0x0000000122ef13f1:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x0000000122ef13f6:   hlt
  0x0000000122ef13f7:   hlt
  0x0000000122ef13f8:   hlt
  0x0000000122ef13f9:   hlt
  0x0000000122ef13fa:   hlt
  0x0000000122ef13fb:   hlt
  0x0000000122ef13fc:   hlt
  0x0000000122ef13fd:   hlt
  0x0000000122ef13fe:   hlt
  0x0000000122ef13ff:   hlt
[Exception Handler]
  0x0000000122ef1400:   jmp    0x000000011b447880           ;   {no_reloc}
[Deopt Handler Code]
  0x0000000122ef1405:   call   0x0000000122ef140a
  0x0000000122ef140a:   sub    QWORD PTR [rsp],0x5
  0x0000000122ef140f:   jmp    0x000000011b4333a0           ;   {runtime_call DeoptimizationBlob}
  0x0000000122ef1414:   hlt
  0x0000000122ef1415:   hlt
  0x0000000122ef1416:   hlt
  0x0000000122ef1417:   hlt
--------------------------------------------------------------------------------
[/Disassembly]
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     381  609       4       ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble (213 bytes)
 total in heap  [0x0000000122ef1610,0x0000000122ef21a8] = 2968
 relocation     [0x0000000122ef1770,0x0000000122ef17c0] = 80
 main code      [0x0000000122ef17c0,0x0000000122ef1c20] = 1120
 stub code      [0x0000000122ef1c20,0x0000000122ef1c48] = 40
 oops           [0x0000000122ef1c48,0x0000000122ef1c58] = 16
 metadata       [0x0000000122ef1c58,0x0000000122ef1c90] = 56
 scopes data    [0x0000000122ef1c90,0x0000000122ef1fd0] = 832
 scopes pcs     [0x0000000122ef1fd0,0x0000000122ef2160] = 400
 dependencies   [0x0000000122ef2160,0x0000000122ef2168] = 8
 handler table  [0x0000000122ef2168,0x0000000122ef2180] = 24
 nul chk table  [0x0000000122ef2180,0x0000000122ef21a8] = 40

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013a80e0e8} 'parseDouble' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser'
  # parm0:    rsi:rsi   = 'java/lang/CharSequence'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x50]  (sp of caller)
  0x0000000122ef17c0:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000122ef17c7:   push   rbp
  0x0000000122ef17c8:   sub    rsp,0x40
  0x0000000122ef17cc:   mov    r9,rsi
  0x0000000122ef17cf:   mov    r8d,ecx
  0x0000000122ef17d2:   add    r8d,edx
  0x0000000122ef17d5:   mov    r11d,edx
  0x0000000122ef17d8:   cmp    edx,r8d
  0x0000000122ef17db:   nop    DWORD PTR [rax+rax*1+0x0]
  0x0000000122ef17e0:   jge    0x0000000122ef183c
  0x0000000122ef17e6:   mov    r10d,DWORD PTR [rsi+0x8]     ; implicit exception: dispatches to 0x0000000122ef1bd0
  0x0000000122ef17ea:   cmp    r10d,0x8340                  ;   {metadata('java/lang/String')}
  0x0000000122ef17f1:   jne    0x0000000122ef1a18
  0x0000000122ef17f7:   mov    rdi,rsi
  0x0000000122ef17fa:   movsx  ebp,BYTE PTR [rdi+0x10]
  0x0000000122ef17fe:   xchg   ax,ax
  0x0000000122ef1800:   test   ebp,ebp
  0x0000000122ef1802:   jne    0x0000000122ef1b58
  0x0000000122ef1808:   mov    ecx,DWORD PTR [rdi+0x14]
  0x0000000122ef180b:   mov    ebx,DWORD PTR [r12+rcx*8+0xc]; implicit exception: dispatches to 0x0000000122ef1be0
  0x0000000122ef1810:   cmp    edx,ebx
  0x0000000122ef1812:   jae    0x0000000122ef19c4
  0x0000000122ef1818:   mov    r10d,edx
  0x0000000122ef181b:   nop    DWORD PTR [rax+rax*1+0x0]
  0x0000000122ef1820:   cmp    r10d,ebx
  0x0000000122ef1823:   jae    0x0000000122ef19f0
  0x0000000122ef1829:   shl    rcx,0x3
  0x0000000122ef182d:   movzx  ebp,BYTE PTR [rcx+r10*1+0x10]
  0x0000000122ef1833:   cmp    ebp,0x20
  0x0000000122ef1836:   jle    0x0000000122ef1b7c
  0x0000000122ef183c:   mov    ecx,edx
  0x0000000122ef183e:   xchg   ax,ax
  0x0000000122ef1840:   cmp    ecx,r8d
  0x0000000122ef1843:   je     0x0000000122ef1a5c
  0x0000000122ef1849:   mov    ebx,DWORD PTR [rsi+0x8]      ; implicit exception: dispatches to 0x0000000122ef1bb0
  0x0000000122ef184c:   cmp    ebx,0x8340                   ;   {metadata('java/lang/String')}
  0x0000000122ef1852:   jne    0x0000000122ef19a4
  0x0000000122ef1858:   mov    rbx,r9
  0x0000000122ef185b:   movsx  ebp,BYTE PTR [r9+0x10]
  0x0000000122ef1860:   test   ebp,ebp
  0x0000000122ef1862:   jne    0x0000000122ef1a3c
  0x0000000122ef1868:   mov    edi,DWORD PTR [r9+0x14]
  0x0000000122ef186c:   mov    edx,DWORD PTR [r12+rdi*8+0xc]; implicit exception: dispatches to 0x0000000122ef1bc0
  0x0000000122ef1871:   cmp    ecx,edx
  0x0000000122ef1873:   jae    0x0000000122ef1926
  0x0000000122ef1879:   mov    r10d,ecx
  0x0000000122ef187c:   nop    DWORD PTR [rax+0x0]
  0x0000000122ef1880:   cmp    r10d,edx
  0x0000000122ef1883:   jae    0x0000000122ef1950
  0x0000000122ef1889:   movsxd rsi,r10d
  0x0000000122ef188c:   lea    rax,[r12+rdi*8]
  0x0000000122ef1890:   movzx  ebp,BYTE PTR [rax+rsi*1+0x10]
  0x0000000122ef1895:   cmp    ebp,0x2d
  0x0000000122ef1898:   je     0x0000000122ef1a78
  0x0000000122ef189e:   xchg   ax,ax
  0x0000000122ef18a0:   cmp    ebp,0x2b
  0x0000000122ef18a3:   je     0x0000000122ef1a98
  0x0000000122ef18a9:   cmp    ebp,0x4e
  0x0000000122ef18ac:   je     0x0000000122ef1ab8
  0x0000000122ef18b2:   cmp    ebp,0x49
  0x0000000122ef18b5:   je     0x0000000122ef1ad8
  0x0000000122ef18bb:   xor    r9d,r9d
  0x0000000122ef18be:   xchg   ax,ax
  0x0000000122ef18c0:   cmp    ebp,0x30
  0x0000000122ef18c3:   jne    0x0000000122ef1922
  0x0000000122ef18c9:   inc    r10d
  0x0000000122ef18cc:   cmp    r10d,r8d
  0x0000000122ef18cf:   jge    0x0000000122ef1af8
  0x0000000122ef18d5:   cmp    r10d,edx
  0x0000000122ef18d8:   jae    0x0000000122ef1978
  0x0000000122ef18de:   movzx  ebp,BYTE PTR [rax+rsi*1+0x11]
  0x0000000122ef18e3:   cmp    ebp,0x78
  0x0000000122ef18e6:   je     0x0000000122ef1b18
  0x0000000122ef18ec:   cmp    ebp,0x58
  0x0000000122ef18ef:   je     0x0000000122ef1b38
  0x0000000122ef18f5:   mov    edi,0x1
  0x0000000122ef18fa:   mov    edx,r10d
  0x0000000122ef18fd:   mov    ecx,r11d
  0x0000000122ef1900:   mov    rsi,rbx
  0x0000000122ef1903:   nop
  0x0000000122ef1904:   vzeroupper
  0x0000000122ef1907:   call   0x0000000122ee0e20           ; ImmutableOopMap {}
                                                            ;*invokestatic parseRestOfDecimalFloatLiteral {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@209 (line 255)
                                                            ;   {static_call}
  0x0000000122ef190c:   vzeroupper
  0x0000000122ef190f:   add    rsp,0x40
  0x0000000122ef1913:   pop    rbp
  0x0000000122ef1914:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x0000000122ef191b:   ja     0x0000000122ef1bf0
  0x0000000122ef1921:   ret
  0x0000000122ef1922:   xor    edi,edi
  0x0000000122ef1924:   jmp    0x0000000122ef18fa
  0x0000000122ef1926:   mov    esi,0xffffffe4
  0x0000000122ef192b:   mov    rbp,r9
  0x0000000122ef192e:   mov    DWORD PTR [rsp],r11d
  0x0000000122ef1932:   mov    DWORD PTR [rsp+0x4],r8d
  0x0000000122ef1937:   mov    DWORD PTR [rsp+0xc],edi
  0x0000000122ef193b:   mov    DWORD PTR [rsp+0x10],ecx
  0x0000000122ef193f:   mov    DWORD PTR [rsp+0x14],ecx
  0x0000000122ef1943:   mov    DWORD PTR [rsp+0x18],edx
  0x0000000122ef1947:   nop
  0x0000000122ef1948:   vzeroupper
  0x0000000122ef194b:   call   0x000000011b433000           ; ImmutableOopMap {rbp=Oop [12]=NarrowOop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::checkIndex@5 (line 4554)
                                                            ; - java.lang.StringLatin1::charAt@3 (line 46)
                                                            ; - java.lang.String::charAt@12 (line 1512)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@31 (line 225)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef1950:   mov    esi,0xffffffe4
  0x0000000122ef1955:   mov    rbp,rbx
  0x0000000122ef1958:   mov    DWORD PTR [rsp],r11d
  0x0000000122ef195c:   mov    DWORD PTR [rsp+0x4],r8d
  0x0000000122ef1961:   mov    DWORD PTR [rsp+0x8],ecx
  0x0000000122ef1965:   mov    DWORD PTR [rsp+0xc],edi
  0x0000000122ef1969:   mov    DWORD PTR [rsp+0x10],r10d
  0x0000000122ef196e:   xchg   ax,ax
  0x0000000122ef1970:   vzeroupper
  0x0000000122ef1973:   call   0x000000011b433000           ; ImmutableOopMap {rbp=Oop [12]=NarrowOop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::charAt@8 (line 47)
                                                            ; - java.lang.String::charAt@12 (line 1512)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@31 (line 225)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef1978:   mov    esi,0xffffffe4
  0x0000000122ef197d:   mov    rbp,rbx
  0x0000000122ef1980:   mov    DWORD PTR [rsp],r11d
  0x0000000122ef1984:   mov    DWORD PTR [rsp+0x4],r8d
  0x0000000122ef1989:   mov    DWORD PTR [rsp+0xc],edi
  0x0000000122ef198d:   mov    DWORD PTR [rsp+0x10],r10d
  0x0000000122ef1992:   mov    DWORD PTR [rsp+0x14],r10d
  0x0000000122ef1997:   mov    DWORD PTR [rsp+0x18],edx
  0x0000000122ef199b:   nop
  0x0000000122ef199c:   vzeroupper
  0x0000000122ef199f:   call   0x000000011b433000           ; ImmutableOopMap {rbp=Oop [12]=NarrowOop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::checkIndex@5 (line 4554)
                                                            ; - java.lang.StringLatin1::charAt@3 (line 46)
                                                            ; - java.lang.String::charAt@12 (line 1512)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@162 (line 249)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef19a4:   mov    esi,0xffffffde
  0x0000000122ef19a9:   mov    DWORD PTR [rsp],edx
  0x0000000122ef19ac:   mov    DWORD PTR [rsp+0x4],r8d
  0x0000000122ef19b1:   mov    QWORD PTR [rsp+0x8],r9
  0x0000000122ef19b6:   mov    DWORD PTR [rsp+0x14],ecx
  0x0000000122ef19ba:   xchg   ax,ax
  0x0000000122ef19bc:   vzeroupper
  0x0000000122ef19bf:   call   0x000000011b433000           ; ImmutableOopMap {[8]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@31 (line 225)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef19c4:   mov    esi,0xffffffe4
  0x0000000122ef19c9:   mov    rbp,r9
  0x0000000122ef19cc:   mov    DWORD PTR [rsp+0x8],r8d
  0x0000000122ef19d1:   mov    DWORD PTR [rsp+0xc],edx
  0x0000000122ef19d5:   mov    DWORD PTR [rsp+0x10],edx
  0x0000000122ef19d9:   mov    QWORD PTR [rsp+0x18],rdi
  0x0000000122ef19de:   mov    DWORD PTR [rsp+0x20],ecx
  0x0000000122ef19e2:   mov    DWORD PTR [rsp+0x24],ebx
  0x0000000122ef19e6:   xchg   ax,ax
  0x0000000122ef19e8:   vzeroupper
  0x0000000122ef19eb:   call   0x000000011b433000           ; ImmutableOopMap {rbp=Oop [24]=Oop [32]=NarrowOop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::checkIndex@5 (line 4554)
                                                            ; - java.lang.StringLatin1::charAt@3 (line 46)
                                                            ; - java.lang.String::charAt@12 (line 1512)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@9 (line 550)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@7 (line 221)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef19f0:   mov    esi,0xffffffe4
  0x0000000122ef19f5:   mov    rbp,r9
  0x0000000122ef19f8:   mov    DWORD PTR [rsp+0x8],r8d
  0x0000000122ef19fd:   mov    DWORD PTR [rsp+0xc],edx
  0x0000000122ef1a01:   mov    QWORD PTR [rsp+0x10],rdi
  0x0000000122ef1a06:   mov    DWORD PTR [rsp+0x18],ecx
  0x0000000122ef1a0a:   mov    DWORD PTR [rsp+0x1c],r10d
  0x0000000122ef1a0f:   nop
  0x0000000122ef1a10:   vzeroupper
  0x0000000122ef1a13:   call   0x000000011b433000           ; ImmutableOopMap {rbp=Oop [16]=Oop [24]=NarrowOop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::charAt@8 (line 47)
                                                            ; - java.lang.String::charAt@12 (line 1512)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@9 (line 550)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@7 (line 221)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef1a18:   mov    esi,0xffffffde
  0x0000000122ef1a1d:   mov    QWORD PTR [rsp+0x8],r9
  0x0000000122ef1a22:   mov    DWORD PTR [rsp+0x10],r8d
  0x0000000122ef1a27:   mov    DWORD PTR [rsp+0x14],edx
  0x0000000122ef1a2b:   mov    QWORD PTR [rsp+0x18],r9
  0x0000000122ef1a30:   mov    DWORD PTR [rsp+0x20],edx
  0x0000000122ef1a34:   vzeroupper
  0x0000000122ef1a37:   call   0x000000011b433000           ; ImmutableOopMap {[8]=Oop [24]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@9 (line 550)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@7 (line 221)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef1a3c:   mov    esi,0xffffff45
  0x0000000122ef1a41:   mov    DWORD PTR [rsp+0x8],edx
  0x0000000122ef1a45:   mov    DWORD PTR [rsp+0xc],r8d
  0x0000000122ef1a4a:   mov    QWORD PTR [rsp+0x10],r9
  0x0000000122ef1a4f:   mov    DWORD PTR [rsp+0x1c],ecx
  0x0000000122ef1a53:   nop
  0x0000000122ef1a54:   vzeroupper
  0x0000000122ef1a57:   call   0x000000011b433000           ; ImmutableOopMap {[16]=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.String::isLatin1@10 (line 4543)
                                                            ; - java.lang.String::charAt@1 (line 1511)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@31 (line 225)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef1a5c:   mov    esi,0xffffff45
  0x0000000122ef1a61:   mov    rbp,r9
  0x0000000122ef1a64:   mov    DWORD PTR [rsp],edx
  0x0000000122ef1a67:   mov    DWORD PTR [rsp+0x8],r8d
  0x0000000122ef1a6c:   mov    DWORD PTR [rsp+0x10],ecx
  0x0000000122ef1a70:   vzeroupper
  0x0000000122ef1a73:   call   0x000000011b433000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@15 (line 222)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef1a78:   mov    esi,0xffffff45
  0x0000000122ef1a7d:   mov    QWORD PTR [rsp],rbx
  0x0000000122ef1a81:   mov    DWORD PTR [rsp+0x8],r11d
  0x0000000122ef1a86:   mov    DWORD PTR [rsp+0xc],r8d
  0x0000000122ef1a8b:   mov    DWORD PTR [rsp+0x10],r10d
  0x0000000122ef1a90:   vzeroupper
  0x0000000122ef1a93:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@42 (line 229)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef1a98:   mov    esi,0xffffff45
  0x0000000122ef1a9d:   mov    QWORD PTR [rsp],rbx
  0x0000000122ef1aa1:   mov    DWORD PTR [rsp+0x8],r11d
  0x0000000122ef1aa6:   mov    DWORD PTR [rsp+0xc],r8d
  0x0000000122ef1aab:   mov    DWORD PTR [rsp+0x10],r10d
  0x0000000122ef1ab0:   vzeroupper
  0x0000000122ef1ab3:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@61 (line 230)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef1ab8:   mov    esi,0xffffff45
  0x0000000122ef1abd:   mov    QWORD PTR [rsp],rbx
  0x0000000122ef1ac1:   mov    DWORD PTR [rsp+0x8],r11d
  0x0000000122ef1ac6:   mov    DWORD PTR [rsp+0xc],r8d
  0x0000000122ef1acb:   mov    DWORD PTR [rsp+0x10],r10d
  0x0000000122ef1ad0:   vzeroupper
  0x0000000122ef1ad3:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@103 (line 239)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef1ad8:   mov    esi,0xffffff45
  0x0000000122ef1add:   mov    QWORD PTR [rsp],rbx
  0x0000000122ef1ae1:   mov    DWORD PTR [rsp+0x8],r11d
  0x0000000122ef1ae6:   mov    DWORD PTR [rsp+0xc],r8d
  0x0000000122ef1aeb:   mov    DWORD PTR [rsp+0x10],r10d
  0x0000000122ef1af0:   vzeroupper
  0x0000000122ef1af3:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@118 (line 241)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef1af8:   mov    esi,0xffffff45
  0x0000000122ef1afd:   mov    rbp,rbx
  0x0000000122ef1b00:   mov    DWORD PTR [rsp],r11d
  0x0000000122ef1b04:   mov    DWORD PTR [rsp+0x8],r8d
  0x0000000122ef1b09:   mov    DWORD PTR [rsp+0x10],r10d
  0x0000000122ef1b0e:   xchg   ax,ax
  0x0000000122ef1b10:   vzeroupper
  0x0000000122ef1b13:   call   0x000000011b433000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@156 (line 249)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef1b18:   mov    esi,0xffffff45
  0x0000000122ef1b1d:   mov    QWORD PTR [rsp],rbx
  0x0000000122ef1b21:   mov    DWORD PTR [rsp+0x8],r11d
  0x0000000122ef1b26:   mov    DWORD PTR [rsp+0xc],r8d
  0x0000000122ef1b2b:   mov    DWORD PTR [rsp+0x10],r10d
  0x0000000122ef1b30:   vzeroupper
  0x0000000122ef1b33:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@177 (line 250)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef1b38:   mov    esi,0xffffff45
  0x0000000122ef1b3d:   mov    QWORD PTR [rsp],rbx
  0x0000000122ef1b41:   mov    DWORD PTR [rsp+0x8],r11d
  0x0000000122ef1b46:   mov    DWORD PTR [rsp+0xc],r8d
  0x0000000122ef1b4b:   mov    DWORD PTR [rsp+0x10],r10d
  0x0000000122ef1b50:   vzeroupper
  0x0000000122ef1b53:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@184 (line 250)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef1b58:   mov    esi,0xffffff45
  0x0000000122ef1b5d:   mov    QWORD PTR [rsp],r9
  0x0000000122ef1b61:   mov    DWORD PTR [rsp+0x10],r8d
  0x0000000122ef1b66:   mov    DWORD PTR [rsp+0x14],edx
  0x0000000122ef1b6a:   mov    DWORD PTR [rsp+0x18],edx
  0x0000000122ef1b6e:   mov    QWORD PTR [rsp+0x28],rdi
  0x0000000122ef1b73:   nop
  0x0000000122ef1b74:   vzeroupper
  0x0000000122ef1b77:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop [40]=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.String::isLatin1@10 (line 4543)
                                                            ; - java.lang.String::charAt@1 (line 1511)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@9 (line 550)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@7 (line 221)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef1b7c:   mov    esi,0xffffff45
  0x0000000122ef1b81:   mov    QWORD PTR [rsp],r9
  0x0000000122ef1b85:   mov    DWORD PTR [rsp+0x8],edx
  0x0000000122ef1b89:   mov    DWORD PTR [rsp+0x10],r8d
  0x0000000122ef1b8e:   mov    QWORD PTR [rsp+0x18],rdi
  0x0000000122ef1b93:   mov    DWORD PTR [rsp+0x14],r10d
  0x0000000122ef1b98:   vzeroupper
  0x0000000122ef1b9b:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop [24]=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@16 (line 550)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@7 (line 221)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef1ba0:   mov    rsi,rax
  0x0000000122ef1ba3:   vzeroupper
  0x0000000122ef1ba6:   add    rsp,0x40
  0x0000000122ef1baa:   pop    rbp
  0x0000000122ef1bab:   jmp    0x000000011b4e2700           ;   {runtime_call _rethrow_Java}
  0x0000000122ef1bb0:   mov    esi,0xfffffff6
  0x0000000122ef1bb5:   mov    ebp,ecx
  0x0000000122ef1bb7:   nop
  0x0000000122ef1bb8:   vzeroupper
  0x0000000122ef1bbb:   call   0x000000011b433000           ; ImmutableOopMap {}
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@31 (line 225)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef1bc0:   mov    esi,0xfffffff6
  0x0000000122ef1bc5:   data16 xchg ax,ax
  0x0000000122ef1bc8:   vzeroupper
  0x0000000122ef1bcb:   call   0x000000011b433000           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::charAt@2 (line 46)
                                                            ; - java.lang.String::charAt@12 (line 1512)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@31 (line 225)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef1bd0:   mov    esi,0xfffffff6
  0x0000000122ef1bd5:   mov    ebp,edx
  0x0000000122ef1bd7:   nop
  0x0000000122ef1bd8:   vzeroupper
  0x0000000122ef1bdb:   call   0x000000011b433000           ; ImmutableOopMap {}
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@9 (line 550)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@7 (line 221)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef1be0:   mov    esi,0xfffffff6
  0x0000000122ef1be5:   data16 xchg ax,ax
  0x0000000122ef1be8:   vzeroupper
  0x0000000122ef1beb:   call   0x000000011b433000           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::charAt@2 (line 46)
                                                            ; - java.lang.String::charAt@12 (line 1512)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@9 (line 550)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@7 (line 221)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef1bf0:   movabs r10,0x122ef1914              ;   {internal_word}
  0x0000000122ef1bfa:   mov    QWORD PTR [r15+0x350],r10
  0x0000000122ef1c01:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x0000000122ef1c06:   hlt
  0x0000000122ef1c07:   hlt
  0x0000000122ef1c08:   hlt
  0x0000000122ef1c09:   hlt
  0x0000000122ef1c0a:   hlt
  0x0000000122ef1c0b:   hlt
  0x0000000122ef1c0c:   hlt
  0x0000000122ef1c0d:   hlt
  0x0000000122ef1c0e:   hlt
  0x0000000122ef1c0f:   hlt
  0x0000000122ef1c10:   hlt
  0x0000000122ef1c11:   hlt
  0x0000000122ef1c12:   hlt
  0x0000000122ef1c13:   hlt
  0x0000000122ef1c14:   hlt
  0x0000000122ef1c15:   hlt
  0x0000000122ef1c16:   hlt
  0x0000000122ef1c17:   hlt
  0x0000000122ef1c18:   hlt
  0x0000000122ef1c19:   hlt
  0x0000000122ef1c1a:   hlt
  0x0000000122ef1c1b:   hlt
  0x0000000122ef1c1c:   hlt
  0x0000000122ef1c1d:   hlt
  0x0000000122ef1c1e:   hlt
  0x0000000122ef1c1f:   hlt
[Stub Code]
  0x0000000122ef1c20:   movabs rbx,0x0                      ;   {no_reloc}
  0x0000000122ef1c2a:   jmp    0x0000000122ef1c2a           ;   {runtime_call}
[Exception Handler]
  0x0000000122ef1c2f:   jmp    0x000000011b447880           ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000122ef1c34:   call   0x0000000122ef1c39
  0x0000000122ef1c39:   sub    QWORD PTR [rsp],0x5
  0x0000000122ef1c3e:   jmp    0x000000011b4333a0           ;   {runtime_call DeoptimizationBlob}
  0x0000000122ef1c43:   hlt
  0x0000000122ef1c44:   hlt
  0x0000000122ef1c45:   hlt
  0x0000000122ef1c46:   hlt
  0x0000000122ef1c47:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     389  572       2       ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble (203 bytes)
 total in heap  [0x000000011ba4dc90,0x000000011ba4e5a8] = 2328
 relocation     [0x000000011ba4ddf0,0x000000011ba4dea0] = 176
 main code      [0x000000011ba4dea0,0x000000011ba4e2a0] = 1024
 stub code      [0x000000011ba4e2a0,0x000000011ba4e330] = 144
 oops           [0x000000011ba4e330,0x000000011ba4e338] = 8
 metadata       [0x000000011ba4e338,0x000000011ba4e348] = 16
 scopes data    [0x000000011ba4e348,0x000000011ba4e3f8] = 176
 scopes pcs     [0x000000011ba4e3f8,0x000000011ba4e568] = 368
 dependencies   [0x000000011ba4e568,0x000000011ba4e570] = 8
 nul chk table  [0x000000011ba4e570,0x000000011ba4e5a8] = 56

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013a82ed38} 'parseDouble' '([BII)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x70]  (sp of caller)
  0x000000011ba4dea0:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ba4dea7:   push   rbp
  0x000000011ba4dea8:   sub    rsp,0x60
  0x000000011ba4deac:   mov    rdi,rdx
  0x000000011ba4deaf:   movabs rdx,0x13a82a6e8
  0x000000011ba4deb9:   mov    r8d,DWORD PTR [rdx+0x8]
  0x000000011ba4debd:   add    r8d,0x2
  0x000000011ba4dec1:   mov    DWORD PTR [rdx+0x8],r8d
  0x000000011ba4dec5:   and    r8d,0xffe
  0x000000011ba4decc:   cmp    r8d,0x0
  0x000000011ba4ded0:   je     0x000000011ba4e156
  0x000000011ba4ded6:   mov    rbx,rcx
  0x000000011ba4ded9:   add    ebx,edi
  0x000000011ba4dedb:   mov    rdx,rdi
  0x000000011ba4dede:   jmp    0x000000011ba4df3e
  0x000000011ba4dee3:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011ba4dee8:   cmp    edx,DWORD PTR [rsi+0xc]      ; implicit exception: dispatches to 0x000000011ba4e177
  0x000000011ba4deeb:   jae    0x000000011ba4e181
  0x000000011ba4def1:   movsxd r8,edx
  0x000000011ba4def4:   movsx  r8d,BYTE PTR [rsi+r8*1+0x10]
  0x000000011ba4defa:   and    r8d,0xff
  0x000000011ba4df01:   cmp    r8d,0x20
  0x000000011ba4df05:   jg     0x000000011ba4df42
  0x000000011ba4df0b:   inc    edx
  0x000000011ba4df0d:   movabs r8,0x13a82a720
  0x000000011ba4df17:   mov    r9d,DWORD PTR [r8+0xc]
  0x000000011ba4df1b:   add    r9d,0x2
  0x000000011ba4df1f:   mov    DWORD PTR [r8+0xc],r9d
  0x000000011ba4df23:   and    r9d,0x7ffe
  0x000000011ba4df2a:   cmp    r9d,0x0
  0x000000011ba4df2e:   je     0x000000011ba4e18f
  0x000000011ba4df34:   mov    r10,QWORD PTR [r15+0x340]    ; ImmutableOopMap {rsi=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::skipWhitespace@25 (line 592)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@7 (line 244)
  0x000000011ba4df3b:   test   DWORD PTR [r10],eax          ;   {poll}
  0x000000011ba4df3e:   cmp    edx,ebx
  0x000000011ba4df40:   jl     0x000000011ba4dee8
  0x000000011ba4df42:   cmp    edx,ebx
  0x000000011ba4df44:   je     0x000000011ba4e0cc
  0x000000011ba4df4a:   cmp    edx,DWORD PTR [rsi+0xc]      ; implicit exception: dispatches to 0x000000011ba4e1b0
  0x000000011ba4df4d:   jae    0x000000011ba4e1ba
  0x000000011ba4df53:   movsxd r8,edx
  0x000000011ba4df56:   movsx  r8d,BYTE PTR [rsi+r8*1+0x10]
  0x000000011ba4df5c:   cmp    r8d,0x2d
  0x000000011ba4df60:   mov    eax,0x0
  0x000000011ba4df65:   jne    0x000000011ba4df70
  0x000000011ba4df6b:   mov    eax,0x1
  0x000000011ba4df70:   cmp    r8d,0x2d
  0x000000011ba4df74:   je     0x000000011ba4df84
  0x000000011ba4df7a:   cmp    r8d,0x2b
  0x000000011ba4df7e:   jne    0x000000011ba4dfb5
  0x000000011ba4df84:   inc    edx
  0x000000011ba4df86:   cmp    edx,ebx
  0x000000011ba4df88:   jge    0x000000011ba4dfa5
  0x000000011ba4df8e:   cmp    edx,DWORD PTR [rsi+0xc]
  0x000000011ba4df91:   jae    0x000000011ba4e1c8
  0x000000011ba4df97:   movsxd r8,edx
  0x000000011ba4df9a:   movsx  r8d,BYTE PTR [rsi+r8*1+0x10]
  0x000000011ba4dfa0:   jmp    0x000000011ba4dfab
  0x000000011ba4dfa5:   mov    r8d,0x0
  0x000000011ba4dfab:   cmp    r8d,0x0
  0x000000011ba4dfaf:   je     0x000000011ba4e0b7
  0x000000011ba4dfb5:   cmp    r8d,0x4e
  0x000000011ba4dfb9:   je     0x000000011ba4e097
  0x000000011ba4dfbf:   cmp    r8d,0x49
  0x000000011ba4dfc3:   je     0x000000011ba4e06f
  0x000000011ba4dfc9:   cmp    r8d,0x30
  0x000000011ba4dfcd:   mov    r11d,0x0
  0x000000011ba4dfd3:   jne    0x000000011ba4dfdf
  0x000000011ba4dfd9:   mov    r11d,0x1
  0x000000011ba4dfdf:   cmp    r8d,0x30
  0x000000011ba4dfe3:   jne    0x000000011ba4e020
  0x000000011ba4dfe9:   inc    edx
  0x000000011ba4dfeb:   cmp    edx,ebx
  0x000000011ba4dfed:   jge    0x000000011ba4e009
  0x000000011ba4dff3:   cmp    edx,DWORD PTR [rsi+0xc]
  0x000000011ba4dff6:   jae    0x000000011ba4e1d6
  0x000000011ba4dffc:   movsxd rcx,edx
  0x000000011ba4dfff:   movsx  ecx,BYTE PTR [rsi+rcx*1+0x10]
  0x000000011ba4e004:   jmp    0x000000011ba4e00e
  0x000000011ba4e009:   mov    ecx,0x0
  0x000000011ba4e00e:   cmp    ecx,0x78
  0x000000011ba4e011:   je     0x000000011ba4e047
  0x000000011ba4e017:   cmp    ecx,0x58
  0x000000011ba4e01a:   je     0x000000011ba4e047
  0x000000011ba4e020:   mov    rcx,rdi
  0x000000011ba4e023:   mov    r8,rbx
  0x000000011ba4e026:   mov    r9,rax
  0x000000011ba4e029:   mov    rdi,r11
  0x000000011ba4e02c:   data16 xchg ax,ax
  0x000000011ba4e02f:   call   0x0000000122ee47a0           ; ImmutableOopMap {}
                                                            ;*invokestatic parseRestOfDecimalFloatLiteral {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@199 (line 278)
                                                            ;   {static_call}
  0x000000011ba4e034:   add    rsp,0x60
  0x000000011ba4e038:   pop    rbp
  0x000000011ba4e039:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x000000011ba4e040:   ja     0x000000011ba4e1e4
  0x000000011ba4e046:   ret
  0x000000011ba4e047:   inc    edx
  0x000000011ba4e049:   mov    rcx,rdi
  0x000000011ba4e04c:   mov    r8,rbx
  0x000000011ba4e04f:   mov    r9,rax
  0x000000011ba4e052:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011ba4e057:   call   0x000000011b42e080           ; ImmutableOopMap {}
                                                            ;*invokestatic parseRestOfHexFloatingPointLiteral {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@186 (line 274)
                                                            ;   {static_call}
  0x000000011ba4e05c:   add    rsp,0x60
  0x000000011ba4e060:   pop    rbp
  0x000000011ba4e061:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x000000011ba4e068:   ja     0x000000011ba4e1fa
  0x000000011ba4e06e:   ret
  0x000000011ba4e06f:   mov    rcx,rbx
  0x000000011ba4e072:   mov    r8,rax
  0x000000011ba4e075:   mov    r9,rdi
  0x000000011ba4e078:   nop    DWORD PTR [rax+0x0]
  0x000000011ba4e07f:   call   0x000000011b42e080           ; ImmutableOopMap {}
                                                            ;*invokestatic parseInfinity {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@121 (line 265)
                                                            ;   {static_call}
  0x000000011ba4e084:   add    rsp,0x60
  0x000000011ba4e088:   pop    rbp
  0x000000011ba4e089:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x000000011ba4e090:   ja     0x000000011ba4e210
  0x000000011ba4e096:   ret
  0x000000011ba4e097:   mov    rcx,rbx
  0x000000011ba4e09a:   mov    r8,rdi
  0x000000011ba4e09d:   xchg   ax,ax
  0x000000011ba4e09f:   call   0x000000011b42e080           ; ImmutableOopMap {}
                                                            ;*invokestatic parseNaN {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@103 (line 263)
                                                            ;   {static_call}
  0x000000011ba4e0a4:   add    rsp,0x60
  0x000000011ba4e0a8:   pop    rbp
  0x000000011ba4e0a9:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x000000011ba4e0b0:   ja     0x000000011ba4e226
  0x000000011ba4e0b6:   ret
  0x000000011ba4e0b7:   mov    rdx,rdi
  0x000000011ba4e0ba:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011ba4e0bf:   call   0x000000011b42e080           ; ImmutableOopMap {}
                                                            ;*invokestatic newNumberFormatException {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@87 (line 256)
                                                            ;   {static_call}
  0x000000011ba4e0c4:   cmp    rax,QWORD PTR [rax]          ; implicit exception: dispatches to 0x000000011ba4e23c
  0x000000011ba4e0c7:   jmp    0x000000011ba4e28b
  0x000000011ba4e0cc:   nop    DWORD PTR [rax+0x0]
  0x000000011ba4e0d0:   jmp    0x000000011ba4e250           ;   {no_reloc}
  0x000000011ba4e0d5:   add    BYTE PTR [rax],al
  0x000000011ba4e0d7:   add    BYTE PTR [rax],al
  0x000000011ba4e0d9:   add    BYTE PTR [rax+0x123ba],al
  0x000000011ba4e0df:   add    BYTE PTR [rdi+rcx*1],al
  0x000000011ba4e0e2:   test   DWORD PTR [rax+0x1],edi
  0x000000011ba4e0e5:   add    BYTE PTR [rax],al
  0x000000011ba4e0e7:   mov    rax,QWORD PTR [r15+0xf0]
  0x000000011ba4e0ee:   lea    rdi,[rax+0x28]
  0x000000011ba4e0f2:   cmp    rdi,QWORD PTR [r15+0x100]
  0x000000011ba4e0f9:   ja     0x000000011ba4e25f
  0x000000011ba4e0ff:   mov    QWORD PTR [r15+0xf0],rdi
  0x000000011ba4e106:   mov    QWORD PTR [rax],0x1
  0x000000011ba4e10d:   mov    rcx,rdx
  0x000000011ba4e110:   movabs r10,0x800000000
  0x000000011ba4e11a:   sub    rcx,r10
  0x000000011ba4e11d:   mov    DWORD PTR [rax+0x8],ecx
  0x000000011ba4e120:   xor    rcx,rcx
  0x000000011ba4e123:   mov    DWORD PTR [rax+0xc],ecx
  0x000000011ba4e126:   xor    rcx,rcx
  0x000000011ba4e129:   mov    QWORD PTR [rax+0x10],rcx
  0x000000011ba4e12d:   mov    QWORD PTR [rax+0x18],rcx
  0x000000011ba4e131:   mov    QWORD PTR [rax+0x20],rcx
  0x000000011ba4e135:   movabs rdx,0x7ffc50390              ;   {oop("empty String"{0x00000007ffc50390})}
  0x000000011ba4e13f:   mov    rsi,rax
  0x000000011ba4e142:   mov    QWORD PTR [rsp+0x50],rax
  0x000000011ba4e147:   call   0x000000011b42da80           ; ImmutableOopMap {[80]=Oop }
                                                            ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@24 (line 246)
                                                            ;   {optimized virtual_call}
  0x000000011ba4e14c:   mov    rax,QWORD PTR [rsp+0x50]
  0x000000011ba4e151:   jmp    0x000000011ba4e28b
  0x000000011ba4e156:   movabs r10,0x13a82ed38              ;   {metadata({method} {0x000000013a82ed38} 'parseDouble' '([BII)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba4e160:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011ba4e165:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011ba4e16d:   call   0x000000011b4db500           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@-1 (line 240)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba4e172:   jmp    0x000000011ba4ded6
  0x000000011ba4e177:   call   0x000000011b4d5b20           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::skipWhitespace@9 (line 593)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@7 (line 244)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba4e17c:   call   0x000000011b4d5b20           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::skipWhitespace@9 (line 593)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@7 (line 244)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba4e181:   mov    QWORD PTR [rsp],rdx
  0x000000011ba4e185:   mov    QWORD PTR [rsp+0x8],rsi
  0x000000011ba4e18a:   call   0x000000011b4d4f20           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::skipWhitespace@9 (line 593)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@7 (line 244)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba4e18f:   movabs r10,0x13a82f378              ;   {metadata({method} {0x000000013a82f378} 'skipWhitespace' '([BII)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011ba4e199:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011ba4e19e:   mov    QWORD PTR [rsp],0x19
  0x000000011ba4e1a6:   call   0x000000011b4db500           ; ImmutableOopMap {rsi=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::skipWhitespace@25 (line 592)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@7 (line 244)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba4e1ab:   jmp    0x000000011ba4df34
  0x000000011ba4e1b0:   call   0x000000011b4d5b20           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@31 (line 248)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba4e1b5:   call   0x000000011b4d5b20           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@31 (line 248)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba4e1ba:   mov    QWORD PTR [rsp],rdx
  0x000000011ba4e1be:   mov    QWORD PTR [rsp+0x8],rsi
  0x000000011ba4e1c3:   call   0x000000011b4d4f20           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@31 (line 248)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba4e1c8:   mov    QWORD PTR [rsp],rdx
  0x000000011ba4e1cc:   mov    QWORD PTR [rsp+0x8],rsi
  0x000000011ba4e1d1:   call   0x000000011b4d4f20           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@72 (line 254)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba4e1d6:   mov    QWORD PTR [rsp],rdx
  0x000000011ba4e1da:   mov    QWORD PTR [rsp+0x8],rsi
  0x000000011ba4e1df:   call   0x000000011b4d4f20           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@156 (line 272)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba4e1e4:   movabs r10,0x11ba4e039              ;   {internal_word}
  0x000000011ba4e1ee:   mov    QWORD PTR [r15+0x350],r10
  0x000000011ba4e1f5:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x000000011ba4e1fa:   movabs r10,0x11ba4e061              ;   {internal_word}
  0x000000011ba4e204:   mov    QWORD PTR [r15+0x350],r10
  0x000000011ba4e20b:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x000000011ba4e210:   movabs r10,0x11ba4e089              ;   {internal_word}
  0x000000011ba4e21a:   mov    QWORD PTR [r15+0x350],r10
  0x000000011ba4e221:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x000000011ba4e226:   movabs r10,0x11ba4e0a9              ;   {internal_word}
  0x000000011ba4e230:   mov    QWORD PTR [r15+0x350],r10
  0x000000011ba4e237:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x000000011ba4e23c:   call   0x000000011b4d5b20           ; ImmutableOopMap {rax=Oop }
                                                            ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@90 (line 256)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba4e241:   movabs rdx,0x0                      ;   {metadata(NULL)}
  0x000000011ba4e24b:   mov    eax,0xa050f00
  0x000000011ba4e250:   call   0x000000011b4d9b80           ; ImmutableOopMap {}
                                                            ;*new {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@18 (line 246)
                                                            ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000000011ba4e255:   jmp    0x000000011ba4e0d0
  0x000000011ba4e25a:   call   0x000000011b4d5b20           ; ImmutableOopMap {}
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@18 (line 246)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba4e25f:   mov    rdx,rdx
  0x000000011ba4e262:   call   0x000000011b4d6700           ; ImmutableOopMap {}
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@18 (line 246)
                                                            ;   {runtime_call fast_new_instance_init_check Runtime1 stub}
  0x000000011ba4e267:   jmp    0x000000011ba4e135
  0x000000011ba4e26c:   nop
  0x000000011ba4e26d:   nop
  0x000000011ba4e26e:   mov    rax,QWORD PTR [r15+0x3c8]
  0x000000011ba4e275:   mov    QWORD PTR [r15+0x3c8],0x0
  0x000000011ba4e280:   mov    QWORD PTR [r15+0x3d0],0x0
  0x000000011ba4e28b:   add    rsp,0x60
  0x000000011ba4e28f:   pop    rbp
  0x000000011ba4e290:   jmp    0x000000011b446f00           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba4e295:   hlt
  0x000000011ba4e296:   hlt
  0x000000011ba4e297:   hlt
  0x000000011ba4e298:   hlt
  0x000000011ba4e299:   hlt
  0x000000011ba4e29a:   hlt
  0x000000011ba4e29b:   hlt
  0x000000011ba4e29c:   hlt
  0x000000011ba4e29d:   hlt
  0x000000011ba4e29e:   hlt
  0x000000011ba4e29f:   hlt
[Stub Code]
  0x000000011ba4e2a0:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x000000011ba4e2a5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011ba4e2af:   jmp    0x000000011ba4e2af           ;   {runtime_call}
  0x000000011ba4e2b4:   nop
  0x000000011ba4e2b5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011ba4e2bf:   jmp    0x000000011ba4e2bf           ;   {runtime_call}
  0x000000011ba4e2c4:   nop
  0x000000011ba4e2c5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011ba4e2cf:   jmp    0x000000011ba4e2cf           ;   {runtime_call}
  0x000000011ba4e2d4:   nop
  0x000000011ba4e2d5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011ba4e2df:   jmp    0x000000011ba4e2df           ;   {runtime_call}
  0x000000011ba4e2e4:   nop
  0x000000011ba4e2e5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011ba4e2ef:   jmp    0x000000011ba4e2ef           ;   {runtime_call}
  0x000000011ba4e2f4:   nop
  0x000000011ba4e2f5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011ba4e2ff:   jmp    0x000000011ba4e2ff           ;   {runtime_call}
[Exception Handler]
  0x000000011ba4e304:   call   0x000000011b4d7900           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba4e309:   movabs rdi,0x10db45fc1              ;   {external_word}
  0x000000011ba4e313:   and    rsp,0xfffffffffffffff0
  0x000000011ba4e317:   call   0x000000010d7f0290           ;   {runtime_call _ZN14MacroAssembler7debug64EPcxPx}
  0x000000011ba4e31c:   hlt
[Deopt Handler Code]
  0x000000011ba4e31d:   movabs r10,0x11ba4e31d              ;   {section_word}
  0x000000011ba4e327:   push   r10
  0x000000011ba4e329:   jmp    0x000000011b4333a0           ;   {runtime_call DeoptimizationBlob}
  0x000000011ba4e32e:   hlt
  0x000000011ba4e32f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     401  611       4       ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble (12 bytes)
 total in heap  [0x0000000122ef2790,0x0000000122ef3028] = 2200
 relocation     [0x0000000122ef28f0,0x0000000122ef2930] = 64
 main code      [0x0000000122ef2940,0x0000000122ef2c00] = 704
 stub code      [0x0000000122ef2c00,0x0000000122ef2c28] = 40
 oops           [0x0000000122ef2c28,0x0000000122ef2c38] = 16
 metadata       [0x0000000122ef2c38,0x0000000122ef2c80] = 72
 scopes data    [0x0000000122ef2c80,0x0000000122ef2ec0] = 576
 scopes pcs     [0x0000000122ef2ec0,0x0000000122ef2ff0] = 304
 dependencies   [0x0000000122ef2ff0,0x0000000122ef2ff8] = 8
 handler table  [0x0000000122ef2ff8,0x0000000122ef3010] = 24
 nul chk table  [0x0000000122ef3010,0x0000000122ef3028] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013a80df08} 'parseDouble' '(Ljava/lang/CharSequence;)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser'
  # parm0:    rsi:rsi   = 'java/lang/CharSequence'
  #           [sp+0x40]  (sp of caller)
  0x0000000122ef2940:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000122ef2947:   push   rbp
  0x0000000122ef2948:   sub    rsp,0x30
  0x0000000122ef294c:   mov    r10d,DWORD PTR [rsi+0x8]     ; implicit exception: dispatches to 0x0000000122ef2bb8
  0x0000000122ef2950:   cmp    r10d,0x8340                  ;   {metadata('java/lang/String')}
  0x0000000122ef2957:   jne    0x0000000122ef2a42
  0x0000000122ef295d:   mov    r11d,DWORD PTR [rsi+0x14]
  0x0000000122ef2961:   mov    r10d,DWORD PTR [r12+r11*8+0xc]; implicit exception: dispatches to 0x0000000122ef2bc8
  0x0000000122ef2966:   movsx  ecx,BYTE PTR [rsi+0x10]
  0x0000000122ef296a:   mov    r8d,r10d
  0x0000000122ef296d:   sar    r8d,cl
  0x0000000122ef2970:   test   r8d,r8d
  0x0000000122ef2973:   jle    0x0000000122ef2998
  0x0000000122ef2975:   test   ecx,ecx
  0x0000000122ef2977:   jne    0x0000000122ef2b70
  0x0000000122ef297d:   data16 xchg ax,ax
  0x0000000122ef2980:   test   r10d,r10d
  0x0000000122ef2983:   jbe    0x0000000122ef2a74
  0x0000000122ef2989:   movzx  ebp,BYTE PTR [r12+r11*8+0x10]
  0x0000000122ef298f:   cmp    ebp,0x20
  0x0000000122ef2992:   jle    0x0000000122ef2b90
  0x0000000122ef2998:   test   r8d,r8d
  0x0000000122ef299b:   nop    DWORD PTR [rax+rax*1+0x0]
  0x0000000122ef29a0:   je     0x0000000122ef2ab0
  0x0000000122ef29a6:   test   ecx,ecx
  0x0000000122ef29a8:   jne    0x0000000122ef2a94
  0x0000000122ef29ae:   cmp    r10d,0x1
  0x0000000122ef29b2:   jbe    0x0000000122ef2a54
  0x0000000122ef29b8:   movzx  ebp,BYTE PTR [r12+r11*8+0x10]
  0x0000000122ef29be:   xchg   ax,ax
  0x0000000122ef29c0:   cmp    ebp,0x2d
  0x0000000122ef29c3:   je     0x0000000122ef2ac8
  0x0000000122ef29c9:   cmp    ebp,0x2b
  0x0000000122ef29cc:   je     0x0000000122ef2ae0
  0x0000000122ef29d2:   cmp    ebp,0x4e
  0x0000000122ef29d5:   je     0x0000000122ef2af8
  0x0000000122ef29db:   nop    DWORD PTR [rax+rax*1+0x0]
  0x0000000122ef29e0:   cmp    ebp,0x49
  0x0000000122ef29e3:   je     0x0000000122ef2b10
  0x0000000122ef29e9:   cmp    ebp,0x30
  0x0000000122ef29ec:   jne    0x0000000122ef2a3e
  0x0000000122ef29f2:   cmp    r8d,0x1
  0x0000000122ef29f6:   jle    0x0000000122ef2b28
  0x0000000122ef29fc:   movzx  ebp,BYTE PTR [r12+r11*8+0x11]
  0x0000000122ef2a02:   cmp    ebp,0x78
  0x0000000122ef2a05:   je     0x0000000122ef2b40
  0x0000000122ef2a0b:   cmp    ebp,0x58
  0x0000000122ef2a0e:   je     0x0000000122ef2b58
  0x0000000122ef2a14:   mov    edx,0x1
  0x0000000122ef2a19:   xor    ecx,ecx
  0x0000000122ef2a1b:   xor    r9d,r9d
  0x0000000122ef2a1e:   mov    edi,edx
  0x0000000122ef2a20:   vzeroupper
  0x0000000122ef2a23:   call   0x0000000122ee0e20           ; ImmutableOopMap {}
                                                            ;*invokestatic parseRestOfDecimalFloatLiteral {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@209 (line 255)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@8 (line 99)
                                                            ;   {static_call}
  0x0000000122ef2a28:   vzeroupper
  0x0000000122ef2a2b:   add    rsp,0x30
  0x0000000122ef2a2f:   pop    rbp
  0x0000000122ef2a30:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x0000000122ef2a37:   ja     0x0000000122ef2bd8
  0x0000000122ef2a3d:   ret
  0x0000000122ef2a3e:   xor    edx,edx
  0x0000000122ef2a40:   jmp    0x0000000122ef2a19
  0x0000000122ef2a42:   mov    QWORD PTR [rsp],rsi
  0x0000000122ef2a46:   mov    esi,0xffffffde
  0x0000000122ef2a4b:   nop
  0x0000000122ef2a4c:   vzeroupper
  0x0000000122ef2a4f:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@3 (line 99)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef2a54:   mov    rbp,rsi
  0x0000000122ef2a57:   mov    DWORD PTR [rsp],r8d
  0x0000000122ef2a5b:   mov    DWORD PTR [rsp+0x4],r11d
  0x0000000122ef2a60:   mov    DWORD PTR [rsp+0x8],r10d
  0x0000000122ef2a65:   mov    esi,0xffffffe4
  0x0000000122ef2a6a:   xchg   ax,ax
  0x0000000122ef2a6c:   vzeroupper
  0x0000000122ef2a6f:   call   0x000000011b433000           ; ImmutableOopMap {rbp=Oop [4]=NarrowOop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::checkIndex@5 (line 4554)
                                                            ; - java.lang.StringLatin1::charAt@3 (line 46)
                                                            ; - java.lang.String::charAt@12 (line 1512)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@31 (line 225)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@8 (line 99)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef2a74:   mov    QWORD PTR [rsp],rsi
  0x0000000122ef2a78:   mov    DWORD PTR [rsp+0xc],r8d
  0x0000000122ef2a7d:   mov    DWORD PTR [rsp+0x10],r11d
  0x0000000122ef2a82:   mov    DWORD PTR [rsp+0x14],r10d
  0x0000000122ef2a87:   mov    esi,0xffffffe4
  0x0000000122ef2a8c:   vzeroupper
  0x0000000122ef2a8f:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop [16]=NarrowOop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::checkIndex@5 (line 4554)
                                                            ; - java.lang.StringLatin1::charAt@3 (line 46)
                                                            ; - java.lang.String::charAt@12 (line 1512)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@9 (line 550)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@7 (line 221)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@8 (line 99)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef2a94:   mov    QWORD PTR [rsp],rsi
  0x0000000122ef2a98:   mov    DWORD PTR [rsp+0x8],r8d
  0x0000000122ef2a9d:   mov    DWORD PTR [rsp+0xc],ecx
  0x0000000122ef2aa1:   mov    esi,0xffffff45
  0x0000000122ef2aa6:   xchg   ax,ax
  0x0000000122ef2aa8:   vzeroupper
  0x0000000122ef2aab:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.String::isLatin1@10 (line 4543)
                                                            ; - java.lang.String::charAt@1 (line 1511)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@31 (line 225)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@8 (line 99)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef2ab0:   mov    rbp,rsi
  0x0000000122ef2ab3:   mov    DWORD PTR [rsp+0x4],r8d
  0x0000000122ef2ab8:   mov    esi,0xffffff45
  0x0000000122ef2abd:   data16 xchg ax,ax
  0x0000000122ef2ac0:   vzeroupper
  0x0000000122ef2ac3:   call   0x000000011b433000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@15 (line 222)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@8 (line 99)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef2ac8:   mov    QWORD PTR [rsp],rsi
  0x0000000122ef2acc:   mov    DWORD PTR [rsp+0x8],r8d
  0x0000000122ef2ad1:   mov    esi,0xffffff45
  0x0000000122ef2ad6:   xchg   ax,ax
  0x0000000122ef2ad8:   vzeroupper
  0x0000000122ef2adb:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@42 (line 229)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@8 (line 99)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef2ae0:   mov    QWORD PTR [rsp],rsi
  0x0000000122ef2ae4:   mov    DWORD PTR [rsp+0x8],r8d
  0x0000000122ef2ae9:   mov    esi,0xffffff45
  0x0000000122ef2aee:   xchg   ax,ax
  0x0000000122ef2af0:   vzeroupper
  0x0000000122ef2af3:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@61 (line 230)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@8 (line 99)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef2af8:   mov    QWORD PTR [rsp],rsi
  0x0000000122ef2afc:   mov    DWORD PTR [rsp+0x8],r8d
  0x0000000122ef2b01:   mov    esi,0xffffff45
  0x0000000122ef2b06:   xchg   ax,ax
  0x0000000122ef2b08:   vzeroupper
  0x0000000122ef2b0b:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@103 (line 239)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@8 (line 99)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef2b10:   mov    QWORD PTR [rsp],rsi
  0x0000000122ef2b14:   mov    DWORD PTR [rsp+0x8],r8d
  0x0000000122ef2b19:   mov    esi,0xffffff45
  0x0000000122ef2b1e:   xchg   ax,ax
  0x0000000122ef2b20:   vzeroupper
  0x0000000122ef2b23:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@118 (line 241)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@8 (line 99)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef2b28:   mov    rbp,rsi
  0x0000000122ef2b2b:   mov    DWORD PTR [rsp+0x4],r8d
  0x0000000122ef2b30:   mov    esi,0xffffff45
  0x0000000122ef2b35:   data16 xchg ax,ax
  0x0000000122ef2b38:   vzeroupper
  0x0000000122ef2b3b:   call   0x000000011b433000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@156 (line 249)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@8 (line 99)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef2b40:   mov    QWORD PTR [rsp],rsi
  0x0000000122ef2b44:   mov    DWORD PTR [rsp+0x8],r8d
  0x0000000122ef2b49:   mov    esi,0xffffff45
  0x0000000122ef2b4e:   xchg   ax,ax
  0x0000000122ef2b50:   vzeroupper
  0x0000000122ef2b53:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@177 (line 250)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@8 (line 99)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef2b58:   mov    QWORD PTR [rsp],rsi
  0x0000000122ef2b5c:   mov    DWORD PTR [rsp+0x8],r8d
  0x0000000122ef2b61:   mov    esi,0xffffff45
  0x0000000122ef2b66:   xchg   ax,ax
  0x0000000122ef2b68:   vzeroupper
  0x0000000122ef2b6b:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@184 (line 250)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@8 (line 99)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef2b70:   mov    QWORD PTR [rsp],rsi
  0x0000000122ef2b74:   mov    QWORD PTR [rsp+0x8],rsi
  0x0000000122ef2b79:   mov    DWORD PTR [rsp+0x14],r8d
  0x0000000122ef2b7e:   mov    DWORD PTR [rsp+0x18],ecx
  0x0000000122ef2b82:   mov    esi,0xffffff45
  0x0000000122ef2b87:   nop
  0x0000000122ef2b88:   vzeroupper
  0x0000000122ef2b8b:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop [8]=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.String::isLatin1@10 (line 4543)
                                                            ; - java.lang.String::charAt@1 (line 1511)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@9 (line 550)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@7 (line 221)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@8 (line 99)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef2b90:   mov    QWORD PTR [rsp+0x8],rsi
  0x0000000122ef2b95:   mov    DWORD PTR [rsp+0x14],r8d
  0x0000000122ef2b9a:   mov    esi,0xffffff45
  0x0000000122ef2b9f:   nop
  0x0000000122ef2ba0:   vzeroupper
  0x0000000122ef2ba3:   call   0x000000011b433000           ; ImmutableOopMap {[8]=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@16 (line 550)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@7 (line 221)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@8 (line 99)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef2ba8:   mov    rsi,rax
  0x0000000122ef2bab:   vzeroupper
  0x0000000122ef2bae:   add    rsp,0x30
  0x0000000122ef2bb2:   pop    rbp
  0x0000000122ef2bb3:   jmp    0x000000011b4e2700           ;   {runtime_call _rethrow_Java}
  0x0000000122ef2bb8:   mov    esi,0xfffffff6
  0x0000000122ef2bbd:   data16 xchg ax,ax
  0x0000000122ef2bc0:   vzeroupper
  0x0000000122ef2bc3:   call   0x000000011b433000           ; ImmutableOopMap {}
                                                            ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@3 (line 99)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef2bc8:   mov    esi,0xfffffff6
  0x0000000122ef2bcd:   data16 xchg ax,ax
  0x0000000122ef2bd0:   vzeroupper
  0x0000000122ef2bd3:   call   0x000000011b433000           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::length@4 (line 1476)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@3 (line 99)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef2bd8:   movabs r10,0x122ef2a30              ;   {internal_word}
  0x0000000122ef2be2:   mov    QWORD PTR [r15+0x350],r10
  0x0000000122ef2be9:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x0000000122ef2bee:   hlt
  0x0000000122ef2bef:   hlt
  0x0000000122ef2bf0:   hlt
  0x0000000122ef2bf1:   hlt
  0x0000000122ef2bf2:   hlt
  0x0000000122ef2bf3:   hlt
  0x0000000122ef2bf4:   hlt
  0x0000000122ef2bf5:   hlt
  0x0000000122ef2bf6:   hlt
  0x0000000122ef2bf7:   hlt
  0x0000000122ef2bf8:   hlt
  0x0000000122ef2bf9:   hlt
  0x0000000122ef2bfa:   hlt
  0x0000000122ef2bfb:   hlt
  0x0000000122ef2bfc:   hlt
  0x0000000122ef2bfd:   hlt
  0x0000000122ef2bfe:   hlt
  0x0000000122ef2bff:   hlt
[Stub Code]
  0x0000000122ef2c00:   movabs rbx,0x0                      ;   {no_reloc}
  0x0000000122ef2c0a:   jmp    0x0000000122ef2c0a           ;   {runtime_call}
[Exception Handler]
  0x0000000122ef2c0f:   jmp    0x000000011b447880           ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000122ef2c14:   call   0x0000000122ef2c19
  0x0000000122ef2c19:   sub    QWORD PTR [rsp],0x5
  0x0000000122ef2c1e:   jmp    0x000000011b4333a0           ;   {runtime_call DeoptimizationBlob}
  0x0000000122ef2c23:   hlt
  0x0000000122ef2c24:   hlt
  0x0000000122ef2c25:   hlt
  0x0000000122ef2c26:   hlt
  0x0000000122ef2c27:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     410  612       4       ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble (8 bytes)
 total in heap  [0x0000000122ef3090,0x0000000122ef36b8] = 1576
 relocation     [0x0000000122ef31f0,0x0000000122ef3228] = 56
 main code      [0x0000000122ef3240,0x0000000122ef3400] = 448
 stub code      [0x0000000122ef3400,0x0000000122ef3428] = 40
 oops           [0x0000000122ef3428,0x0000000122ef3430] = 8
 metadata       [0x0000000122ef3430,0x0000000122ef3448] = 24
 scopes data    [0x0000000122ef3448,0x0000000122ef35a8] = 352
 scopes pcs     [0x0000000122ef35a8,0x0000000122ef3688] = 224
 dependencies   [0x0000000122ef3688,0x0000000122ef3690] = 8
 handler table  [0x0000000122ef3690,0x0000000122ef36a8] = 24
 nul chk table  [0x0000000122ef36a8,0x0000000122ef36b8] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013a82ece0} 'parseDouble' '([B)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray'
  # parm0:    rsi:rsi   = '[B'
  #           [sp+0x40]  (sp of caller)
  0x0000000122ef3240:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000122ef3247:   push   rbp
  0x0000000122ef3248:   sub    rsp,0x30
  0x0000000122ef324c:   mov    r8d,DWORD PTR [rsi+0xc]      ; implicit exception: dispatches to 0x0000000122ef33dd
  0x0000000122ef3250:   test   r8d,r8d
  0x0000000122ef3253:   jbe    0x0000000122ef32fb
  0x0000000122ef3259:   movzx  ebp,BYTE PTR [rsi+0x10]
  0x0000000122ef325d:   data16 xchg ax,ax
  0x0000000122ef3260:   cmp    ebp,0x20
  0x0000000122ef3263:   jle    0x0000000122ef3328
  0x0000000122ef3269:   cmp    r8d,0x1
  0x0000000122ef326d:   jbe    0x0000000122ef3314
  0x0000000122ef3273:   movsx  ebp,BYTE PTR [rsi+0x10]
  0x0000000122ef3277:   cmp    ebp,0x2d
  0x0000000122ef327a:   nop    WORD PTR [rax+rax*1+0x0]
  0x0000000122ef3280:   je     0x0000000122ef3344
  0x0000000122ef3286:   cmp    ebp,0x2b
  0x0000000122ef3289:   je     0x0000000122ef3358
  0x0000000122ef328f:   cmp    ebp,0x4e
  0x0000000122ef3292:   je     0x0000000122ef336c
  0x0000000122ef3298:   cmp    ebp,0x49
  0x0000000122ef329b:   nop    DWORD PTR [rax+rax*1+0x0]
  0x0000000122ef32a0:   je     0x0000000122ef3380
  0x0000000122ef32a6:   cmp    ebp,0x30
  0x0000000122ef32a9:   jne    0x0000000122ef32f7
  0x0000000122ef32af:   cmp    r8d,0x1
  0x0000000122ef32b3:   jle    0x0000000122ef3394
  0x0000000122ef32b9:   movsx  ebp,BYTE PTR [rsi+0x11]
  0x0000000122ef32bd:   data16 xchg ax,ax
  0x0000000122ef32c0:   cmp    ebp,0x78
  0x0000000122ef32c3:   je     0x0000000122ef33a8
  0x0000000122ef32c9:   cmp    ebp,0x58
  0x0000000122ef32cc:   je     0x0000000122ef33bc
  0x0000000122ef32d2:   mov    edx,0x1
  0x0000000122ef32d7:   xor    ecx,ecx
  0x0000000122ef32d9:   xor    r9d,r9d
  0x0000000122ef32dc:   mov    edi,edx
  0x0000000122ef32de:   nop
  0x0000000122ef32df:   call   0x0000000122ee47a0           ; ImmutableOopMap {}
                                                            ;*invokestatic parseRestOfDecimalFloatLiteral {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@199 (line 278)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@4 (line 121)
                                                            ;   {static_call}
  0x0000000122ef32e4:   add    rsp,0x30
  0x0000000122ef32e8:   pop    rbp
  0x0000000122ef32e9:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x0000000122ef32f0:   ja     0x0000000122ef33e8
  0x0000000122ef32f6:   ret
  0x0000000122ef32f7:   xor    edx,edx
  0x0000000122ef32f9:   jmp    0x0000000122ef32d7
  0x0000000122ef32fb:   mov    rbp,rsi
  0x0000000122ef32fe:   mov    DWORD PTR [rsp+0x4],r8d
  0x0000000122ef3303:   mov    DWORD PTR [rsp+0x8],r8d
  0x0000000122ef3308:   mov    esi,0xffffff45
  0x0000000122ef330d:   xchg   ax,ax
  0x0000000122ef330f:   call   0x000000011b433000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@15 (line 245)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@4 (line 121)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef3314:   mov    DWORD PTR [rsp+0x4],r8d
  0x0000000122ef3319:   mov    QWORD PTR [rsp+0x8],rsi
  0x0000000122ef331e:   mov    esi,0xffffffe4
  0x0000000122ef3323:   call   0x000000011b433000           ; ImmutableOopMap {[8]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@31 (line 248)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@4 (line 121)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef3328:   mov    DWORD PTR [rsp+0xc],r8d
  0x0000000122ef332d:   mov    QWORD PTR [rsp+0x10],rsi
  0x0000000122ef3332:   mov    DWORD PTR [rsp+0x18],r8d
  0x0000000122ef3337:   mov    esi,0xffffff45
  0x0000000122ef333c:   data16 xchg ax,ax
  0x0000000122ef333f:   call   0x000000011b433000           ; ImmutableOopMap {[16]=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::skipWhitespace@16 (line 593)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@7 (line 244)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@4 (line 121)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef3344:   mov    QWORD PTR [rsp],rsi
  0x0000000122ef3348:   mov    DWORD PTR [rsp+0xc],r8d
  0x0000000122ef334d:   mov    esi,0xffffff45
  0x0000000122ef3352:   nop
  0x0000000122ef3353:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@38 (line 252)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@4 (line 121)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef3358:   mov    QWORD PTR [rsp],rsi
  0x0000000122ef335c:   mov    DWORD PTR [rsp+0xc],r8d
  0x0000000122ef3361:   mov    esi,0xffffff45
  0x0000000122ef3366:   nop
  0x0000000122ef3367:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@57 (line 253)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@4 (line 121)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef336c:   mov    QWORD PTR [rsp],rsi
  0x0000000122ef3370:   mov    DWORD PTR [rsp+0x8],r8d
  0x0000000122ef3375:   mov    esi,0xffffff45
  0x0000000122ef337a:   nop
  0x0000000122ef337b:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@95 (line 262)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@4 (line 121)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef3380:   mov    QWORD PTR [rsp],rsi
  0x0000000122ef3384:   mov    DWORD PTR [rsp+0x8],r8d
  0x0000000122ef3389:   mov    esi,0xffffff45
  0x0000000122ef338e:   nop
  0x0000000122ef338f:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@111 (line 264)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@4 (line 121)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef3394:   mov    rbp,rsi
  0x0000000122ef3397:   mov    DWORD PTR [rsp+0x4],r8d
  0x0000000122ef339c:   mov    esi,0xffffff45
  0x0000000122ef33a1:   xchg   ax,ax
  0x0000000122ef33a3:   call   0x000000011b433000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@150 (line 272)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@4 (line 121)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef33a8:   mov    QWORD PTR [rsp],rsi
  0x0000000122ef33ac:   mov    DWORD PTR [rsp+0x8],r8d
  0x0000000122ef33b1:   mov    esi,0xffffff45
  0x0000000122ef33b6:   nop
  0x0000000122ef33b7:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@167 (line 273)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@4 (line 121)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef33bc:   mov    QWORD PTR [rsp],rsi
  0x0000000122ef33c0:   mov    DWORD PTR [rsp+0x8],r8d
  0x0000000122ef33c5:   mov    esi,0xffffff45
  0x0000000122ef33ca:   nop
  0x0000000122ef33cb:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@174 (line 273)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@4 (line 121)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef33d0:   mov    rsi,rax
  0x0000000122ef33d3:   add    rsp,0x30
  0x0000000122ef33d7:   pop    rbp
  0x0000000122ef33d8:   jmp    0x000000011b4e2700           ;   {runtime_call _rethrow_Java}
  0x0000000122ef33dd:   mov    esi,0xfffffff6
  0x0000000122ef33e2:   nop
  0x0000000122ef33e3:   call   0x000000011b433000           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@3 (line 121)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef33e8:   movabs r10,0x122ef32e9              ;   {internal_word}
  0x0000000122ef33f2:   mov    QWORD PTR [r15+0x350],r10
  0x0000000122ef33f9:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x0000000122ef33fe:   hlt
  0x0000000122ef33ff:   hlt
[Stub Code]
  0x0000000122ef3400:   movabs rbx,0x0                      ;   {no_reloc}
  0x0000000122ef340a:   jmp    0x0000000122ef340a           ;   {runtime_call}
[Exception Handler]
  0x0000000122ef340f:   jmp    0x000000011b447880           ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000122ef3414:   call   0x0000000122ef3419
  0x0000000122ef3419:   sub    QWORD PTR [rsp],0x5
  0x0000000122ef341e:   jmp    0x000000011b4333a0           ;   {runtime_call DeoptimizationBlob}
  0x0000000122ef3423:   hlt
  0x0000000122ef3424:   hlt
  0x0000000122ef3425:   hlt
  0x0000000122ef3426:   hlt
  0x0000000122ef3427:   hlt
--------------------------------------------------------------------------------
[/Disassembly]
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     414  614       4       ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble (203 bytes)
 total in heap  [0x0000000122ef3710,0x0000000122ef3eb0] = 1952
 relocation     [0x0000000122ef3870,0x0000000122ef38a8] = 56
 main code      [0x0000000122ef38c0,0x0000000122ef3b60] = 672
 stub code      [0x0000000122ef3b60,0x0000000122ef3b88] = 40
 oops           [0x0000000122ef3b88,0x0000000122ef3b90] = 8
 metadata       [0x0000000122ef3b90,0x0000000122ef3ba0] = 16
 scopes data    [0x0000000122ef3ba0,0x0000000122ef3d68] = 456
 scopes pcs     [0x0000000122ef3d68,0x0000000122ef3e78] = 272
 dependencies   [0x0000000122ef3e78,0x0000000122ef3e80] = 8
 handler table  [0x0000000122ef3e80,0x0000000122ef3e98] = 24
 nul chk table  [0x0000000122ef3e98,0x0000000122ef3eb0] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013a82ed38} 'parseDouble' '([BII)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x50]  (sp of caller)
  0x0000000122ef38c0:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000122ef38c7:   push   rbp
  0x0000000122ef38c8:   sub    rsp,0x40
  0x0000000122ef38cc:   mov    r8d,edx
  0x0000000122ef38cf:   add    r8d,ecx
  0x0000000122ef38d2:   movsxd r11,edx
  0x0000000122ef38d5:   mov    r10d,edx
  0x0000000122ef38d8:   cmp    edx,r8d
  0x0000000122ef38db:   jge    0x0000000122ef38fc
  0x0000000122ef38dd:   data16 xchg ax,ax
  0x0000000122ef38e0:   mov    r9d,DWORD PTR [rsi+0xc]      ; implicit exception: dispatches to 0x0000000122ef3b2c
  0x0000000122ef38e4:   cmp    edx,r9d
  0x0000000122ef38e7:   jae    0x0000000122ef39f0
  0x0000000122ef38ed:   movzx  ebp,BYTE PTR [rsi+r11*1+0x10]
  0x0000000122ef38f3:   cmp    ebp,0x20
  0x0000000122ef38f6:   jle    0x0000000122ef3af4
  0x0000000122ef38fc:   nop    DWORD PTR [rax+0x0]
  0x0000000122ef3900:   cmp    edx,r8d
  0x0000000122ef3903:   je     0x0000000122ef3a18
  0x0000000122ef3909:   mov    ebx,DWORD PTR [rsi+0xc]      ; implicit exception: dispatches to 0x0000000122ef3b1d
  0x0000000122ef390c:   cmp    edx,ebx
  0x0000000122ef390e:   jae    0x0000000122ef39b3
  0x0000000122ef3914:   movsx  ebp,BYTE PTR [rsi+r11*1+0x10]
  0x0000000122ef391a:   nop    WORD PTR [rax+rax*1+0x0]
  0x0000000122ef3920:   cmp    ebp,0x2d
  0x0000000122ef3923:   je     0x0000000122ef3a38
  0x0000000122ef3929:   cmp    ebp,0x2b
  0x0000000122ef392c:   je     0x0000000122ef3a54
  0x0000000122ef3932:   cmp    ebp,0x4e
  0x0000000122ef3935:   je     0x0000000122ef3a70
  0x0000000122ef393b:   nop    DWORD PTR [rax+rax*1+0x0]
  0x0000000122ef3940:   cmp    ebp,0x49
  0x0000000122ef3943:   je     0x0000000122ef3a88
  0x0000000122ef3949:   xor    r9d,r9d
  0x0000000122ef394c:   cmp    ebp,0x30
  0x0000000122ef394f:   jne    0x0000000122ef39af
  0x0000000122ef3955:   inc    edx
  0x0000000122ef3957:   cmp    edx,r8d
  0x0000000122ef395a:   nop    WORD PTR [rax+rax*1+0x0]
  0x0000000122ef3960:   jge    0x0000000122ef3aa0
  0x0000000122ef3966:   cmp    edx,ebx
  0x0000000122ef3968:   jae    0x0000000122ef39d4
  0x0000000122ef396e:   movsxd r11,r10d
  0x0000000122ef3971:   movsx  ebp,BYTE PTR [rsi+r11*1+0x11]
  0x0000000122ef3977:   cmp    ebp,0x78
  0x0000000122ef397a:   nop    WORD PTR [rax+rax*1+0x0]
  0x0000000122ef3980:   je     0x0000000122ef3abc
  0x0000000122ef3986:   cmp    ebp,0x58
  0x0000000122ef3989:   je     0x0000000122ef3ad8
  0x0000000122ef398f:   mov    edi,0x1
  0x0000000122ef3994:   mov    ecx,r10d
  0x0000000122ef3997:   call   0x000000011b42e080           ; ImmutableOopMap {}
                                                            ;*invokestatic parseRestOfDecimalFloatLiteral {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@199 (line 278)
                                                            ;   {static_call}
  0x0000000122ef399c:   add    rsp,0x40
  0x0000000122ef39a0:   pop    rbp
  0x0000000122ef39a1:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x0000000122ef39a8:   ja     0x0000000122ef3b38
  0x0000000122ef39ae:   ret
  0x0000000122ef39af:   xor    edi,edi
  0x0000000122ef39b1:   jmp    0x0000000122ef3994
  0x0000000122ef39b3:   mov    DWORD PTR [rsp+0x4],ecx
  0x0000000122ef39b7:   mov    DWORD PTR [rsp+0x8],r8d
  0x0000000122ef39bc:   mov    DWORD PTR [rsp+0xc],edx
  0x0000000122ef39c0:   mov    QWORD PTR [rsp+0x10],rsi
  0x0000000122ef39c5:   mov    DWORD PTR [rsp+0x18],edx
  0x0000000122ef39c9:   mov    esi,0xffffffe4
  0x0000000122ef39ce:   nop
  0x0000000122ef39cf:   call   0x000000011b433000           ; ImmutableOopMap {[16]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@31 (line 248)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef39d4:   mov    DWORD PTR [rsp],r10d
  0x0000000122ef39d8:   mov    DWORD PTR [rsp+0x4],r8d
  0x0000000122ef39dd:   mov    QWORD PTR [rsp+0x8],rsi
  0x0000000122ef39e2:   mov    DWORD PTR [rsp+0x14],edx
  0x0000000122ef39e6:   mov    esi,0xffffffe4
  0x0000000122ef39eb:   call   0x000000011b433000           ; ImmutableOopMap {[8]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@156 (line 272)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef39f0:   mov    DWORD PTR [rsp+0x4],ecx
  0x0000000122ef39f4:   mov    QWORD PTR [rsp+0x10],rsi
  0x0000000122ef39f9:   mov    DWORD PTR [rsp+0xc],r8d
  0x0000000122ef39fe:   mov    DWORD PTR [rsp+0x18],edx
  0x0000000122ef3a02:   mov    QWORD PTR [rsp+0x20],rsi
  0x0000000122ef3a07:   mov    DWORD PTR [rsp+0x1c],edx
  0x0000000122ef3a0b:   mov    esi,0xffffffe4
  0x0000000122ef3a10:   data16 xchg ax,ax
  0x0000000122ef3a13:   call   0x000000011b433000           ; ImmutableOopMap {[16]=Oop [32]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::skipWhitespace@9 (line 593)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@7 (line 244)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef3a18:   mov    rbp,rsi
  0x0000000122ef3a1b:   mov    DWORD PTR [rsp+0x4],ecx
  0x0000000122ef3a1f:   mov    DWORD PTR [rsp+0xc],edx
  0x0000000122ef3a23:   mov    DWORD PTR [rsp+0x10],edx
  0x0000000122ef3a27:   mov    DWORD PTR [rsp+0x14],r8d
  0x0000000122ef3a2c:   mov    esi,0xffffff45
  0x0000000122ef3a31:   xchg   ax,ax
  0x0000000122ef3a33:   call   0x000000011b433000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@15 (line 245)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef3a38:   mov    QWORD PTR [rsp],rsi
  0x0000000122ef3a3c:   mov    DWORD PTR [rsp+0xc],ecx
  0x0000000122ef3a40:   mov    DWORD PTR [rsp+0x10],r8d
  0x0000000122ef3a45:   mov    DWORD PTR [rsp+0x14],edx
  0x0000000122ef3a49:   mov    esi,0xffffff45
  0x0000000122ef3a4e:   nop
  0x0000000122ef3a4f:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@38 (line 252)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef3a54:   mov    QWORD PTR [rsp],rsi
  0x0000000122ef3a58:   mov    DWORD PTR [rsp+0xc],ecx
  0x0000000122ef3a5c:   mov    DWORD PTR [rsp+0x10],r8d
  0x0000000122ef3a61:   mov    DWORD PTR [rsp+0x14],edx
  0x0000000122ef3a65:   mov    esi,0xffffff45
  0x0000000122ef3a6a:   nop
  0x0000000122ef3a6b:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@57 (line 253)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef3a70:   mov    QWORD PTR [rsp],rsi
  0x0000000122ef3a74:   mov    DWORD PTR [rsp+0xc],r8d
  0x0000000122ef3a79:   mov    DWORD PTR [rsp+0x10],edx
  0x0000000122ef3a7d:   mov    esi,0xffffff45
  0x0000000122ef3a82:   nop
  0x0000000122ef3a83:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@95 (line 262)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef3a88:   mov    QWORD PTR [rsp],rsi
  0x0000000122ef3a8c:   mov    DWORD PTR [rsp+0xc],r8d
  0x0000000122ef3a91:   mov    DWORD PTR [rsp+0x10],edx
  0x0000000122ef3a95:   mov    esi,0xffffff45
  0x0000000122ef3a9a:   nop
  0x0000000122ef3a9b:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@111 (line 264)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef3aa0:   mov    rbp,rsi
  0x0000000122ef3aa3:   mov    DWORD PTR [rsp],r10d
  0x0000000122ef3aa7:   mov    DWORD PTR [rsp+0x8],r8d
  0x0000000122ef3aac:   mov    DWORD PTR [rsp+0x10],edx
  0x0000000122ef3ab0:   mov    esi,0xffffff45
  0x0000000122ef3ab5:   xchg   ax,ax
  0x0000000122ef3ab7:   call   0x000000011b433000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@150 (line 272)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef3abc:   mov    QWORD PTR [rsp],rsi
  0x0000000122ef3ac0:   mov    DWORD PTR [rsp+0x8],r10d
  0x0000000122ef3ac5:   mov    DWORD PTR [rsp+0xc],r8d
  0x0000000122ef3aca:   mov    DWORD PTR [rsp+0x10],edx
  0x0000000122ef3ace:   mov    esi,0xffffff45
  0x0000000122ef3ad3:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@167 (line 273)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef3ad8:   mov    QWORD PTR [rsp],rsi
  0x0000000122ef3adc:   mov    DWORD PTR [rsp+0x8],r10d
  0x0000000122ef3ae1:   mov    DWORD PTR [rsp+0xc],r8d
  0x0000000122ef3ae6:   mov    DWORD PTR [rsp+0x10],edx
  0x0000000122ef3aea:   mov    esi,0xffffff45
  0x0000000122ef3aef:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@174 (line 273)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef3af4:   mov    DWORD PTR [rsp+0xc],ecx
  0x0000000122ef3af8:   mov    QWORD PTR [rsp+0x18],rsi
  0x0000000122ef3afd:   mov    DWORD PTR [rsp+0x14],r8d
  0x0000000122ef3b02:   mov    DWORD PTR [rsp+0x20],edx
  0x0000000122ef3b06:   mov    esi,0xffffff45
  0x0000000122ef3b0b:   call   0x000000011b433000           ; ImmutableOopMap {[24]=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::skipWhitespace@16 (line 593)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@7 (line 244)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef3b10:   mov    rsi,rax
  0x0000000122ef3b13:   add    rsp,0x40
  0x0000000122ef3b17:   pop    rbp
  0x0000000122ef3b18:   jmp    0x000000011b4e2700           ;   {runtime_call _rethrow_Java}
  0x0000000122ef3b1d:   mov    esi,0xfffffff6
  0x0000000122ef3b22:   mov    ebp,edx
  0x0000000122ef3b24:   data16 xchg ax,ax
  0x0000000122ef3b27:   call   0x000000011b433000           ; ImmutableOopMap {}
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@31 (line 248)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef3b2c:   mov    esi,0xfffffff6
  0x0000000122ef3b31:   mov    ebp,edx
  0x0000000122ef3b33:   call   0x000000011b433000           ; ImmutableOopMap {}
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::skipWhitespace@9 (line 593)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseDouble@7 (line 244)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122ef3b38:   movabs r10,0x122ef39a1              ;   {internal_word}
  0x0000000122ef3b42:   mov    QWORD PTR [r15+0x350],r10
  0x0000000122ef3b49:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x0000000122ef3b4e:   hlt
  0x0000000122ef3b4f:   hlt
  0x0000000122ef3b50:   hlt
  0x0000000122ef3b51:   hlt
  0x0000000122ef3b52:   hlt
  0x0000000122ef3b53:   hlt
  0x0000000122ef3b54:   hlt
  0x0000000122ef3b55:   hlt
  0x0000000122ef3b56:   hlt
  0x0000000122ef3b57:   hlt
  0x0000000122ef3b58:   hlt
  0x0000000122ef3b59:   hlt
  0x0000000122ef3b5a:   hlt
  0x0000000122ef3b5b:   hlt
  0x0000000122ef3b5c:   hlt
  0x0000000122ef3b5d:   hlt
  0x0000000122ef3b5e:   hlt
  0x0000000122ef3b5f:   hlt
[Stub Code]
  0x0000000122ef3b60:   movabs rbx,0x0                      ;   {no_reloc}
  0x0000000122ef3b6a:   jmp    0x0000000122ef3b6a           ;   {runtime_call}
[Exception Handler]
  0x0000000122ef3b6f:   jmp    0x000000011b447880           ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000122ef3b74:   call   0x0000000122ef3b79
  0x0000000122ef3b79:   sub    QWORD PTR [rsp],0x5
  0x0000000122ef3b7e:   jmp    0x000000011b4333a0           ;   {runtime_call DeoptimizationBlob}
  0x0000000122ef3b83:   hlt
  0x0000000122ef3b84:   hlt
  0x0000000122ef3b85:   hlt
  0x0000000122ef3b86:   hlt
  0x0000000122ef3b87:   hlt
--------------------------------------------------------------------------------
[/Disassembly]
Trying to reach a confidence level of 99.8 % which only deviates by 1 % from the average measured duration.

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     493  784       3       ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::isDigit (18 bytes)
 total in heap  [0x000000011ba8d190,0x000000011ba8d4e8] = 856
 relocation     [0x000000011ba8d2f0,0x000000011ba8d320] = 48
 main code      [0x000000011ba8d320,0x000000011ba8d460] = 320
 stub code      [0x000000011ba8d460,0x000000011ba8d490] = 48
 oops           [0x000000011ba8d490,0x000000011ba8d498] = 8
 metadata       [0x000000011ba8d498,0x000000011ba8d4a0] = 8
 scopes data    [0x000000011ba8d4a0,0x000000011ba8d4b0] = 16
 scopes pcs     [0x000000011ba8d4b0,0x000000011ba8d4e0] = 48
 dependencies   [0x000000011ba8d4e0,0x000000011ba8d4e8] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013a83f8e8} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray'
  # parm0:    rsi       = char
  #           [sp+0x40]  (sp of caller)
  0x000000011ba8d320:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ba8d327:   push   rbp
  0x000000011ba8d328:   sub    rsp,0x30
  0x000000011ba8d32c:   movabs rax,0x13a845720              ;   {metadata(method data for {method} {0x000000013a83f8e8} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011ba8d336:   mov    edi,DWORD PTR [rax+0xac]
  0x000000011ba8d33c:   add    edi,0x2
  0x000000011ba8d33f:   mov    DWORD PTR [rax+0xac],edi
  0x000000011ba8d345:   and    edi,0x7fe
  0x000000011ba8d34b:   cmp    edi,0x0
  0x000000011ba8d34e:   je     0x000000011ba8d3fb
  0x000000011ba8d354:   cmp    esi,0x30
  0x000000011ba8d357:   movabs rax,0x13a845720              ;   {metadata(method data for {method} {0x000000013a83f8e8} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011ba8d361:   movabs rdi,0xf0
  0x000000011ba8d36b:   jl     0x000000011ba8d37b
  0x000000011ba8d371:   movabs rdi,0x100
  0x000000011ba8d37b:   mov    rbx,QWORD PTR [rax+rdi*1]
  0x000000011ba8d37f:   lea    rbx,[rbx+0x1]
  0x000000011ba8d383:   mov    QWORD PTR [rax+rdi*1],rbx
  0x000000011ba8d387:   jl     0x000000011ba8d3c6
  0x000000011ba8d38d:   cmp    esi,0x39
  0x000000011ba8d390:   movabs rax,0x13a845720              ;   {metadata(method data for {method} {0x000000013a83f8e8} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011ba8d39a:   movabs rsi,0x120
  0x000000011ba8d3a4:   jle    0x000000011ba8d3b4
  0x000000011ba8d3aa:   movabs rsi,0x110
  0x000000011ba8d3b4:   mov    rdi,QWORD PTR [rax+rsi*1]
  0x000000011ba8d3b8:   lea    rdi,[rdi+0x1]
  0x000000011ba8d3bc:   mov    QWORD PTR [rax+rsi*1],rdi
  0x000000011ba8d3c0:   jle    0x000000011ba8d3d0
  0x000000011ba8d3c6:   mov    eax,0x0
  0x000000011ba8d3cb:   jmp    0x000000011ba8d3e5
  0x000000011ba8d3d0:   movabs rax,0x13a845720              ;   {metadata(method data for {method} {0x000000013a83f8e8} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011ba8d3da:   inc    DWORD PTR [rax+0x130]
  0x000000011ba8d3e0:   mov    eax,0x1
  0x000000011ba8d3e5:   and    eax,0x1
  0x000000011ba8d3e8:   add    rsp,0x30
  0x000000011ba8d3ec:   pop    rbp
  0x000000011ba8d3ed:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x000000011ba8d3f4:   ja     0x000000011ba8d41c
  0x000000011ba8d3fa:   ret
  0x000000011ba8d3fb:   movabs r10,0x13a83f8e8              ;   {metadata({method} {0x000000013a83f8e8} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011ba8d405:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011ba8d40a:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011ba8d412:   call   0x000000011b4db500           ; ImmutableOopMap {}
                                                            ;*synchronization entry
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::isDigit@-1 (line 95)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba8d417:   jmp    0x000000011ba8d354
  0x000000011ba8d41c:   movabs r10,0x11ba8d3ed              ;   {internal_word}
  0x000000011ba8d426:   mov    QWORD PTR [r15+0x350],r10
  0x000000011ba8d42d:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x000000011ba8d432:   nop
  0x000000011ba8d433:   nop
  0x000000011ba8d434:   mov    rax,QWORD PTR [r15+0x3c8]
  0x000000011ba8d43b:   mov    QWORD PTR [r15+0x3c8],0x0
  0x000000011ba8d446:   mov    QWORD PTR [r15+0x3d0],0x0
  0x000000011ba8d451:   add    rsp,0x30
  0x000000011ba8d455:   pop    rbp
  0x000000011ba8d456:   jmp    0x000000011b446f00           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba8d45b:   hlt
  0x000000011ba8d45c:   hlt
  0x000000011ba8d45d:   hlt
  0x000000011ba8d45e:   hlt
  0x000000011ba8d45f:   hlt
[Exception Handler]
  0x000000011ba8d460:   call   0x000000011b4d7900           ;   {no_reloc}
  0x000000011ba8d465:   movabs rdi,0x10db45fc1              ;   {external_word}
  0x000000011ba8d46f:   and    rsp,0xfffffffffffffff0
  0x000000011ba8d473:   call   0x000000010d7f0290           ;   {runtime_call _ZN14MacroAssembler7debug64EPcxPx}
  0x000000011ba8d478:   hlt
[Deopt Handler Code]
  0x000000011ba8d479:   movabs r10,0x11ba8d479              ;   {section_word}
  0x000000011ba8d483:   push   r10
  0x000000011ba8d485:   jmp    0x000000011b4333a0           ;   {runtime_call DeoptimizationBlob}
  0x000000011ba8d48a:   hlt
  0x000000011ba8d48b:   hlt
  0x000000011ba8d48c:   hlt
  0x000000011ba8d48d:   hlt
  0x000000011ba8d48e:   hlt
  0x000000011ba8d48f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     505  847       3       ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::skipWhitespace (26 bytes)
 total in heap  [0x000000011ba9f010,0x000000011ba9f4b0] = 1184
 relocation     [0x000000011ba9f170,0x000000011ba9f1b0] = 64
 main code      [0x000000011ba9f1c0,0x000000011ba9f3a0] = 480
 stub code      [0x000000011ba9f3a0,0x000000011ba9f3d0] = 48
 oops           [0x000000011ba9f3d0,0x000000011ba9f3d8] = 8
 metadata       [0x000000011ba9f3d8,0x000000011ba9f3e0] = 8
 scopes data    [0x000000011ba9f3e0,0x000000011ba9f410] = 48
 scopes pcs     [0x000000011ba9f410,0x000000011ba9f490] = 128
 dependencies   [0x000000011ba9f490,0x000000011ba9f498] = 8
 nul chk table  [0x000000011ba9f498,0x000000011ba9f4b0] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013a844a28} 'skipWhitespace' '([CII)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray'
  # parm0:    rsi:rsi   = '[C'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000011ba9f1c0:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011ba9f1c7:   push   rbp
  0x000000011ba9f1c8:   sub    rsp,0x30
  0x000000011ba9f1cc:   movabs rax,0x13a845880              ;   {metadata(method data for {method} {0x000000013a844a28} 'skipWhitespace' '([CII)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011ba9f1d6:   mov    edi,DWORD PTR [rax+0xac]
  0x000000011ba9f1dc:   add    edi,0x2
  0x000000011ba9f1df:   mov    DWORD PTR [rax+0xac],edi
  0x000000011ba9f1e5:   and    edi,0x7fe
  0x000000011ba9f1eb:   cmp    edi,0x0
  0x000000011ba9f1ee:   je     0x000000011ba9f2f1
  0x000000011ba9f1f4:   jmp    0x000000011ba9f28e
  0x000000011ba9f1f9:   nop    DWORD PTR [rax+0x0]
  0x000000011ba9f200:   cmp    edx,DWORD PTR [rsi+0xc]      ; implicit exception: dispatches to 0x000000011ba9f312
  0x000000011ba9f203:   jae    0x000000011ba9f31c
  0x000000011ba9f209:   movsxd rax,edx
  0x000000011ba9f20c:   movzx  eax,WORD PTR [rsi+rax*2+0x10]
  0x000000011ba9f211:   cmp    eax,0x20
  0x000000011ba9f214:   movabs rax,0x13a845880              ;   {metadata(method data for {method} {0x000000013a844a28} 'skipWhitespace' '([CII)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011ba9f21e:   movabs rdi,0x120
  0x000000011ba9f228:   jg     0x000000011ba9f238
  0x000000011ba9f22e:   movabs rdi,0x110
  0x000000011ba9f238:   mov    rbx,QWORD PTR [rax+rdi*1]
  0x000000011ba9f23c:   lea    rbx,[rbx+0x1]
  0x000000011ba9f240:   mov    QWORD PTR [rax+rdi*1],rbx
  0x000000011ba9f244:   jg     0x000000011ba9f2cb
  0x000000011ba9f24a:   inc    edx
  0x000000011ba9f24c:   movabs rax,0x13a845880              ;   {metadata(method data for {method} {0x000000013a844a28} 'skipWhitespace' '([CII)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011ba9f256:   mov    edi,DWORD PTR [rax+0xb0]
  0x000000011ba9f25c:   add    edi,0x2
  0x000000011ba9f25f:   mov    DWORD PTR [rax+0xb0],edi
  0x000000011ba9f265:   and    edi,0x3ffe
  0x000000011ba9f26b:   cmp    edi,0x0
  0x000000011ba9f26e:   je     0x000000011ba9f32a
  0x000000011ba9f274:   mov    r10,QWORD PTR [r15+0x340]    ; ImmutableOopMap {rsi=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::skipWhitespace@21 (line 589)
  0x000000011ba9f27b:   test   DWORD PTR [r10],eax          ;   {poll}
  0x000000011ba9f27e:   movabs rax,0x13a845880              ;   {metadata(method data for {method} {0x000000013a844a28} 'skipWhitespace' '([CII)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011ba9f288:   inc    DWORD PTR [rax+0x148]
  0x000000011ba9f28e:   cmp    edx,ecx
  0x000000011ba9f290:   movabs rax,0x13a845880              ;   {metadata(method data for {method} {0x000000013a844a28} 'skipWhitespace' '([CII)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011ba9f29a:   movabs rdi,0xf0
  0x000000011ba9f2a4:   jge    0x000000011ba9f2b4
  0x000000011ba9f2aa:   movabs rdi,0x100
  0x000000011ba9f2b4:   mov    rbx,QWORD PTR [rax+rdi*1]
  0x000000011ba9f2b8:   lea    rbx,[rbx+0x1]
  0x000000011ba9f2bc:   mov    QWORD PTR [rax+rdi*1],rbx
  0x000000011ba9f2c0:   jge    0x000000011ba9f2db
  0x000000011ba9f2c6:   jmp    0x000000011ba9f200
  0x000000011ba9f2cb:   movabs rax,0x13a845880              ;   {metadata(method data for {method} {0x000000013a844a28} 'skipWhitespace' '([CII)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011ba9f2d5:   inc    DWORD PTR [rax+0x130]
  0x000000011ba9f2db:   mov    rax,rdx
  0x000000011ba9f2de:   add    rsp,0x30
  0x000000011ba9f2e2:   pop    rbp
  0x000000011ba9f2e3:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x000000011ba9f2ea:   ja     0x000000011ba9f34b
  0x000000011ba9f2f0:   ret
  0x000000011ba9f2f1:   movabs r10,0x13a844a28              ;   {metadata({method} {0x000000013a844a28} 'skipWhitespace' '([CII)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011ba9f2fb:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011ba9f300:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011ba9f308:   call   0x000000011b4db500           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::skipWhitespace@-1 (line 588)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba9f30d:   jmp    0x000000011ba9f1f4
  0x000000011ba9f312:   call   0x000000011b4d5b20           ; ImmutableOopMap {rsi=Oop }
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::skipWhitespace@9 (line 590)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba9f317:   call   0x000000011b4d5b20           ; ImmutableOopMap {rsi=Oop }
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::skipWhitespace@9 (line 590)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba9f31c:   mov    QWORD PTR [rsp],rdx
  0x000000011ba9f320:   mov    QWORD PTR [rsp+0x8],rsi
  0x000000011ba9f325:   call   0x000000011b4d4f20           ; ImmutableOopMap {rsi=Oop }
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::skipWhitespace@9 (line 590)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba9f32a:   movabs r10,0x13a844a28              ;   {metadata({method} {0x000000013a844a28} 'skipWhitespace' '([CII)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011ba9f334:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011ba9f339:   mov    QWORD PTR [rsp],0x15
  0x000000011ba9f341:   call   0x000000011b4db500           ; ImmutableOopMap {rsi=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::skipWhitespace@21 (line 589)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba9f346:   jmp    0x000000011ba9f274
  0x000000011ba9f34b:   movabs r10,0x11ba9f2e3              ;   {internal_word}
  0x000000011ba9f355:   mov    QWORD PTR [r15+0x350],r10
  0x000000011ba9f35c:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x000000011ba9f361:   nop
  0x000000011ba9f362:   nop
  0x000000011ba9f363:   mov    rax,QWORD PTR [r15+0x3c8]
  0x000000011ba9f36a:   mov    QWORD PTR [r15+0x3c8],0x0
  0x000000011ba9f375:   mov    QWORD PTR [r15+0x3d0],0x0
  0x000000011ba9f380:   add    rsp,0x30
  0x000000011ba9f384:   pop    rbp
  0x000000011ba9f385:   jmp    0x000000011b446f00           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba9f38a:   hlt
  0x000000011ba9f38b:   hlt
  0x000000011ba9f38c:   hlt
  0x000000011ba9f38d:   hlt
  0x000000011ba9f38e:   hlt
  0x000000011ba9f38f:   hlt
  0x000000011ba9f390:   hlt
  0x000000011ba9f391:   hlt
  0x000000011ba9f392:   hlt
  0x000000011ba9f393:   hlt
  0x000000011ba9f394:   hlt
  0x000000011ba9f395:   hlt
  0x000000011ba9f396:   hlt
  0x000000011ba9f397:   hlt
  0x000000011ba9f398:   hlt
  0x000000011ba9f399:   hlt
  0x000000011ba9f39a:   hlt
  0x000000011ba9f39b:   hlt
  0x000000011ba9f39c:   hlt
  0x000000011ba9f39d:   hlt
  0x000000011ba9f39e:   hlt
  0x000000011ba9f39f:   hlt
[Exception Handler]
  0x000000011ba9f3a0:   call   0x000000011b4d7900           ;   {no_reloc}
  0x000000011ba9f3a5:   movabs rdi,0x10db45fc1              ;   {external_word}
  0x000000011ba9f3af:   and    rsp,0xfffffffffffffff0
  0x000000011ba9f3b3:   call   0x000000010d7f0290           ;   {runtime_call _ZN14MacroAssembler7debug64EPcxPx}
  0x000000011ba9f3b8:   hlt
[Deopt Handler Code]
  0x000000011ba9f3b9:   movabs r10,0x11ba9f3b9              ;   {section_word}
  0x000000011ba9f3c3:   push   r10
  0x000000011ba9f3c5:   jmp    0x000000011b4333a0           ;   {runtime_call DeoptimizationBlob}
  0x000000011ba9f3ca:   hlt
  0x000000011ba9f3cb:   hlt
  0x000000011ba9f3cc:   hlt
  0x000000011ba9f3cd:   hlt
  0x000000011ba9f3ce:   hlt
  0x000000011ba9f3cf:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     514  867       3       ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral (513 bytes)
 total in heap  [0x000000011baa8810,0x000000011baaa900] = 8432
 relocation     [0x000000011baa8970,0x000000011baa8af0] = 384
 main code      [0x000000011baa8b00,0x000000011baaa0c0] = 5568
 stub code      [0x000000011baaa0c0,0x000000011baaa160] = 160
 oops           [0x000000011baaa160,0x000000011baaa168] = 8
 metadata       [0x000000011baaa168,0x000000011baaa188] = 32
 scopes data    [0x000000011baaa188,0x000000011baaa558] = 976
 scopes pcs     [0x000000011baaa558,0x000000011baaa868] = 784
 dependencies   [0x000000011baaa868,0x000000011baaa870] = 8
 nul chk table  [0x000000011baaa870,0x000000011baaa900] = 144

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray'
  # parm0:    rsi:rsi   = '[C'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  # parm3:    r8        = int
  # parm4:    r9        = boolean
  # parm5:    rdi       = boolean
  #           [sp+0x100]  (sp of caller)
  0x000000011baa8b00:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011baa8b07:   push   rbp
  0x000000011baa8b08:   sub    rsp,0xf0
  0x000000011baa8b0f:   mov    QWORD PTR [rsp+0x88],rsi
  0x000000011baa8b17:   mov    DWORD PTR [rsp+0x98],edx
  0x000000011baa8b1e:   mov    DWORD PTR [rsp+0xb0],ecx
  0x000000011baa8b25:   mov    DWORD PTR [rsp+0x84],r8d
  0x000000011baa8b2d:   mov    DWORD PTR [rsp+0xac],r9d
  0x000000011baa8b35:   mov    DWORD PTR [rsp+0xa8],edi
  0x000000011baa8b3c:   movabs rax,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa8b46:   mov    ebx,DWORD PTR [rax+0xac]
  0x000000011baa8b4c:   add    ebx,0x2
  0x000000011baa8b4f:   mov    DWORD PTR [rax+0xac],ebx
  0x000000011baa8b55:   and    ebx,0x7fe
  0x000000011baa8b5b:   cmp    ebx,0x0
  0x000000011baa8b5e:   je     0x000000011baa9e4c
  0x000000011baa8b64:   mov    rbx,rdx
  0x000000011baa8b67:   mov    eax,0x0
  0x000000011baa8b6c:   mov    r11d,0xffffffff
  0x000000011baa8b72:   movabs r13,0x0
  0x000000011baa8b7c:   mov    DWORD PTR [rsp+0x80],eax
  0x000000011baa8b83:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011baa8b88:   cmp    ebx,r8d
  0x000000011baa8b8b:   movabs r14,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa8b95:   movabs rax,0xf0
  0x000000011baa8b9f:   jge    0x000000011baa8baf
  0x000000011baa8ba5:   movabs rax,0x100
  0x000000011baa8baf:   mov    r8,QWORD PTR [r14+rax*1]
  0x000000011baa8bb3:   lea    r8,[r8+0x1]
  0x000000011baa8bb7:   mov    QWORD PTR [r14+rax*1],r8
  0x000000011baa8bbb:   jge    0x000000011baa8fa8
  0x000000011baa8bc1:   cmp    ebx,DWORD PTR [rsi+0xc]      ; implicit exception: dispatches to 0x000000011baa9e6d
  0x000000011baa8bc4:   jae    0x000000011baa9e77
  0x000000011baa8bca:   movsxd rax,ebx
  0x000000011baa8bcd:   movzx  r8d,WORD PTR [rsi+rax*2+0x10]
  0x000000011baa8bd3:   mov    DWORD PTR [rsp+0x94],r8d
  0x000000011baa8bdb:   movabs rax,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa8be5:   add    QWORD PTR [rax+0x110],0x1
  0x000000011baa8bed:   movabs rax,0x13a845720              ;   {metadata(method data for {method} {0x000000013a83f8e8} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa8bf7:   mov    r14d,DWORD PTR [rax+0xac]
  0x000000011baa8bfe:   add    r14d,0x2
  0x000000011baa8c02:   mov    DWORD PTR [rax+0xac],r14d
  0x000000011baa8c09:   and    r14d,0x1ffffe
  0x000000011baa8c10:   cmp    r14d,0x0
  0x000000011baa8c14:   je     0x000000011baa9e85
  0x000000011baa8c1a:   cmp    r8d,0x30
  0x000000011baa8c1e:   movabs rax,0x13a845720              ;   {metadata(method data for {method} {0x000000013a83f8e8} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa8c28:   movabs r14,0xf0
  0x000000011baa8c32:   jl     0x000000011baa8c42
  0x000000011baa8c38:   movabs r14,0x100
  0x000000011baa8c42:   mov    rsi,QWORD PTR [rax+r14*1]
  0x000000011baa8c46:   lea    rsi,[rsi+0x1]
  0x000000011baa8c4a:   mov    QWORD PTR [rax+r14*1],rsi
  0x000000011baa8c4e:   jl     0x000000011baa8c8e
  0x000000011baa8c54:   cmp    r8d,0x39
  0x000000011baa8c58:   movabs rax,0x13a845720              ;   {metadata(method data for {method} {0x000000013a83f8e8} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa8c62:   movabs rsi,0x120
  0x000000011baa8c6c:   jle    0x000000011baa8c7c
  0x000000011baa8c72:   movabs rsi,0x110
  0x000000011baa8c7c:   mov    r14,QWORD PTR [rax+rsi*1]
  0x000000011baa8c80:   lea    r14,[r14+0x1]
  0x000000011baa8c84:   mov    QWORD PTR [rax+rsi*1],r14
  0x000000011baa8c88:   jle    0x000000011baa8c98
  0x000000011baa8c8e:   mov    eax,0x0
  0x000000011baa8c93:   jmp    0x000000011baa8cad
  0x000000011baa8c98:   movabs rax,0x13a845720              ;   {metadata(method data for {method} {0x000000013a83f8e8} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa8ca2:   inc    DWORD PTR [rax+0x130]
  0x000000011baa8ca8:   mov    eax,0x1
  0x000000011baa8cad:   and    eax,0x1
  0x000000011baa8cb0:   cmp    eax,0x0
  0x000000011baa8cb3:   movabs rax,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa8cbd:   movabs rsi,0x120
  0x000000011baa8cc7:   je     0x000000011baa8cd7
  0x000000011baa8ccd:   movabs rsi,0x130
  0x000000011baa8cd7:   mov    r14,QWORD PTR [rax+rsi*1]
  0x000000011baa8cdb:   lea    r14,[r14+0x1]
  0x000000011baa8cdf:   mov    QWORD PTR [rax+rsi*1],r14
  0x000000011baa8ce3:   je     0x000000011baa8d25
  0x000000011baa8ce9:   movabs rax,0xa
  0x000000011baa8cf3:   mov    rsi,rax
  0x000000011baa8cf6:   mov    rax,r13
  0x000000011baa8cf9:   imul   rax,rsi
  0x000000011baa8cfd:   movsxd rsi,r8d
  0x000000011baa8d00:   add    rax,rsi
  0x000000011baa8d03:   movabs r10,0x30
  0x000000011baa8d0d:   sub    rax,r10
  0x000000011baa8d10:   movabs rsi,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa8d1a:   inc    DWORD PTR [rsi+0x140]
  0x000000011baa8d20:   jmp    0x000000011baa8f3e
  0x000000011baa8d25:   cmp    r8d,0x2e
  0x000000011baa8d29:   movabs rsi,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa8d33:   movabs rax,0x158
  0x000000011baa8d3d:   jne    0x000000011baa8d4d
  0x000000011baa8d43:   movabs rax,0x168
  0x000000011baa8d4d:   mov    r14,QWORD PTR [rsi+rax*1]
  0x000000011baa8d51:   lea    r14,[r14+0x1]
  0x000000011baa8d55:   mov    QWORD PTR [rsi+rax*1],r14
  0x000000011baa8d59:   jne    0x000000011baa8fb2
  0x000000011baa8d5f:   cmp    r11d,0xffffffff
  0x000000011baa8d63:   movabs rsi,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa8d6d:   movabs rax,0x188
  0x000000011baa8d77:   jne    0x000000011baa8d87
  0x000000011baa8d7d:   movabs rax,0x178
  0x000000011baa8d87:   mov    r11,QWORD PTR [rsi+rax*1]
  0x000000011baa8d8b:   lea    r11,[r11+0x1]
  0x000000011baa8d8f:   mov    QWORD PTR [rsi+rax*1],r11
  0x000000011baa8d93:   jne    0x000000011baa9e0c
  0x000000011baa8d99:   mov    rax,rbx
  0x000000011baa8d9c:   mov    QWORD PTR [rsp+0xa0],r13
  0x000000011baa8da4:   mov    DWORD PTR [rsp+0x9c],ebx
  0x000000011baa8dab:   jmp    0x000000011baa8eab
  0x000000011baa8db0:   mov    eax,DWORD PTR [rsp+0x90]
  0x000000011baa8db7:   mov    rsi,QWORD PTR [rsp+0x88]
  0x000000011baa8dbf:   movabs r14,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa8dc9:   add    QWORD PTR [r14+0x1c8],0x1
  0x000000011baa8dd1:   mov    rdi,rax
  0x000000011baa8dd4:   inc    edi
  0x000000011baa8dd6:   mov    r14,rsi
  0x000000011baa8dd9:   mov    rsi,r14
  0x000000011baa8ddc:   mov    rdx,rdi
  0x000000011baa8ddf:   mov    DWORD PTR [rsp+0x90],eax
  0x000000011baa8de6:   nop
  0x000000011baa8de7:   call   0x000000011baaa0c5           ; ImmutableOopMap {[136]=Oop }
                                                            ;*invokestatic tryToParseEightDigitsSimd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@89 (line 352)
                                                            ;   {static_call}
  0x000000011baa8dec:   mov    rsi,rax
  0x000000011baa8def:   mov    rax,rsi
  0x000000011baa8df2:   movabs rdx,0x0
  0x000000011baa8dfc:   cmp    rax,rdx
  0x000000011baa8dff:   movabs rax,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa8e09:   movabs rdx,0x1d8
  0x000000011baa8e13:   jl     0x000000011baa8e23
  0x000000011baa8e19:   movabs rdx,0x1e8
  0x000000011baa8e23:   mov    rdi,QWORD PTR [rax+rdx*1]
  0x000000011baa8e27:   lea    rdi,[rdi+0x1]
  0x000000011baa8e2b:   mov    QWORD PTR [rax+rdx*1],rdi
  0x000000011baa8e2f:   jl     0x000000011baa8eff
  0x000000011baa8e35:   movabs rax,0x5f5e100
  0x000000011baa8e3f:   mov    rdx,rax
  0x000000011baa8e42:   mov    rax,QWORD PTR [rsp+0xa0]
  0x000000011baa8e4a:   imul   rax,rdx
  0x000000011baa8e4e:   add    rax,rsi
  0x000000011baa8e51:   mov    esi,DWORD PTR [rsp+0x90]
  0x000000011baa8e58:   add    esi,0x8
  0x000000011baa8e5b:   movabs rdx,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa8e65:   mov    edi,DWORD PTR [rdx+0xb0]
  0x000000011baa8e6b:   add    edi,0x2
  0x000000011baa8e6e:   mov    DWORD PTR [rdx+0xb0],edi
  0x000000011baa8e74:   and    edi,0x3ffe
  0x000000011baa8e7a:   cmp    edi,0x0
  0x000000011baa8e7d:   je     0x000000011baa9ea6
  0x000000011baa8e83:   mov    r10,QWORD PTR [r15+0x340]    ; ImmutableOopMap {[136]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@115 (line 360)
  0x000000011baa8e8a:   test   DWORD PTR [r10],eax          ;   {poll}
  0x000000011baa8e8d:   movabs rdx,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa8e97:   inc    DWORD PTR [rdx+0x1f8]
  0x000000011baa8e9d:   mov    r13,rax
  0x000000011baa8ea0:   mov    QWORD PTR [rsp+0xa0],r13
  0x000000011baa8ea8:   mov    rax,rsi
  0x000000011baa8eab:   mov    r8d,DWORD PTR [rsp+0x84]
  0x000000011baa8eb3:   mov    r14,r8
  0x000000011baa8eb6:   sub    r14d,0x9
  0x000000011baa8eba:   cmp    eax,r14d
  0x000000011baa8ebd:   movabs r14,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa8ec7:   movabs rsi,0x1a8
  0x000000011baa8ed1:   jge    0x000000011baa8ee1
  0x000000011baa8ed7:   movabs rsi,0x1b8
  0x000000011baa8ee1:   mov    DWORD PTR [rsp+0x90],eax
  0x000000011baa8ee8:   mov    rax,QWORD PTR [r14+rsi*1]
  0x000000011baa8eec:   lea    rax,[rax+0x1]
  0x000000011baa8ef0:   mov    QWORD PTR [r14+rsi*1],rax
  0x000000011baa8ef4:   jge    0x000000011baa8f21
  0x000000011baa8efa:   jmp    0x000000011baa8db0
  0x000000011baa8eff:   mov    r13,QWORD PTR [rsp+0xa0]
  0x000000011baa8f07:   mov    esi,DWORD PTR [rsp+0x90]
  0x000000011baa8f0e:   mov    r11d,DWORD PTR [rsp+0x9c]
  0x000000011baa8f16:   mov    rax,r13
  0x000000011baa8f19:   mov    rbx,rsi
  0x000000011baa8f1c:   jmp    0x000000011baa8f3e
  0x000000011baa8f21:   mov    r13,QWORD PTR [rsp+0xa0]
  0x000000011baa8f29:   mov    esi,DWORD PTR [rsp+0x90]
  0x000000011baa8f30:   mov    r11d,DWORD PTR [rsp+0x9c]
  0x000000011baa8f38:   mov    rax,r13
  0x000000011baa8f3b:   mov    rbx,rsi
  0x000000011baa8f3e:   inc    ebx
  0x000000011baa8f40:   movabs rsi,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa8f4a:   mov    edx,DWORD PTR [rsi+0xb0]
  0x000000011baa8f50:   add    edx,0x2
  0x000000011baa8f53:   mov    DWORD PTR [rsi+0xb0],edx
  0x000000011baa8f59:   and    edx,0x3ffe
  0x000000011baa8f5f:   cmp    edx,0x0
  0x000000011baa8f62:   je     0x000000011baa9ec7
  0x000000011baa8f68:   mov    r10,QWORD PTR [r15+0x340]    ; ImmutableOopMap {[136]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@121 (line 341)
  0x000000011baa8f6f:   test   DWORD PTR [r10],eax          ;   {poll}
  0x000000011baa8f72:   movabs rsi,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa8f7c:   inc    DWORD PTR [rsi+0x210]
  0x000000011baa8f82:   mov    esi,DWORD PTR [rsp+0x94]
  0x000000011baa8f89:   mov    r13,rax
  0x000000011baa8f8c:   mov    DWORD PTR [rsp+0x80],esi
  0x000000011baa8f93:   mov    r8d,DWORD PTR [rsp+0x84]
  0x000000011baa8f9b:   mov    rsi,QWORD PTR [rsp+0x88]
  0x000000011baa8fa3:   jmp    0x000000011baa8b88
  0x000000011baa8fa8:   mov    esi,DWORD PTR [rsp+0x80]
  0x000000011baa8faf:   mov    r8,rsi
  0x000000011baa8fb2:   cmp    r11d,0xffffffff
  0x000000011baa8fb6:   movabs rax,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa8fc0:   movabs rsi,0x228
  0x000000011baa8fca:   jne    0x000000011baa8fda
  0x000000011baa8fd0:   movabs rsi,0x238
  0x000000011baa8fda:   mov    rdx,QWORD PTR [rax+rsi*1]
  0x000000011baa8fde:   lea    rdx,[rdx+0x1]
  0x000000011baa8fe2:   mov    QWORD PTR [rax+rsi*1],rdx
  0x000000011baa8fe6:   mov    rax,rbx
  0x000000011baa8fe9:   jne    0x000000011baa9016
  0x000000011baa8fef:   sub    eax,DWORD PTR [rsp+0x98]
  0x000000011baa8ff6:   movabs rsi,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa9000:   inc    DWORD PTR [rsi+0x248]
  0x000000011baa9006:   mov    rsi,rax
  0x000000011baa9009:   mov    rdi,rbx
  0x000000011baa900c:   mov    edx,0x0
  0x000000011baa9011:   jmp    0x000000011baa902f
  0x000000011baa9016:   sub    eax,DWORD PTR [rsp+0x98]
  0x000000011baa901d:   dec    eax
  0x000000011baa901f:   mov    rsi,r11
  0x000000011baa9022:   sub    esi,ebx
  0x000000011baa9024:   mov    rdx,rsi
  0x000000011baa9027:   inc    edx
  0x000000011baa9029:   mov    rsi,rax
  0x000000011baa902c:   mov    rdi,r11
  0x000000011baa902f:   cmp    r8d,0x65
  0x000000011baa9033:   movabs rax,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa903d:   movabs rcx,0x260
  0x000000011baa9047:   je     0x000000011baa9057
  0x000000011baa904d:   movabs rcx,0x270
  0x000000011baa9057:   mov    r9,QWORD PTR [rax+rcx*1]
  0x000000011baa905b:   lea    r9,[r9+0x1]
  0x000000011baa905f:   mov    QWORD PTR [rax+rcx*1],r9
  0x000000011baa9063:   je     0x000000011baa90a3
  0x000000011baa9069:   cmp    r8d,0x45
  0x000000011baa906d:   movabs rax,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa9077:   movabs rcx,0x280
  0x000000011baa9081:   jne    0x000000011baa9091
  0x000000011baa9087:   movabs rcx,0x290
  0x000000011baa9091:   mov    r8,QWORD PTR [rax+rcx*1]
  0x000000011baa9095:   lea    r8,[r8+0x1]
  0x000000011baa9099:   mov    QWORD PTR [rax+rcx*1],r8
  0x000000011baa909d:   jne    0x000000011baa90bd
  0x000000011baa90a3:   movabs rax,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa90ad:   inc    DWORD PTR [rax+0x2a0]
  0x000000011baa90b3:   mov    eax,0x1
  0x000000011baa90b8:   jmp    0x000000011baa90c2
  0x000000011baa90bd:   mov    eax,0x0
  0x000000011baa90c2:   cmp    eax,0x0
  0x000000011baa90c5:   movabs rax,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa90cf:   movabs rcx,0x2c8
  0x000000011baa90d9:   jne    0x000000011baa90e9
  0x000000011baa90df:   movabs rcx,0x2b8
  0x000000011baa90e9:   mov    r8,QWORD PTR [rax+rcx*1]
  0x000000011baa90ed:   lea    r8,[r8+0x1]
  0x000000011baa90f1:   mov    QWORD PTR [rax+rcx*1],r8
  0x000000011baa90f5:   jne    0x000000011baa912b
  0x000000011baa90fb:   mov    rcx,rbx
  0x000000011baa90fe:   movabs rax,0x0
  0x000000011baa9108:   mov    DWORD PTR [rsp+0xb4],edi
  0x000000011baa910f:   mov    QWORD PTR [rsp+0xb8],r13
  0x000000011baa9117:   mov    DWORD PTR [rsp+0x9c],ebx
  0x000000011baa911e:   mov    r8,QWORD PTR [rsp+0x88]
  0x000000011baa9126:   jmp    0x000000011baa96aa
  0x000000011baa912b:   mov    rax,rbx
  0x000000011baa912e:   inc    eax
  0x000000011baa9130:   cmp    eax,DWORD PTR [rsp+0x84]
  0x000000011baa9137:   movabs rcx,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa9141:   movabs r8,0x2d8
  0x000000011baa914b:   jge    0x000000011baa915b
  0x000000011baa9151:   movabs r8,0x2e8
  0x000000011baa915b:   mov    r9,QWORD PTR [rcx+r8*1]
  0x000000011baa915f:   lea    r9,[r9+0x1]
  0x000000011baa9163:   mov    QWORD PTR [rcx+r8*1],r9
  0x000000011baa9167:   mov    r8,QWORD PTR [rsp+0x88]
  0x000000011baa916f:   jge    0x000000011baa919e
  0x000000011baa9175:   cmp    eax,DWORD PTR [r8+0xc]       ; implicit exception: dispatches to 0x000000011baa9ee8
  0x000000011baa9179:   jae    0x000000011baa9ef2
  0x000000011baa917f:   movsxd rcx,eax
  0x000000011baa9182:   movzx  ecx,WORD PTR [r8+rcx*2+0x10]
  0x000000011baa9188:   movabs r9,0x13a845a18               ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa9192:   inc    DWORD PTR [r9+0x2f8]
  0x000000011baa9199:   jmp    0x000000011baa91a3
  0x000000011baa919e:   mov    ecx,0x0
  0x000000011baa91a3:   cmp    ecx,0x2d
  0x000000011baa91a6:   movabs r9,0x13a845a18               ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa91b0:   movabs r11,0x310
  0x000000011baa91ba:   jne    0x000000011baa91ca
  0x000000011baa91c0:   movabs r11,0x320
  0x000000011baa91ca:   mov    r14,QWORD PTR [r9+r11*1]
  0x000000011baa91ce:   lea    r14,[r14+0x1]
  0x000000011baa91d2:   mov    QWORD PTR [r9+r11*1],r14
  0x000000011baa91d6:   jne    0x000000011baa91f8
  0x000000011baa91dc:   movabs r9,0x13a845a18               ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa91e6:   inc    DWORD PTR [r9+0x330]
  0x000000011baa91ed:   mov    r9d,0x1
  0x000000011baa91f3:   jmp    0x000000011baa91fe
  0x000000011baa91f8:   mov    r9d,0x0
  0x000000011baa91fe:   mov    QWORD PTR [rsp+0xb8],r13
  0x000000011baa9206:   cmp    r9d,0x0
  0x000000011baa920a:   movabs r11,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa9214:   movabs r14,0x348
  0x000000011baa921e:   jne    0x000000011baa922e
  0x000000011baa9224:   movabs r14,0x358
  0x000000011baa922e:   mov    r13,QWORD PTR [r11+r14*1]
  0x000000011baa9232:   lea    r13,[r13+0x1]
  0x000000011baa9236:   mov    QWORD PTR [r11+r14*1],r13
  0x000000011baa923a:   jne    0x000000011baa9279
  0x000000011baa9240:   cmp    ecx,0x2b
  0x000000011baa9243:   movabs r11,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa924d:   movabs r13,0x368
  0x000000011baa9257:   jne    0x000000011baa9267
  0x000000011baa925d:   movabs r13,0x378
  0x000000011baa9267:   mov    r14,QWORD PTR [r11+r13*1]
  0x000000011baa926b:   lea    r14,[r14+0x1]
  0x000000011baa926f:   mov    QWORD PTR [r11+r13*1],r14
  0x000000011baa9273:   jne    0x000000011baa92e6
  0x000000011baa9279:   inc    eax
  0x000000011baa927b:   cmp    eax,DWORD PTR [rsp+0x84]
  0x000000011baa9282:   movabs rcx,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa928c:   movabs r11,0x388
  0x000000011baa9296:   jge    0x000000011baa92a6
  0x000000011baa929c:   movabs r11,0x398
  0x000000011baa92a6:   mov    r13,QWORD PTR [rcx+r11*1]
  0x000000011baa92aa:   lea    r13,[r13+0x1]
  0x000000011baa92ae:   mov    QWORD PTR [rcx+r11*1],r13
  0x000000011baa92b2:   jge    0x000000011baa92e1
  0x000000011baa92b8:   cmp    eax,DWORD PTR [r8+0xc]       ; implicit exception: dispatches to 0x000000011baa9f00
  0x000000011baa92bc:   jae    0x000000011baa9f0a
  0x000000011baa92c2:   movsxd rcx,eax
  0x000000011baa92c5:   movzx  ecx,WORD PTR [r8+rcx*2+0x10]
  0x000000011baa92cb:   movabs r11,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa92d5:   inc    DWORD PTR [r11+0x3a8]
  0x000000011baa92dc:   jmp    0x000000011baa92e6
  0x000000011baa92e1:   mov    ecx,0x0
  0x000000011baa92e6:   movabs r11,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa92f0:   add    QWORD PTR [r11+0x3c0],0x1
  0x000000011baa92f8:   movabs r11,0x13a845720              ;   {metadata(method data for {method} {0x000000013a83f8e8} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa9302:   mov    r13d,DWORD PTR [r11+0xac]
  0x000000011baa9309:   add    r13d,0x2
  0x000000011baa930d:   mov    DWORD PTR [r11+0xac],r13d
  0x000000011baa9314:   and    r13d,0x1ffffe
  0x000000011baa931b:   cmp    r13d,0x0
  0x000000011baa931f:   je     0x000000011baa9f18
  0x000000011baa9325:   cmp    ecx,0x30
  0x000000011baa9328:   movabs r11,0x13a845720              ;   {metadata(method data for {method} {0x000000013a83f8e8} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa9332:   movabs r13,0xf0
  0x000000011baa933c:   jl     0x000000011baa934c
  0x000000011baa9342:   movabs r13,0x100
  0x000000011baa934c:   mov    r14,QWORD PTR [r11+r13*1]
  0x000000011baa9350:   lea    r14,[r14+0x1]
  0x000000011baa9354:   mov    QWORD PTR [r11+r13*1],r14
  0x000000011baa9358:   jl     0x000000011baa9397
  0x000000011baa935e:   cmp    ecx,0x39
  0x000000011baa9361:   movabs r11,0x13a845720              ;   {metadata(method data for {method} {0x000000013a83f8e8} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa936b:   movabs r13,0x120
  0x000000011baa9375:   jle    0x000000011baa9385
  0x000000011baa937b:   movabs r13,0x110
  0x000000011baa9385:   mov    r14,QWORD PTR [r11+r13*1]
  0x000000011baa9389:   lea    r14,[r14+0x1]
  0x000000011baa938d:   mov    QWORD PTR [r11+r13*1],r14
  0x000000011baa9391:   jle    0x000000011baa93a2
  0x000000011baa9397:   mov    r11d,0x0
  0x000000011baa939d:   jmp    0x000000011baa93b9
  0x000000011baa93a2:   movabs r11,0x13a845720              ;   {metadata(method data for {method} {0x000000013a83f8e8} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa93ac:   inc    DWORD PTR [r11+0x130]
  0x000000011baa93b3:   mov    r11d,0x1
  0x000000011baa93b9:   and    r11d,0x1
  0x000000011baa93bd:   cmp    r11d,0x0
  0x000000011baa93c1:   movabs r11,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa93cb:   movabs r13,0x3e0
  0x000000011baa93d5:   je     0x000000011baa93e5
  0x000000011baa93db:   movabs r13,0x3d0
  0x000000011baa93e5:   mov    r14,QWORD PTR [r11+r13*1]
  0x000000011baa93e9:   lea    r14,[r14+0x1]
  0x000000011baa93ed:   mov    QWORD PTR [r11+r13*1],r14
  0x000000011baa93f1:   je     0x000000011baa9dc4
  0x000000011baa93f7:   mov    r11,rax
  0x000000011baa93fa:   movabs r13,0x0
  0x000000011baa9404:   mov    DWORD PTR [rsp+0xb4],edi
  0x000000011baa940b:   mov    DWORD PTR [rsp+0x9c],ebx
  0x000000011baa9412:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011baa9418:   movabs rax,0x989680
  0x000000011baa9422:   mov    r14,r13
  0x000000011baa9425:   cmp    r14,rax
  0x000000011baa9428:   movabs rax,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa9432:   movabs r14,0x400
  0x000000011baa943c:   jge    0x000000011baa944c
  0x000000011baa9442:   movabs r14,0x410
  0x000000011baa944c:   mov    rbx,QWORD PTR [rax+r14*1]
  0x000000011baa9450:   lea    rbx,[rbx+0x1]
  0x000000011baa9454:   mov    QWORD PTR [rax+r14*1],rbx
  0x000000011baa9458:   jge    0x000000011baa9488
  0x000000011baa945e:   movabs rax,0xa
  0x000000011baa9468:   mov    rbx,rax
  0x000000011baa946b:   mov    rax,r13
  0x000000011baa946e:   imul   rax,rbx
  0x000000011baa9472:   movsxd rcx,ecx
  0x000000011baa9475:   add    rax,rcx
  0x000000011baa9478:   movabs r10,0x30
  0x000000011baa9482:   sub    rax,r10
  0x000000011baa9485:   mov    r13,rax
  0x000000011baa9488:   inc    r11d
  0x000000011baa948b:   cmp    r11d,DWORD PTR [rsp+0x84]
  0x000000011baa9493:   movabs rbx,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa949d:   movabs rax,0x420
  0x000000011baa94a7:   jge    0x000000011baa94b7
  0x000000011baa94ad:   movabs rax,0x430
  0x000000011baa94b7:   mov    rcx,QWORD PTR [rbx+rax*1]
  0x000000011baa94bb:   lea    rcx,[rcx+0x1]
  0x000000011baa94bf:   mov    QWORD PTR [rbx+rax*1],rcx
  0x000000011baa94c3:   jge    0x000000011baa94f1
  0x000000011baa94c9:   cmp    r11d,DWORD PTR [r8+0xc]      ; implicit exception: dispatches to 0x000000011baa9f39
  0x000000011baa94cd:   jae    0x000000011baa9f43
  0x000000011baa94d3:   movsxd rbx,r11d
  0x000000011baa94d6:   movzx  ebx,WORD PTR [r8+rbx*2+0x10]
  0x000000011baa94dc:   movabs rax,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa94e6:   inc    DWORD PTR [rax+0x440]
  0x000000011baa94ec:   jmp    0x000000011baa94f6
  0x000000011baa94f1:   mov    ebx,0x0
  0x000000011baa94f6:   movabs rax,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa9500:   add    QWORD PTR [rax+0x458],0x1
  0x000000011baa9508:   movabs rax,0x13a845720              ;   {metadata(method data for {method} {0x000000013a83f8e8} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa9512:   mov    ecx,DWORD PTR [rax+0xac]
  0x000000011baa9518:   add    ecx,0x2
  0x000000011baa951b:   mov    DWORD PTR [rax+0xac],ecx
  0x000000011baa9521:   and    ecx,0x1ffffe
  0x000000011baa9527:   cmp    ecx,0x0
  0x000000011baa952a:   je     0x000000011baa9f51
  0x000000011baa9530:   cmp    ebx,0x30
  0x000000011baa9533:   movabs rax,0x13a845720              ;   {metadata(method data for {method} {0x000000013a83f8e8} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa953d:   movabs rcx,0xf0
  0x000000011baa9547:   jl     0x000000011baa9557
  0x000000011baa954d:   movabs rcx,0x100
  0x000000011baa9557:   mov    r14,QWORD PTR [rax+rcx*1]
  0x000000011baa955b:   lea    r14,[r14+0x1]
  0x000000011baa955f:   mov    QWORD PTR [rax+rcx*1],r14
  0x000000011baa9563:   jl     0x000000011baa95a2
  0x000000011baa9569:   cmp    ebx,0x39
  0x000000011baa956c:   movabs rax,0x13a845720              ;   {metadata(method data for {method} {0x000000013a83f8e8} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa9576:   movabs rcx,0x120
  0x000000011baa9580:   jle    0x000000011baa9590
  0x000000011baa9586:   movabs rcx,0x110
  0x000000011baa9590:   mov    r14,QWORD PTR [rax+rcx*1]
  0x000000011baa9594:   lea    r14,[r14+0x1]
  0x000000011baa9598:   mov    QWORD PTR [rax+rcx*1],r14
  0x000000011baa959c:   jle    0x000000011baa95ac
  0x000000011baa95a2:   mov    eax,0x0
  0x000000011baa95a7:   jmp    0x000000011baa95c1
  0x000000011baa95ac:   movabs rax,0x13a845720              ;   {metadata(method data for {method} {0x000000013a83f8e8} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa95b6:   inc    DWORD PTR [rax+0x130]
  0x000000011baa95bc:   mov    eax,0x1
  0x000000011baa95c1:   and    eax,0x1
  0x000000011baa95c4:   cmp    eax,0x0
  0x000000011baa95c7:   mov    ecx,0x2
  0x000000011baa95cc:   jne    0x000000011baa95d7
  0x000000011baa95d2:   mov    ecx,0x0
  0x000000011baa95d7:   movabs r14,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa95e1:   mov    edi,DWORD PTR [r14+0xb0]
  0x000000011baa95e8:   add    edi,ecx
  0x000000011baa95ea:   mov    DWORD PTR [r14+0xb0],edi
  0x000000011baa95f1:   cmp    ecx,0x0
  0x000000011baa95f4:   jne    0x000000011baa95ff
  0x000000011baa95fa:   mov    edi,0x2
  0x000000011baa95ff:   and    edi,0x3ffe
  0x000000011baa9605:   cmp    edi,0x0
  0x000000011baa9608:   je     0x000000011baa9f72
  0x000000011baa960e:   mov    r10,QWORD PTR [r15+0x340]    ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@317 (line 395)
  0x000000011baa9615:   test   DWORD PTR [r10],eax          ;   {poll}
  0x000000011baa9618:   cmp    eax,0x0
  0x000000011baa961b:   movabs rdi,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa9625:   movabs rax,0x478
  0x000000011baa962f:   je     0x000000011baa963f
  0x000000011baa9635:   movabs rax,0x468
  0x000000011baa963f:   mov    rcx,QWORD PTR [rdi+rax*1]
  0x000000011baa9643:   lea    rcx,[rcx+0x1]
  0x000000011baa9647:   mov    QWORD PTR [rdi+rax*1],rcx
  0x000000011baa964b:   je     0x000000011baa9659
  0x000000011baa9651:   mov    rcx,rbx
  0x000000011baa9654:   jmp    0x000000011baa9418
  0x000000011baa9659:   cmp    r9d,0x0
  0x000000011baa965d:   movabs rdi,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa9667:   movabs rbx,0x488
  0x000000011baa9671:   je     0x000000011baa9681
  0x000000011baa9677:   movabs rbx,0x498
  0x000000011baa9681:   mov    rax,QWORD PTR [rdi+rbx*1]
  0x000000011baa9685:   lea    rax,[rax+0x1]
  0x000000011baa9689:   mov    QWORD PTR [rdi+rbx*1],rax
  0x000000011baa968d:   je     0x000000011baa969c
  0x000000011baa9693:   mov    rdi,r13
  0x000000011baa9696:   neg    rdi
  0x000000011baa9699:   mov    r13,rdi
  0x000000011baa969c:   movsxd rdx,edx
  0x000000011baa969f:   add    rdx,r13
  0x000000011baa96a2:   mov    edx,edx
  0x000000011baa96a4:   mov    rax,r13
  0x000000011baa96a7:   mov    rcx,r11
  0x000000011baa96aa:   movabs rdi,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa96b4:   add    QWORD PTR [rdi+0x4a8],0x1
  0x000000011baa96bc:   movabs rdi,0x13a845880              ;   {metadata(method data for {method} {0x000000013a844a28} 'skipWhitespace' '([CII)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa96c6:   mov    ebx,DWORD PTR [rdi+0xac]
  0x000000011baa96cc:   add    ebx,0x2
  0x000000011baa96cf:   mov    DWORD PTR [rdi+0xac],ebx
  0x000000011baa96d5:   and    ebx,0x1ffffe
  0x000000011baa96db:   cmp    ebx,0x0
  0x000000011baa96de:   je     0x000000011baa9f93
  0x000000011baa96e4:   jmp    0x000000011baa9780
  0x000000011baa96e9:   nop    DWORD PTR [rax+0x0]
  0x000000011baa96f0:   cmp    ecx,DWORD PTR [r8+0xc]       ; implicit exception: dispatches to 0x000000011baa9fb4
  0x000000011baa96f4:   jae    0x000000011baa9fbe
  0x000000011baa96fa:   movsxd rdi,ecx
  0x000000011baa96fd:   movzx  edi,WORD PTR [r8+rdi*2+0x10]
  0x000000011baa9703:   cmp    edi,0x20
  0x000000011baa9706:   movabs rdi,0x13a845880              ;   {metadata(method data for {method} {0x000000013a844a28} 'skipWhitespace' '([CII)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa9710:   movabs rbx,0x120
  0x000000011baa971a:   jg     0x000000011baa972a
  0x000000011baa9720:   movabs rbx,0x110
  0x000000011baa972a:   mov    r9,QWORD PTR [rdi+rbx*1]
  0x000000011baa972e:   lea    r9,[r9+0x1]
  0x000000011baa9732:   mov    QWORD PTR [rdi+rbx*1],r9
  0x000000011baa9736:   jg     0x000000011baa97c2
  0x000000011baa973c:   inc    ecx
  0x000000011baa973e:   movabs rdi,0x13a845880              ;   {metadata(method data for {method} {0x000000013a844a28} 'skipWhitespace' '([CII)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa9748:   mov    ebx,DWORD PTR [rdi+0xb0]
  0x000000011baa974e:   add    ebx,0x2
  0x000000011baa9751:   mov    DWORD PTR [rdi+0xb0],ebx
  0x000000011baa9757:   and    ebx,0x3ffe
  0x000000011baa975d:   cmp    ebx,0x0
  0x000000011baa9760:   je     0x000000011baa9fcc
  0x000000011baa9766:   mov    r10,QWORD PTR [r15+0x340]    ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::skipWhitespace@21 (line 589)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@342 (line 404)
  0x000000011baa976d:   test   DWORD PTR [r10],eax          ;   {poll}
  0x000000011baa9770:   movabs rdi,0x13a845880              ;   {metadata(method data for {method} {0x000000013a844a28} 'skipWhitespace' '([CII)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa977a:   inc    DWORD PTR [rdi+0x148]
  0x000000011baa9780:   cmp    ecx,DWORD PTR [rsp+0x84]
  0x000000011baa9787:   movabs rdi,0x13a845880              ;   {metadata(method data for {method} {0x000000013a844a28} 'skipWhitespace' '([CII)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa9791:   movabs rbx,0xf0
  0x000000011baa979b:   jge    0x000000011baa97ab
  0x000000011baa97a1:   movabs rbx,0x100
  0x000000011baa97ab:   mov    r9,QWORD PTR [rdi+rbx*1]
  0x000000011baa97af:   lea    r9,[r9+0x1]
  0x000000011baa97b3:   mov    QWORD PTR [rdi+rbx*1],r9
  0x000000011baa97b7:   jge    0x000000011baa97d2
  0x000000011baa97bd:   jmp    0x000000011baa96f0
  0x000000011baa97c2:   movabs rdi,0x13a845880              ;   {metadata(method data for {method} {0x000000013a844a28} 'skipWhitespace' '([CII)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa97cc:   inc    DWORD PTR [rdi+0x130]
  0x000000011baa97d2:   cmp    ecx,DWORD PTR [rsp+0x84]
  0x000000011baa97d9:   movabs rdi,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa97e3:   movabs rbx,0x4b8
  0x000000011baa97ed:   jl     0x000000011baa97fd
  0x000000011baa97f3:   movabs rbx,0x4c8
  0x000000011baa97fd:   mov    r9,QWORD PTR [rdi+rbx*1]
  0x000000011baa9801:   lea    r9,[r9+0x1]
  0x000000011baa9805:   mov    QWORD PTR [rdi+rbx*1],r9
  0x000000011baa9809:   jl     0x000000011baa9d82
  0x000000011baa980f:   mov    edi,DWORD PTR [rsp+0xa8]
  0x000000011baa9816:   cmp    edi,0x0
  0x000000011baa9819:   movabs rdi,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa9823:   movabs rbx,0x4e8
  0x000000011baa982d:   je     0x000000011baa983d
  0x000000011baa9833:   movabs rbx,0x4d8
  0x000000011baa983d:   mov    r9,QWORD PTR [rdi+rbx*1]
  0x000000011baa9841:   lea    r9,[r9+0x1]
  0x000000011baa9845:   mov    QWORD PTR [rdi+rbx*1],r9
  0x000000011baa9849:   je     0x000000011baa985b
  0x000000011baa984f:   mov    edi,DWORD PTR [rsp+0xb4]
  0x000000011baa9856:   jmp    0x000000011baa98e7
  0x000000011baa985b:   cmp    esi,0x0
  0x000000011baa985e:   movabs rdi,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa9868:   movabs rbx,0x4f8
  0x000000011baa9872:   jne    0x000000011baa9882
  0x000000011baa9878:   movabs rbx,0x508
  0x000000011baa9882:   mov    r9,QWORD PTR [rdi+rbx*1]
  0x000000011baa9886:   lea    r9,[r9+0x1]
  0x000000011baa988a:   mov    QWORD PTR [rdi+rbx*1],r9
  0x000000011baa988e:   mov    edi,DWORD PTR [rsp+0xb4]
  0x000000011baa9895:   jne    0x000000011baa98e7
  0x000000011baa989b:   cmp    edi,DWORD PTR [r8+0xc]       ; implicit exception: dispatches to 0x000000011baa9fed
  0x000000011baa989f:   jae    0x000000011baa9ff7
  0x000000011baa98a5:   movsxd rbx,edi
  0x000000011baa98a8:   movzx  ebx,WORD PTR [r8+rbx*2+0x10]
  0x000000011baa98ae:   cmp    ebx,0x2e
  0x000000011baa98b1:   movabs rbx,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa98bb:   movabs r9,0x528
  0x000000011baa98c5:   jne    0x000000011baa98d5
  0x000000011baa98cb:   movabs r9,0x518
  0x000000011baa98d5:   mov    r11,QWORD PTR [rbx+r9*1]
  0x000000011baa98d9:   lea    r11,[r11+0x1]
  0x000000011baa98dd:   mov    QWORD PTR [rbx+r9*1],r11
  0x000000011baa98e1:   jne    0x000000011baa9d82
  0x000000011baa98e7:   cmp    esi,0x13
  0x000000011baa98ea:   movabs rsi,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa98f4:   movabs rbx,0x548
  0x000000011baa98fe:   jle    0x000000011baa990e
  0x000000011baa9904:   movabs rbx,0x558
  0x000000011baa990e:   mov    r9,QWORD PTR [rsi+rbx*1]
  0x000000011baa9912:   lea    r9,[r9+0x1]
  0x000000011baa9916:   mov    QWORD PTR [rsi+rbx*1],r9
  0x000000011baa991a:   jle    0x000000011baa9bb1
  0x000000011baa9920:   mov    esi,DWORD PTR [rsp+0x98]
  0x000000011baa9927:   mov    rbx,rsi
  0x000000011baa992a:   mov    ecx,0x0
  0x000000011baa992f:   movabs r9,0x0
  0x000000011baa9939:   mov    QWORD PTR [rsp+0xd8],rax
  0x000000011baa9941:   mov    DWORD PTR [rsp+0xd4],edx
  0x000000011baa9948:   mov    DWORD PTR [rsp+0xb4],edi
  0x000000011baa994f:   mov    esi,DWORD PTR [rsp+0x9c]
  0x000000011baa9956:   xchg   ax,ax
  0x000000011baa9958:   cmp    ebx,esi
  0x000000011baa995a:   movabs r11,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa9964:   movabs r13,0x568
  0x000000011baa996e:   jge    0x000000011baa997e
  0x000000011baa9974:   movabs r13,0x578
  0x000000011baa997e:   mov    r14,QWORD PTR [r11+r13*1]
  0x000000011baa9982:   lea    r14,[r14+0x1]
  0x000000011baa9986:   mov    QWORD PTR [r11+r13*1],r14
  0x000000011baa998a:   jge    0x000000011baa9b3f
  0x000000011baa9990:   mov    DWORD PTR [rsp+0x9c],esi
  0x000000011baa9997:   cmp    ebx,DWORD PTR [r8+0xc]       ; implicit exception: dispatches to 0x000000011baaa005
  0x000000011baa999b:   jae    0x000000011baaa00f
  0x000000011baa99a1:   movsxd r11,ebx
  0x000000011baa99a4:   movzx  r11d,WORD PTR [r8+r11*2+0x10]
  0x000000011baa99aa:   cmp    r11d,0x2e
  0x000000011baa99ae:   movabs r13,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa99b8:   movabs r14,0x588
  0x000000011baa99c2:   jne    0x000000011baa99d2
  0x000000011baa99c8:   movabs r14,0x598
  0x000000011baa99d2:   mov    rsi,QWORD PTR [r13+r14*1+0x0]
  0x000000011baa99d7:   lea    rsi,[rsi+0x1]
  0x000000011baa99db:   mov    QWORD PTR [r13+r14*1+0x0],rsi
  0x000000011baa99e0:   jne    0x000000011baa9a04
  0x000000011baa99e6:   inc    ecx
  0x000000011baa99e8:   movabs rsi,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa99f2:   inc    DWORD PTR [rsi+0x5a8]
  0x000000011baa99f8:   mov    DWORD PTR [rsp+0xd0],ebx
  0x000000011baa99ff:   jmp    0x000000011baa9ac3
  0x000000011baa9a04:   mov    DWORD PTR [rsp+0xc8],r11d
  0x000000011baa9a0c:   mov    DWORD PTR [rsp+0xcc],ecx
  0x000000011baa9a13:   mov    DWORD PTR [rsp+0xd0],ebx
  0x000000011baa9a1a:   movabs r13,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa9a24:   add    QWORD PTR [r13+0x5c0],0x1
  0x000000011baa9a2c:   mov    rsi,r9
  0x000000011baa9a2f:   movabs rdx,0xde0b6b3a7640000
  0x000000011baa9a39:   mov    QWORD PTR [rsp+0xc0],r9
  0x000000011baa9a41:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011baa9a47:   call   0x000000011b42e080           ; ImmutableOopMap {[136]=Oop }
                                                            ;*invokestatic compareUnsigned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@424 (line 421)
                                                            ;   {static_call}
  0x000000011baa9a4c:   cmp    eax,0x0
  0x000000011baa9a4f:   movabs rax,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa9a59:   movabs rsi,0x5d0
  0x000000011baa9a63:   jge    0x000000011baa9a73
  0x000000011baa9a69:   movabs rsi,0x5e0
  0x000000011baa9a73:   mov    rdx,QWORD PTR [rax+rsi*1]
  0x000000011baa9a77:   lea    rdx,[rdx+0x1]
  0x000000011baa9a7b:   mov    QWORD PTR [rax+rsi*1],rdx
  0x000000011baa9a7f:   jge    0x000000011baa9b22
  0x000000011baa9a85:   mov    r11d,DWORD PTR [rsp+0xc8]
  0x000000011baa9a8d:   movabs rax,0xa
  0x000000011baa9a97:   mov    rsi,rax
  0x000000011baa9a9a:   mov    rax,QWORD PTR [rsp+0xc0]
  0x000000011baa9aa2:   imul   rax,rsi
  0x000000011baa9aa6:   movsxd r11,r11d
  0x000000011baa9aa9:   add    rax,r11
  0x000000011baa9aac:   movabs r10,0x30
  0x000000011baa9ab6:   sub    rax,r10
  0x000000011baa9ab9:   mov    ecx,DWORD PTR [rsp+0xcc]
  0x000000011baa9ac0:   mov    r9,rax
  0x000000011baa9ac3:   mov    ebx,DWORD PTR [rsp+0xd0]
  0x000000011baa9aca:   inc    ebx
  0x000000011baa9acc:   movabs rsi,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa9ad6:   mov    edx,DWORD PTR [rsi+0xb0]
  0x000000011baa9adc:   add    edx,0x2
  0x000000011baa9adf:   mov    DWORD PTR [rsi+0xb0],edx
  0x000000011baa9ae5:   and    edx,0x3ffe
  0x000000011baa9aeb:   cmp    edx,0x0
  0x000000011baa9aee:   je     0x000000011baaa01d
  0x000000011baa9af4:   mov    r10,QWORD PTR [r15+0x340]    ; ImmutableOopMap {[136]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@449 (line 416)
  0x000000011baa9afb:   test   DWORD PTR [r10],eax          ;   {poll}
  0x000000011baa9afe:   movabs rsi,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa9b08:   inc    DWORD PTR [rsi+0x5f0]
  0x000000011baa9b0e:   mov    esi,DWORD PTR [rsp+0x9c]
  0x000000011baa9b15:   mov    r8,QWORD PTR [rsp+0x88]
  0x000000011baa9b1d:   jmp    0x000000011baa9958
  0x000000011baa9b22:   mov    ecx,DWORD PTR [rsp+0xcc]
  0x000000011baa9b29:   mov    r9,QWORD PTR [rsp+0xc0]
  0x000000011baa9b31:   mov    ebx,DWORD PTR [rsp+0xd0]
  0x000000011baa9b38:   mov    esi,DWORD PTR [rsp+0x9c]
  0x000000011baa9b3f:   cmp    ebx,esi
  0x000000011baa9b41:   movabs rsi,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa9b4b:   movabs rdx,0x608
  0x000000011baa9b55:   jge    0x000000011baa9b65
  0x000000011baa9b5b:   movabs rdx,0x618
  0x000000011baa9b65:   mov    r8,QWORD PTR [rsi+rdx*1]
  0x000000011baa9b69:   lea    r8,[r8+0x1]
  0x000000011baa9b6d:   mov    QWORD PTR [rsi+rdx*1],r8
  0x000000011baa9b71:   jge    0x000000011baa9b91
  0x000000011baa9b77:   movabs rsi,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa9b81:   inc    DWORD PTR [rsi+0x628]
  0x000000011baa9b87:   mov    esi,0x1
  0x000000011baa9b8c:   jmp    0x000000011baa9b96
  0x000000011baa9b91:   mov    esi,0x0
  0x000000011baa9b96:   movabs rdx,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa9ba0:   inc    DWORD PTR [rdx+0x640]
  0x000000011baa9ba6:   mov    rax,rcx
  0x000000011baa9ba9:   mov    r11,rsi
  0x000000011baa9bac:   jmp    0x000000011baa9be0
  0x000000011baa9bb1:   mov    QWORD PTR [rsp+0xd8],rax
  0x000000011baa9bb9:   mov    DWORD PTR [rsp+0xd4],edx
  0x000000011baa9bc0:   mov    DWORD PTR [rsp+0xb4],edi
  0x000000011baa9bc7:   mov    r13,QWORD PTR [rsp+0xb8]
  0x000000011baa9bcf:   mov    r9,r13
  0x000000011baa9bd2:   mov    rbx,rcx
  0x000000011baa9bd5:   mov    eax,0x0
  0x000000011baa9bda:   mov    r11d,0x0
  0x000000011baa9be0:   mov    r13,QWORD PTR [rsp+0xd8]
  0x000000011baa9be8:   mov    r8d,DWORD PTR [rsp+0xd4]
  0x000000011baa9bf0:   mov    edi,DWORD PTR [rsp+0xb4]
  0x000000011baa9bf7:   mov    edx,DWORD PTR [rsp+0xac]
  0x000000011baa9bfe:   movabs rsi,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa9c08:   add    QWORD PTR [rsi+0x658],0x1
  0x000000011baa9c10:   mov    rsi,rbx
  0x000000011baa9c13:   mov    rcx,r9
  0x000000011baa9c16:   mov    r9,rdi
  0x000000011baa9c19:   mov    rdi,r13
  0x000000011baa9c1c:   mov    DWORD PTR [rsp],r11d
  0x000000011baa9c20:   mov    DWORD PTR [rsp+0x8],eax
  0x000000011baa9c24:   data16 xchg ax,ax
  0x000000011baa9c27:   call   0x0000000122f06c20           ; ImmutableOopMap {[136]=Oop }
                                                            ;*invokestatic decFloatLiteralToDouble {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@486 (line 433)
                                                            ;   {static_call}
  0x000000011baa9c2c:   movabs rsi,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa9c36:   add    QWORD PTR [rsi+0x668],0x1
  0x000000011baa9c3e:   movabs rsi,0x13a61fa50              ;   {metadata(method data for {method} {0x0000000800031350} 'isNaN' '(D)Z' in 'java/lang/Double')}
  0x000000011baa9c48:   mov    edx,DWORD PTR [rsi+0xac]
  0x000000011baa9c4e:   add    edx,0x2
  0x000000011baa9c51:   mov    DWORD PTR [rsi+0xac],edx
  0x000000011baa9c57:   and    edx,0x1ffffe
  0x000000011baa9c5d:   cmp    edx,0x0
  0x000000011baa9c60:   je     0x000000011baaa03e
  0x000000011baa9c66:   vucomisd xmm0,xmm0
  0x000000011baa9c6a:   mov    esi,0xffffffff
  0x000000011baa9c6f:   jp     0x000000011baa9c89
  0x000000011baa9c75:   jb     0x000000011baa9c89
  0x000000011baa9c7b:   mov    esi,0x0
  0x000000011baa9c80:   je     0x000000011baa9c89
  0x000000011baa9c86:   inc    rsi
  0x000000011baa9c89:   cmp    esi,0x0
  0x000000011baa9c8c:   movabs rsi,0x13a61fa50              ;   {metadata(method data for {method} {0x0000000800031350} 'isNaN' '(D)Z' in 'java/lang/Double')}
  0x000000011baa9c96:   movabs rdx,0xf0
  0x000000011baa9ca0:   je     0x000000011baa9cb0
  0x000000011baa9ca6:   movabs rdx,0x100
  0x000000011baa9cb0:   mov    rcx,QWORD PTR [rsi+rdx*1]
  0x000000011baa9cb4:   lea    rcx,[rcx+0x1]
  0x000000011baa9cb8:   mov    QWORD PTR [rsi+rdx*1],rcx
  0x000000011baa9cbc:   je     0x000000011baa9cdc
  0x000000011baa9cc2:   movabs rsi,0x13a61fa50              ;   {metadata(method data for {method} {0x0000000800031350} 'isNaN' '(D)Z' in 'java/lang/Double')}
  0x000000011baa9ccc:   inc    DWORD PTR [rsi+0x110]
  0x000000011baa9cd2:   mov    esi,0x1
  0x000000011baa9cd7:   jmp    0x000000011baa9ce1
  0x000000011baa9cdc:   mov    esi,0x0
  0x000000011baa9ce1:   and    esi,0x1
  0x000000011baa9ce4:   cmp    esi,0x0
  0x000000011baa9ce7:   movabs rsi,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa9cf1:   movabs rdx,0x678
  0x000000011baa9cfb:   je     0x000000011baa9d0b
  0x000000011baa9d01:   movabs rdx,0x688
  0x000000011baa9d0b:   mov    rcx,QWORD PTR [rsi+rdx*1]
  0x000000011baa9d0f:   lea    rcx,[rcx+0x1]
  0x000000011baa9d13:   mov    QWORD PTR [rsi+rdx*1],rcx
  0x000000011baa9d17:   je     0x000000011baa9d6c
  0x000000011baa9d1d:   movabs rsi,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa9d27:   add    QWORD PTR [rsi+0x698],0x1
  0x000000011baa9d2f:   mov    r8d,DWORD PTR [rsp+0x84]
  0x000000011baa9d37:   sub    r8d,DWORD PTR [rsp+0xb0]
  0x000000011baa9d3f:   mov    rsi,QWORD PTR [rsp+0x88]
  0x000000011baa9d47:   mov    edx,DWORD PTR [rsp+0xb0]
  0x000000011baa9d4e:   mov    rcx,r8
  0x000000011baa9d51:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011baa9d57:   call   0x000000011baaa0f5           ; ImmutableOopMap {}
                                                            ;*invokestatic parseRestOfDecimalFloatLiteralTheHardWay {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@504 (line 434)
                                                            ;   {static_call}
  0x000000011baa9d5c:   movabs rsi,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa9d66:   inc    DWORD PTR [rsi+0x6a8]
  0x000000011baa9d6c:   add    rsp,0xf0
  0x000000011baa9d73:   pop    rbp
  0x000000011baa9d74:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x000000011baa9d7b:   ja     0x000000011baaa05f
  0x000000011baa9d81:   ret
  0x000000011baa9d82:   movabs rsi,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa9d8c:   add    QWORD PTR [rsi+0x538],0x1
  0x000000011baa9d94:   mov    r8d,DWORD PTR [rsp+0x84]
  0x000000011baa9d9c:   sub    r8d,DWORD PTR [rsp+0xb0]
  0x000000011baa9da4:   mov    rsi,QWORD PTR [rsp+0x88]
  0x000000011baa9dac:   mov    edx,DWORD PTR [rsp+0xb0]
  0x000000011baa9db3:   mov    rcx,r8
  0x000000011baa9db6:   nop
  0x000000011baa9db7:   call   0x000000011b42e080           ; ImmutableOopMap {}
                                                            ;*invokestatic newNumberFormatException {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@375 (line 407)
                                                            ;   {static_call}
  0x000000011baa9dbc:   cmp    rax,QWORD PTR [rax]          ; implicit exception: dispatches to 0x000000011baaa075
  0x000000011baa9dbf:   jmp    0x000000011baaa0a3
  0x000000011baa9dc4:   movabs rsi,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa9dce:   add    QWORD PTR [rsi+0x3f0],0x1
  0x000000011baa9dd6:   mov    r8d,DWORD PTR [rsp+0x84]
  0x000000011baa9dde:   sub    r8d,DWORD PTR [rsp+0xb0]
  0x000000011baa9de6:   mov    rsi,QWORD PTR [rsp+0x88]
  0x000000011baa9dee:   mov    edx,DWORD PTR [rsp+0xb0]
  0x000000011baa9df5:   mov    rcx,r8
  0x000000011baa9df8:   nop    DWORD PTR [rax+0x0]
  0x000000011baa9dff:   call   0x000000011b42e080           ; ImmutableOopMap {}
                                                            ;*invokestatic newNumberFormatException {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@266 (line 387)
                                                            ;   {static_call}
  0x000000011baa9e04:   cmp    rax,QWORD PTR [rax]          ; implicit exception: dispatches to 0x000000011baaa07a
  0x000000011baa9e07:   jmp    0x000000011baaa0a3
  0x000000011baa9e0c:   mov    r8d,DWORD PTR [rsp+0x84]
  0x000000011baa9e14:   mov    ecx,DWORD PTR [rsp+0xb0]
  0x000000011baa9e1b:   mov    rsi,QWORD PTR [rsp+0x88]
  0x000000011baa9e23:   movabs rdx,0x13a845a18              ;   {metadata(method data for {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa9e2d:   add    QWORD PTR [rdx+0x198],0x1
  0x000000011baa9e35:   sub    r8d,ecx
  0x000000011baa9e38:   mov    rdx,rcx
  0x000000011baa9e3b:   mov    rcx,r8
  0x000000011baa9e3e:   nop
  0x000000011baa9e3f:   call   0x000000011b42e080           ; ImmutableOopMap {}
                                                            ;*invokestatic newNumberFormatException {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@70 (line 348)
                                                            ;   {static_call}
  0x000000011baa9e44:   cmp    rax,QWORD PTR [rax]          ; implicit exception: dispatches to 0x000000011baaa07f
  0x000000011baa9e47:   jmp    0x000000011baaa0a3
  0x000000011baa9e4c:   movabs r10,0x13a83ff78              ;   {metadata({method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa9e56:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baa9e5b:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011baa9e63:   call   0x000000011b4db500           ; ImmutableOopMap {rsi=Oop [136]=Oop }
                                                            ;*synchronization entry
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@-1 (line 335)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baa9e68:   jmp    0x000000011baa8b64
  0x000000011baa9e6d:   call   0x000000011b4d5b20           ; ImmutableOopMap {rsi=Oop [136]=Oop }
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@22 (line 342)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011baa9e72:   call   0x000000011b4d5b20           ; ImmutableOopMap {rsi=Oop [136]=Oop }
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@22 (line 342)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011baa9e77:   mov    QWORD PTR [rsp],rbx
  0x000000011baa9e7b:   mov    QWORD PTR [rsp+0x8],rsi
  0x000000011baa9e80:   call   0x000000011b4d4f20           ; ImmutableOopMap {rsi=Oop [136]=Oop }
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@22 (line 342)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011baa9e85:   movabs r10,0x13a83f8e8              ;   {metadata({method} {0x000000013a83f8e8} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa9e8f:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baa9e94:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011baa9e9c:   call   0x000000011b4db500           ; ImmutableOopMap {rsi=Oop [136]=Oop }
                                                            ;*synchronization entry
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::isDigit@-1 (line 95)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@27 (line 343)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baa9ea1:   jmp    0x000000011baa8c1a
  0x000000011baa9ea6:   movabs r10,0x13a83ff78              ;   {metadata({method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa9eb0:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baa9eb5:   mov    QWORD PTR [rsp],0x73
  0x000000011baa9ebd:   call   0x000000011b4db500           ; ImmutableOopMap {[136]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@115 (line 360)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baa9ec2:   jmp    0x000000011baa8e83
  0x000000011baa9ec7:   movabs r10,0x13a83ff78              ;   {metadata({method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa9ed1:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baa9ed6:   mov    QWORD PTR [rsp],0x79
  0x000000011baa9ede:   call   0x000000011b4db500           ; ImmutableOopMap {[136]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@121 (line 341)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baa9ee3:   jmp    0x000000011baa8f68
  0x000000011baa9ee8:   call   0x000000011b4d5b20           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@203 (line 381)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011baa9eed:   call   0x000000011b4d5b20           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@203 (line 381)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011baa9ef2:   mov    QWORD PTR [rsp],rax
  0x000000011baa9ef6:   mov    QWORD PTR [rsp+0x8],r8
  0x000000011baa9efb:   call   0x000000011b4d4f20           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@203 (line 381)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011baa9f00:   call   0x000000011b4d5b20           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@246 (line 384)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011baa9f05:   call   0x000000011b4d5b20           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@246 (line 384)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011baa9f0a:   mov    QWORD PTR [rsp],rax
  0x000000011baa9f0e:   mov    QWORD PTR [rsp+0x8],r8
  0x000000011baa9f13:   call   0x000000011b4d4f20           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@246 (line 384)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011baa9f18:   movabs r10,0x13a83f8e8              ;   {metadata({method} {0x000000013a83f8e8} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa9f22:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baa9f27:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011baa9f2f:   call   0x000000011b4db500           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*synchronization entry
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::isDigit@-1 (line 95)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@255 (line 386)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baa9f34:   jmp    0x000000011baa9325
  0x000000011baa9f39:   call   0x000000011b4d5b20           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@305 (line 394)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011baa9f3e:   call   0x000000011b4d5b20           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@305 (line 394)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011baa9f43:   mov    QWORD PTR [rsp],r11
  0x000000011baa9f47:   mov    QWORD PTR [rsp+0x8],r8
  0x000000011baa9f4c:   call   0x000000011b4d4f20           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@305 (line 394)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011baa9f51:   movabs r10,0x13a83f8e8              ;   {metadata({method} {0x000000013a83f8e8} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa9f5b:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baa9f60:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011baa9f68:   call   0x000000011b4db500           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*synchronization entry
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::isDigit@-1 (line 95)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@314 (line 395)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baa9f6d:   jmp    0x000000011baa9530
  0x000000011baa9f72:   movabs r10,0x13a83ff78              ;   {metadata({method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa9f7c:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baa9f81:   mov    QWORD PTR [rsp],0x13d
  0x000000011baa9f89:   call   0x000000011b4db500           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@317 (line 395)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baa9f8e:   jmp    0x000000011baa960e
  0x000000011baa9f93:   movabs r10,0x13a844a28              ;   {metadata({method} {0x000000013a844a28} 'skipWhitespace' '([CII)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa9f9d:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baa9fa2:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011baa9faa:   call   0x000000011b4db500           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*synchronization entry
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::skipWhitespace@-1 (line 588)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@342 (line 404)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baa9faf:   jmp    0x000000011baa96e4
  0x000000011baa9fb4:   call   0x000000011b4d5b20           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::skipWhitespace@9 (line 590)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@342 (line 404)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011baa9fb9:   call   0x000000011b4d5b20           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::skipWhitespace@9 (line 590)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@342 (line 404)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011baa9fbe:   mov    QWORD PTR [rsp],rcx
  0x000000011baa9fc2:   mov    QWORD PTR [rsp+0x8],r8
  0x000000011baa9fc7:   call   0x000000011b4d4f20           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::skipWhitespace@9 (line 590)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@342 (line 404)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011baa9fcc:   movabs r10,0x13a844a28              ;   {metadata({method} {0x000000013a844a28} 'skipWhitespace' '([CII)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baa9fd6:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baa9fdb:   mov    QWORD PTR [rsp],0x15
  0x000000011baa9fe3:   call   0x000000011b4db500           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::skipWhitespace@21 (line 589)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@342 (line 404)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baa9fe8:   jmp    0x000000011baa9766
  0x000000011baa9fed:   call   0x000000011b4d5b20           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@364 (line 405)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011baa9ff2:   call   0x000000011b4d5b20           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@364 (line 405)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011baa9ff7:   mov    QWORD PTR [rsp],rdi
  0x000000011baa9ffb:   mov    QWORD PTR [rsp+0x8],r8
  0x000000011baaa000:   call   0x000000011b4d4f20           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@364 (line 405)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011baaa005:   call   0x000000011b4d5b20           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@403 (line 417)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011baaa00a:   call   0x000000011b4d5b20           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@403 (line 417)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011baaa00f:   mov    QWORD PTR [rsp],rbx
  0x000000011baaa013:   mov    QWORD PTR [rsp+0x8],r8
  0x000000011baaa018:   call   0x000000011b4d4f20           ; ImmutableOopMap {r8=Oop [136]=Oop }
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@403 (line 417)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011baaa01d:   movabs r10,0x13a83ff78              ;   {metadata({method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baaa027:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baaa02c:   mov    QWORD PTR [rsp],0x1c1
  0x000000011baaa034:   call   0x000000011b4db500           ; ImmutableOopMap {[136]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@449 (line 416)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baaa039:   jmp    0x000000011baa9af4
  0x000000011baaa03e:   movabs r10,0x800031350              ;   {metadata({method} {0x0000000800031350} 'isNaN' '(D)Z' in 'java/lang/Double')}
  0x000000011baaa048:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baaa04d:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011baaa055:   call   0x000000011b4db500           ; ImmutableOopMap {[136]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Double::isNaN@-1 (line 663)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@493 (line 434)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baaa05a:   jmp    0x000000011baa9c66
  0x000000011baaa05f:   movabs r10,0x11baa9d74              ;   {internal_word}
  0x000000011baaa069:   mov    QWORD PTR [r15+0x350],r10
  0x000000011baaa070:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x000000011baaa075:   call   0x000000011b4d5b20           ; ImmutableOopMap {rax=Oop }
                                                            ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@378 (line 407)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011baaa07a:   call   0x000000011b4d5b20           ; ImmutableOopMap {rax=Oop }
                                                            ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@269 (line 387)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011baaa07f:   call   0x000000011b4d5b20           ; ImmutableOopMap {rax=Oop }
                                                            ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@73 (line 348)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011baaa084:   nop
  0x000000011baaa085:   nop
  0x000000011baaa086:   mov    rax,QWORD PTR [r15+0x3c8]
  0x000000011baaa08d:   mov    QWORD PTR [r15+0x3c8],0x0
  0x000000011baaa098:   mov    QWORD PTR [r15+0x3d0],0x0
  0x000000011baaa0a3:   add    rsp,0xf0
  0x000000011baaa0aa:   pop    rbp
  0x000000011baaa0ab:   jmp    0x000000011b446f00           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011baaa0b0:   hlt
  0x000000011baaa0b1:   hlt
  0x000000011baaa0b2:   hlt
  0x000000011baaa0b3:   hlt
  0x000000011baaa0b4:   hlt
  0x000000011baaa0b5:   hlt
  0x000000011baaa0b6:   hlt
  0x000000011baaa0b7:   hlt
  0x000000011baaa0b8:   hlt
  0x000000011baaa0b9:   hlt
  0x000000011baaa0ba:   hlt
  0x000000011baaa0bb:   hlt
  0x000000011baaa0bc:   hlt
  0x000000011baaa0bd:   hlt
  0x000000011baaa0be:   hlt
  0x000000011baaa0bf:   hlt
[Stub Code]
  0x000000011baaa0c0:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x000000011baaa0c5:   movabs rbx,0x13a844b20              ;   {static_stub}
  0x000000011baaa0cf:   jmp    0x000000011b432a5c           ;   {runtime_call I2C/C2I adapters}
  0x000000011baaa0d4:   nop
  0x000000011baaa0d5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011baaa0df:   jmp    0x000000011baaa0df           ;   {runtime_call}
  0x000000011baaa0e4:   nop
  0x000000011baaa0e5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011baaa0ef:   jmp    0x000000011baaa0ef           ;   {runtime_call}
  0x000000011baaa0f4:   nop
  0x000000011baaa0f5:   movabs rbx,0x13a844488              ;   {static_stub}
  0x000000011baaa0ff:   jmp    0x000000011b40fb5f           ;   {runtime_call I2C/C2I adapters}
  0x000000011baaa104:   nop
  0x000000011baaa105:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011baaa10f:   jmp    0x000000011baaa10f           ;   {runtime_call}
  0x000000011baaa114:   nop
  0x000000011baaa115:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011baaa11f:   jmp    0x000000011baaa11f           ;   {runtime_call}
  0x000000011baaa124:   nop
  0x000000011baaa125:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011baaa12f:   jmp    0x000000011baaa12f           ;   {runtime_call}
[Exception Handler]
  0x000000011baaa134:   call   0x000000011b4d7900           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011baaa139:   movabs rdi,0x10db45fc1              ;   {external_word}
  0x000000011baaa143:   and    rsp,0xfffffffffffffff0
  0x000000011baaa147:   call   0x000000010d7f0290           ;   {runtime_call _ZN14MacroAssembler7debug64EPcxPx}
  0x000000011baaa14c:   hlt
[Deopt Handler Code]
  0x000000011baaa14d:   movabs r10,0x11baaa14d              ;   {section_word}
  0x000000011baaa157:   push   r10
  0x000000011baaa159:   jmp    0x000000011b4333a0           ;   {runtime_call DeoptimizationBlob}
  0x000000011baaa15e:   hlt
  0x000000011baaa15f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     546  877       3       ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd (55 bytes)
 total in heap  [0x000000011baadc90,0x000000011bab0838] = 11176
 relocation     [0x000000011baaddf0,0x000000011baae0a8] = 696
 main code      [0x000000011baae0c0,0x000000011baafd20] = 7264
 stub code      [0x000000011baafd20,0x000000011baafe10] = 240
 oops           [0x000000011baafe10,0x000000011baafe78] = 104
 metadata       [0x000000011baafe78,0x000000011baaff60] = 232
 scopes data    [0x000000011baaff60,0x000000011bab0350] = 1008
 scopes pcs     [0x000000011bab0350,0x000000011bab07b0] = 1120
 dependencies   [0x000000011bab07b0,0x000000011bab07b8] = 8
 nul chk table  [0x000000011bab07b8,0x000000011bab0838] = 128

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013a844b20} 'tryToParseEightDigitsSimd' '([CI)J' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray'
  # parm0:    rsi:rsi   = '[C'
  # parm1:    rdx       = int
  #           [sp+0x120]  (sp of caller)
  0x000000011baae0c0:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011baae0c7:   push   rbp
  0x000000011baae0c8:   sub    rsp,0x110
  0x000000011baae0cf:   mov    rdi,rsi
  0x000000011baae0d2:   movabs rcx,0x13a846328              ;   {metadata(method data for {method} {0x000000013a844b20} 'tryToParseEightDigitsSimd' '([CI)J' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baae0dc:   mov    esi,DWORD PTR [rcx+0xac]
  0x000000011baae0e2:   add    esi,0x2
  0x000000011baae0e5:   mov    DWORD PTR [rcx+0xac],esi
  0x000000011baae0eb:   and    esi,0x7fe
  0x000000011baae0f1:   cmp    esi,0x0
  0x000000011baae0f4:   je     0x000000011baaf7c2
  0x000000011baae0fa:   movabs rcx,0x13a846328              ;   {metadata(method data for {method} {0x000000013a844b20} 'tryToParseEightDigitsSimd' '([CI)J' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baae104:   add    QWORD PTR [rcx+0xf0],0x1
  0x000000011baae10c:   movabs rcx,0x13a75fdc8              ;   {metadata(method data for {method} {0x000000013a6db640} 'fromCharArray' '(Ljdk/incubator/vector/VectorSpecies;[CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011baae116:   mov    esi,DWORD PTR [rcx+0xac]
  0x000000011baae11c:   add    esi,0x2
  0x000000011baae11f:   mov    DWORD PTR [rcx+0xac],esi
  0x000000011baae125:   and    esi,0x1ffffe
  0x000000011baae12b:   cmp    esi,0x0
  0x000000011baae12e:   je     0x000000011baaf7e3
  0x000000011baae134:   movabs rcx,0x61f0bf278              ;   {oop(a 'jdk/incubator/vector/ShortVector$ShortSpecies'{0x000000061f0bf278})}
  0x000000011baae13e:   movabs rsi,0x13a75fdc8              ;   {metadata(method data for {method} {0x000000013a6db640} 'fromCharArray' '(Ljdk/incubator/vector/VectorSpecies;[CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011baae148:   mov    ecx,DWORD PTR [rcx+0x8]
  0x000000011baae14b:   movabs r10,0x800000000
  0x000000011baae155:   add    rcx,r10
  0x000000011baae158:   cmp    rcx,QWORD PTR [rsi+0x100]
  0x000000011baae15f:   jne    0x000000011baae16e
  0x000000011baae161:   add    QWORD PTR [rsi+0x108],0x1
  0x000000011baae169:   jmp    0x000000011baae1d4
  0x000000011baae16e:   cmp    rcx,QWORD PTR [rsi+0x110]
  0x000000011baae175:   jne    0x000000011baae184
  0x000000011baae177:   add    QWORD PTR [rsi+0x118],0x1
  0x000000011baae17f:   jmp    0x000000011baae1d4
  0x000000011baae184:   cmp    QWORD PTR [rsi+0x100],0x0
  0x000000011baae18f:   jne    0x000000011baae1a8
  0x000000011baae191:   mov    QWORD PTR [rsi+0x100],rcx
  0x000000011baae198:   mov    QWORD PTR [rsi+0x108],0x1
  0x000000011baae1a3:   jmp    0x000000011baae1d4
  0x000000011baae1a8:   cmp    QWORD PTR [rsi+0x110],0x0
  0x000000011baae1b3:   jne    0x000000011baae1cc
  0x000000011baae1b5:   mov    QWORD PTR [rsi+0x110],rcx
  0x000000011baae1bc:   mov    QWORD PTR [rsi+0x118],0x1
  0x000000011baae1c7:   jmp    0x000000011baae1d4
  0x000000011baae1cc:   add    QWORD PTR [rsi+0xf0],0x1
  0x000000011baae1d4:   mov    ecx,DWORD PTR [rdi+0xc]      ; implicit exception: dispatches to 0x000000011baaf804
  0x000000011baae1d7:   movabs rsi,0x13a75fdc8              ;   {metadata(method data for {method} {0x000000013a6db640} 'fromCharArray' '(Ljdk/incubator/vector/VectorSpecies;[CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011baae1e1:   add    QWORD PTR [rsi+0x128],0x1
  0x000000011baae1e9:   movabs rsi,0x13a75b1a8              ;   {metadata(method data for {method} {0x000000013a62d330} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x000000011baae1f3:   mov    r8d,DWORD PTR [rsi+0xac]
  0x000000011baae1fa:   add    r8d,0x2
  0x000000011baae1fe:   mov    DWORD PTR [rsi+0xac],r8d
  0x000000011baae205:   and    r8d,0x1ffffe
  0x000000011baae20c:   cmp    r8d,0x0
  0x000000011baae210:   je     0x000000011baaf809
  0x000000011baae216:   movabs rsi,0x13a75b1a8              ;   {metadata(method data for {method} {0x000000013a62d330} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x000000011baae220:   add    QWORD PTR [rsi+0x150],0x1
  0x000000011baae228:   sub    ecx,0x7
  0x000000011baae22b:   movabs rsi,0x13a6b6e08              ;   {metadata(method data for {method} {0x0000000800068070} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x000000011baae235:   mov    r8d,DWORD PTR [rsi+0xac]
  0x000000011baae23c:   add    r8d,0x2
  0x000000011baae240:   mov    DWORD PTR [rsi+0xac],r8d
  0x000000011baae247:   and    r8d,0x1ffffe
  0x000000011baae24e:   cmp    r8d,0x0
  0x000000011baae252:   je     0x000000011baaf82a
  0x000000011baae258:   movabs rsi,0x13a6b6e08              ;   {metadata(method data for {method} {0x0000000800068070} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x000000011baae262:   add    QWORD PTR [rsi+0xf0],0x1
  0x000000011baae26a:   movabs rsi,0x0                      ;   {oop(NULL)}
  0x000000011baae274:   mov    esi,0x0
  0x000000011baae279:   cmp    edx,esi
  0x000000011baae27b:   jl     0x000000011baaf84b
  0x000000011baae281:   cmp    edx,ecx
  0x000000011baae283:   jge    0x000000011baaf858
  0x000000011baae289:   mov    rbx,rdx
  0x000000011baae28c:   movabs rcx,0x61f0bf278              ;   {oop(a 'jdk/incubator/vector/ShortVector$ShortSpecies'{0x000000061f0bf278})}
  0x000000011baae296:   mov    rsi,rcx
  0x000000011baae299:   movabs rdx,0x13a75fdc8              ;   {metadata(method data for {method} {0x000000013a6db640} 'fromCharArray' '(Ljdk/incubator/vector/VectorSpecies;[CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011baae2a3:   add    QWORD PTR [rdx+0x170],0x1
  0x000000011baae2ab:   movabs rsi,0x13a75a040              ;   {metadata(method data for {method} {0x000000013a6edc60} 'dummyVector' '()Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector$ShortSpecies')}
  0x000000011baae2b5:   mov    edx,DWORD PTR [rsi+0xac]
  0x000000011baae2bb:   add    edx,0x2
  0x000000011baae2be:   mov    DWORD PTR [rsi+0xac],edx
  0x000000011baae2c4:   and    edx,0x1ffffe
  0x000000011baae2ca:   cmp    edx,0x0
  0x000000011baae2cd:   je     0x000000011baaf865
  0x000000011baae2d3:   movabs rsi,0x13a75a040              ;   {metadata(method data for {method} {0x000000013a6edc60} 'dummyVector' '()Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector$ShortSpecies')}
  0x000000011baae2dd:   add    QWORD PTR [rsi+0xf0],0x1
  0x000000011baae2e5:   movabs rcx,0x13a756e08              ;   {metadata(method data for {method} {0x000000013a55a340} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x000000011baae2ef:   mov    esi,DWORD PTR [rcx+0xac]
  0x000000011baae2f5:   add    esi,0x2
  0x000000011baae2f8:   mov    DWORD PTR [rcx+0xac],esi
  0x000000011baae2fe:   and    esi,0x1ffffe
  0x000000011baae304:   cmp    esi,0x0
  0x000000011baae307:   je     0x000000011baaf886
  0x000000011baae30d:   movabs rcx,0x13a756e08              ;   {metadata(method data for {method} {0x000000013a55a340} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x000000011baae317:   inc    DWORD PTR [rcx+0x100]
  0x000000011baae31d:   movabs rcx,0x61f0c8ee0              ;   {oop(a 'jdk/incubator/vector/Short128Vector'{0x000000061f0c8ee0})}
  0x000000011baae327:   mov    rsi,rcx
  0x000000011baae32a:   movabs rdx,0x13a75fdc8              ;   {metadata(method data for {method} {0x000000013a6db640} 'fromCharArray' '(Ljdk/incubator/vector/VectorSpecies;[CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011baae334:   add    QWORD PTR [rdx+0x1a8],0x1
  0x000000011baae33c:   movabs rsi,0x13a75fff8              ;   {metadata(method data for {method} {0x000000013a704530} 'fromCharArray0' '([CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/Short128Vector')}
  0x000000011baae346:   mov    edx,DWORD PTR [rsi+0xac]
  0x000000011baae34c:   add    edx,0x2
  0x000000011baae34f:   mov    DWORD PTR [rsi+0xac],edx
  0x000000011baae355:   and    edx,0x1ffffe
  0x000000011baae35b:   cmp    edx,0x0
  0x000000011baae35e:   je     0x000000011baaf8a7
  0x000000011baae364:   mov    rsi,rcx
  0x000000011baae367:   movabs rdx,0x13a75fff8              ;   {metadata(method data for {method} {0x000000013a704530} 'fromCharArray0' '([CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/Short128Vector')}
  0x000000011baae371:   add    QWORD PTR [rdx+0xf0],0x1
  0x000000011baae379:   movabs rsi,0x13a760128              ;   {metadata(method data for {method} {0x000000013a6dcd80} 'fromCharArray0Template' '([CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011baae383:   mov    edx,DWORD PTR [rsi+0xac]
  0x000000011baae389:   add    edx,0x2
  0x000000011baae38c:   mov    DWORD PTR [rsi+0xac],edx
  0x000000011baae392:   and    edx,0x1ffffe
  0x000000011baae398:   cmp    edx,0x0
  0x000000011baae39b:   je     0x000000011baaf8c8
  0x000000011baae3a1:   movabs rsi,0x13a760128              ;   {metadata(method data for {method} {0x000000013a6dcd80} 'fromCharArray0Template' '([CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011baae3ab:   add    QWORD PTR [rsi+0xf0],0x1
  0x000000011baae3b3:   movabs rcx,0x13a757838              ;   {metadata(method data for {method} {0x000000013a700e88} 'vspecies' '()Ljdk/incubator/vector/ShortVector$ShortSpecies;' in 'jdk/incubator/vector/Short128Vector')}
  0x000000011baae3bd:   mov    esi,DWORD PTR [rcx+0xac]
  0x000000011baae3c3:   add    esi,0x2
  0x000000011baae3c6:   mov    DWORD PTR [rcx+0xac],esi
  0x000000011baae3cc:   and    esi,0x1ffffe
  0x000000011baae3d2:   cmp    esi,0x0
  0x000000011baae3d5:   je     0x000000011baaf8e9
  0x000000011baae3db:   movabs rcx,0x61f0bf278              ;   {oop(a 'jdk/incubator/vector/ShortVector$ShortSpecies'{0x000000061f0bf278})}
  0x000000011baae3e5:   mov    rsi,rcx
  0x000000011baae3e8:   movabs rdx,0x13a760128              ;   {metadata(method data for {method} {0x000000013a6dcd80} 'fromCharArray0Template' '([CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011baae3f2:   add    QWORD PTR [rdx+0x128],0x1
  0x000000011baae3fa:   mov    rsi,rcx
  0x000000011baae3fd:   movabs rdx,0x13a760128              ;   {metadata(method data for {method} {0x000000013a6dcd80} 'fromCharArray0Template' '([CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011baae407:   add    QWORD PTR [rdx+0x160],0x1
  0x000000011baae40f:   movabs rsi,0x13a75a1b8              ;   {metadata(method data for {method} {0x000000013a6ed2e8} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/ShortVector$ShortSpecies')}
  0x000000011baae419:   mov    edx,DWORD PTR [rsi+0xac]
  0x000000011baae41f:   add    edx,0x2
  0x000000011baae422:   mov    DWORD PTR [rsi+0xac],edx
  0x000000011baae428:   and    edx,0x1ffffe
  0x000000011baae42e:   cmp    edx,0x0
  0x000000011baae431:   je     0x000000011baaf90a
  0x000000011baae437:   movabs rsi,0x13a760128              ;   {metadata(method data for {method} {0x000000013a6dcd80} 'fromCharArray0Template' '([CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011baae441:   add    QWORD PTR [rsi+0x198],0x1
  0x000000011baae449:   movabs rcx,0x13a760128              ;   {metadata(method data for {method} {0x000000013a6dcd80} 'fromCharArray0Template' '([CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011baae453:   add    QWORD PTR [rcx+0x1d0],0x1
  0x000000011baae45b:   movabs rcx,0x13a75f460              ;   {metadata(method data for {method} {0x000000013a6de590} 'charArrayAddress' '([CI)J' in 'jdk/incubator/vector/ShortVector')}
  0x000000011baae465:   mov    esi,DWORD PTR [rcx+0xac]
  0x000000011baae46b:   add    esi,0x2
  0x000000011baae46e:   mov    DWORD PTR [rcx+0xac],esi
  0x000000011baae474:   and    esi,0x1ffffe
  0x000000011baae47a:   cmp    esi,0x0
  0x000000011baae47d:   je     0x000000011baaf92b
  0x000000011baae483:   movabs rcx,0x13a7566a8              ;   {metadata(method data for {method} {0x00000008000bf490} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x000000011baae48d:   lea    rcx,[rcx+0x1c8]
  0x000000011baae494:   movabs rsi,0x61f0cc960              ;   {oop(a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000061f0cc960})}
  0x000000011baae49e:   mov    rdx,rsi
  0x000000011baae4a1:   test   rdx,rdx
  0x000000011baae4a4:   jne    0x000000011baae4aa
  0x000000011baae4a6:   or     QWORD PTR [rcx],0x1
  0x000000011baae4aa:   movabs rcx,0x13a760128              ;   {metadata(method data for {method} {0x000000013a6dcd80} 'fromCharArray0Template' '([CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011baae4b4:   add    QWORD PTR [rcx+0x1e0],0x1
  0x000000011baae4bc:   movsxd rdx,ebx
  0x000000011baae4bf:   mov    ecx,0x1
  0x000000011baae4c4:   shl    rdx,cl
  0x000000011baae4c7:   mov    r9,rdx
  0x000000011baae4ca:   movabs r10,0x10
  0x000000011baae4d4:   add    r9,r10
  0x000000011baae4d7:   movabs rdx,0x13a7566a8              ;   {metadata(method data for {method} {0x00000008000bf490} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x000000011baae4e1:   mov    ecx,DWORD PTR [rdx+0xac]
  0x000000011baae4e7:   add    ecx,0x2
  0x000000011baae4ea:   mov    DWORD PTR [rdx+0xac],ecx
  0x000000011baae4f0:   and    ecx,0x1ffffe
  0x000000011baae4f6:   cmp    ecx,0x0
  0x000000011baae4f9:   je     0x000000011baaf94c
  0x000000011baae4ff:   movabs rdx,0x13a800c90              ;   {metadata(method data for {method} {0x000000013a800a68} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000800c00800')}
  0x000000011baae509:   lea    rdx,[rdx+0x180]
  0x000000011baae510:   test   rsi,rsi
  0x000000011baae513:   jne    0x000000011baae519
  0x000000011baae515:   or     QWORD PTR [rdx],0x1
  0x000000011baae519:   movabs rsi,0x13a7566a8              ;   {metadata(method data for {method} {0x00000008000bf490} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x000000011baae523:   add    QWORD PTR [rsi+0x128],0x1
  0x000000011baae52b:   movabs rsi,0x13a800c90              ;   {metadata(method data for {method} {0x000000013a800a68} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000800c00800')}
  0x000000011baae535:   mov    edx,DWORD PTR [rsi+0xac]
  0x000000011baae53b:   add    edx,0x2
  0x000000011baae53e:   mov    DWORD PTR [rsi+0xac],edx
  0x000000011baae544:   and    edx,0x1ffffe
  0x000000011baae54a:   cmp    edx,0x0
  0x000000011baae54d:   je     0x000000011baaf96d
  0x000000011baae553:   movabs rsi,0x13a7566a8              ;   {metadata(method data for {method} {0x00000008000bf490} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x000000011baae55d:   lea    rsi,[rsi+0x160]
  0x000000011baae564:   movabs rdx,0x61f0cc7d8              ;   {oop(a 'jdk/incubator/vector/ShortVector$$Lambda$80+0x0000000800c20878'{0x000000061f0cc7d8})}
  0x000000011baae56e:   mov    rcx,rdx
  0x000000011baae571:   test   rcx,rcx
  0x000000011baae574:   jne    0x000000011baae57a
  0x000000011baae576:   or     QWORD PTR [rsi],0x1
  0x000000011baae57a:   movabs rsi,0x13a760128              ;   {metadata(method data for {method} {0x000000013a6dcd80} 'fromCharArray0Template' '([CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011baae584:   lea    rsi,[rsi+0x1f0]
  0x000000011baae58b:   test   rdx,rdx
  0x000000011baae58e:   jne    0x000000011baae596
  0x000000011baae590:   or     QWORD PTR [rsi],0x1
  0x000000011baae594:   jmp    0x000000011baae5dc
  0x000000011baae596:   movabs rdx,0x800c20878              ;   {metadata('jdk/incubator/vector/ShortVector$$Lambda$80+0x0000000800c20878')}
  0x000000011baae5a0:   xor    rdx,QWORD PTR [rsi]
  0x000000011baae5a3:   test   rdx,0xfffffffffffffffc
  0x000000011baae5aa:   je     0x000000011baae5dc
  0x000000011baae5ac:   test   rdx,0x2
  0x000000011baae5b3:   jne    0x000000011baae5dc
  0x000000011baae5b5:   cmp    QWORD PTR [rsi],0x0
  0x000000011baae5bc:   je     0x000000011baae5d9
  0x000000011baae5be:   cmp    QWORD PTR [rsi],0x1
  0x000000011baae5c5:   je     0x000000011baae5d9
  0x000000011baae5c7:   xor    rdx,QWORD PTR [rsi]
  0x000000011baae5ca:   test   rdx,0xfffffffffffffffc
  0x000000011baae5d1:   je     0x000000011baae5dc
  0x000000011baae5d3:   or     QWORD PTR [rsi],0x2
  0x000000011baae5d7:   jmp    0x000000011baae5dc
  0x000000011baae5d9:   mov    QWORD PTR [rsi],rdx
  0x000000011baae5dc:   movabs rsi,0x13a760128              ;   {metadata(method data for {method} {0x000000013a6dcd80} 'fromCharArray0Template' '([CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011baae5e6:   add    QWORD PTR [rsi+0x200],0x1
  0x000000011baae5ee:   movabs rdx,0x7ffb00230              ;   {oop(a 'java/lang/Class'{0x00000007ffb00230} = short)}
  0x000000011baae5f8:   movabs rsi,0x61f0bf2c0              ;   {oop(a 'java/lang/Class'{0x000000061f0bf2c0} = 'jdk/incubator/vector/Short128Vector')}
  0x000000011baae602:   mov    ecx,0x8
  0x000000011baae607:   mov    r8,rdi
  0x000000011baae60a:   mov    DWORD PTR [rsp],ebx
  0x000000011baae60d:   movabs r10,0x61f0bf278              ;   {oop(a 'jdk/incubator/vector/ShortVector$ShortSpecies'{0x000000061f0bf278})}
  0x000000011baae617:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baae61c:   movabs r10,0x61f0cc7d8              ;   {oop(a 'jdk/incubator/vector/ShortVector$$Lambda$80+0x0000000800c20878'{0x000000061f0cc7d8})}
  0x000000011baae626:   mov    QWORD PTR [rsp+0x10],r10
  0x000000011baae62b:   nop    DWORD PTR [rax+0x0]
  0x000000011baae62f:   call   0x000000011ba9c9c0           ; ImmutableOopMap {}
                                                            ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray0Template@31 (line 3705)
                                                            ; - jdk.incubator.vector.Short128Vector::fromCharArray0@3 (line 843)
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray@24 (line 3051)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@5 (line 600)
                                                            ;   {static_call}
  0x000000011baae634:   cmp    rax,0x0
  0x000000011baae638:   jne    0x000000011baae650
  0x000000011baae63a:   movabs rbx,0x13a760128              ;   {metadata(method data for {method} {0x000000013a6dcd80} 'fromCharArray0Template' '([CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011baae644:   or     BYTE PTR [rbx+0x209],0x1
  0x000000011baae64b:   jmp    0x000000011baae723
  0x000000011baae650:   movabs rsi,0x800c7c210              ;   {metadata('jdk/incubator/vector/ShortVector')}
  0x000000011baae65a:   mov    ebx,DWORD PTR [rax+0x8]
  0x000000011baae65d:   movabs r10,0x800000000
  0x000000011baae667:   add    rbx,r10
  0x000000011baae66a:   cmp    rsi,QWORD PTR [rbx+0x58]
  0x000000011baae66e:   jne    0x000000011baae707
  0x000000011baae674:   movabs rbx,0x13a760128              ;   {metadata(method data for {method} {0x000000013a6dcd80} 'fromCharArray0Template' '([CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011baae67e:   mov    esi,DWORD PTR [rax+0x8]
  0x000000011baae681:   movabs r10,0x800000000
  0x000000011baae68b:   add    rsi,r10
  0x000000011baae68e:   cmp    rsi,QWORD PTR [rbx+0x220]
  0x000000011baae695:   jne    0x000000011baae6a4
  0x000000011baae697:   add    QWORD PTR [rbx+0x228],0x1
  0x000000011baae69f:   jmp    0x000000011baae723
  0x000000011baae6a4:   cmp    rsi,QWORD PTR [rbx+0x230]
  0x000000011baae6ab:   jne    0x000000011baae6ba
  0x000000011baae6ad:   add    QWORD PTR [rbx+0x238],0x1
  0x000000011baae6b5:   jmp    0x000000011baae723
  0x000000011baae6ba:   cmp    QWORD PTR [rbx+0x220],0x0
  0x000000011baae6c5:   jne    0x000000011baae6de
  0x000000011baae6c7:   mov    QWORD PTR [rbx+0x220],rsi
  0x000000011baae6ce:   mov    QWORD PTR [rbx+0x228],0x1
  0x000000011baae6d9:   jmp    0x000000011baae723
  0x000000011baae6de:   cmp    QWORD PTR [rbx+0x230],0x0
  0x000000011baae6e9:   jne    0x000000011baae702
  0x000000011baae6eb:   mov    QWORD PTR [rbx+0x230],rsi
  0x000000011baae6f2:   mov    QWORD PTR [rbx+0x238],0x1
  0x000000011baae6fd:   jmp    0x000000011baae723
  0x000000011baae702:   jmp    0x000000011baae723
  0x000000011baae707:   movabs rbx,0x13a760128              ;   {metadata(method data for {method} {0x000000013a6dcd80} 'fromCharArray0Template' '([CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011baae711:   sub    QWORD PTR [rbx+0x210],0x1
  0x000000011baae719:   jmp    0x000000011baaf98e
  0x000000011baae71e:   jmp    0x000000011baae723
  0x000000011baae723:   mov    rdi,rax
  0x000000011baae726:   cmp    rax,QWORD PTR [rdi]          ; implicit exception: dispatches to 0x000000011baaf997
  0x000000011baae729:   mov    rdx,rdi
  0x000000011baae72c:   movabs rsi,0x13a846328              ;   {metadata(method data for {method} {0x000000013a844b20} 'tryToParseEightDigitsSimd' '([CI)J' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baae736:   add    QWORD PTR [rsi+0x100],0x1
  0x000000011baae73e:   movabs rdx,0x13a7603c0              ;   {metadata(method data for {method} {0x000000013a6d6538} 'sub' '(S)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011baae748:   mov    esi,DWORD PTR [rdx+0xac]
  0x000000011baae74e:   add    esi,0x2
  0x000000011baae751:   mov    DWORD PTR [rdx+0xac],esi
  0x000000011baae757:   and    esi,0x1ffffe
  0x000000011baae75d:   cmp    esi,0x0
  0x000000011baae760:   je     0x000000011baaf99c
  0x000000011baae766:   mov    rdx,rdi
  0x000000011baae769:   movabs rsi,0x13a7603c0              ;   {metadata(method data for {method} {0x000000013a6d6538} 'sub' '(S)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011baae773:   add    QWORD PTR [rsi+0xf0],0x1
  0x000000011baae77b:   movabs rdx,0x13a760530              ;   {metadata(method data for {method} {0x000000013a6d4df0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;S)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011baae785:   mov    esi,DWORD PTR [rdx+0xac]
  0x000000011baae78b:   add    esi,0x2
  0x000000011baae78e:   mov    DWORD PTR [rdx+0xac],esi
  0x000000011baae794:   and    esi,0x1ffffe
  0x000000011baae79a:   cmp    esi,0x0
  0x000000011baae79d:   je     0x000000011baaf9bd
  0x000000011baae7a3:   movabs rdx,0x13a760530              ;   {metadata(method data for {method} {0x000000013a6d4df0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;S)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011baae7ad:   add    QWORD PTR [rdx+0xf0],0x1
  0x000000011baae7b5:   movabs rdx,0x13a75dbc8              ;   {metadata(method data for {method} {0x000000013a6d1f78} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/ShortVector')}
  0x000000011baae7bf:   mov    esi,DWORD PTR [rdx+0xac]
  0x000000011baae7c5:   add    esi,0x2
  0x000000011baae7c8:   mov    DWORD PTR [rdx+0xac],esi
  0x000000011baae7ce:   and    esi,0x1ffffe
  0x000000011baae7d4:   cmp    esi,0x0
  0x000000011baae7d7:   je     0x000000011baaf9de
  0x000000011baae7dd:   movabs rdx,0x13a75dbc8              ;   {metadata(method data for {method} {0x000000013a6d1f78} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/ShortVector')}
  0x000000011baae7e7:   add    QWORD PTR [rdx+0xf0],0x1
  0x000000011baae7ef:   movabs rdx,0x13a75b368              ;   {metadata(method data for {method} {0x000000013a550a38} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/VectorOperators')}
  0x000000011baae7f9:   mov    esi,DWORD PTR [rdx+0xac]
  0x000000011baae7ff:   add    esi,0x2
  0x000000011baae802:   mov    DWORD PTR [rdx+0xac],esi
  0x000000011baae808:   and    esi,0x1ffffe
  0x000000011baae80e:   cmp    esi,0x0
  0x000000011baae811:   je     0x000000011baaf9ff
  0x000000011baae817:   movabs rdx,0x61f0d0470              ;   {oop(a 'jdk/incubator/vector/VectorOperators$BinaryImpl'{0x000000061f0d0470})}
  0x000000011baae821:   movabs rsi,0x13a75b368              ;   {metadata(method data for {method} {0x000000013a550a38} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/VectorOperators')}
  0x000000011baae82b:   mov    edx,DWORD PTR [rdx+0x8]
  0x000000011baae82e:   movabs r10,0x800000000
  0x000000011baae838:   add    rdx,r10
  0x000000011baae83b:   cmp    rdx,QWORD PTR [rsi+0x138]
  0x000000011baae842:   jne    0x000000011baae851
  0x000000011baae844:   add    QWORD PTR [rsi+0x140],0x1
  0x000000011baae84c:   jmp    0x000000011baae8b7
  0x000000011baae851:   cmp    rdx,QWORD PTR [rsi+0x148]
  0x000000011baae858:   jne    0x000000011baae867
  0x000000011baae85a:   add    QWORD PTR [rsi+0x150],0x1
  0x000000011baae862:   jmp    0x000000011baae8b7
  0x000000011baae867:   cmp    QWORD PTR [rsi+0x138],0x0
  0x000000011baae872:   jne    0x000000011baae88b
  0x000000011baae874:   mov    QWORD PTR [rsi+0x138],rdx
  0x000000011baae87b:   mov    QWORD PTR [rsi+0x140],0x1
  0x000000011baae886:   jmp    0x000000011baae8b7
  0x000000011baae88b:   cmp    QWORD PTR [rsi+0x148],0x0
  0x000000011baae896:   jne    0x000000011baae8af
  0x000000011baae898:   mov    QWORD PTR [rsi+0x148],rdx
  0x000000011baae89f:   mov    QWORD PTR [rsi+0x150],0x1
  0x000000011baae8aa:   jmp    0x000000011baae8b7
  0x000000011baae8af:   add    QWORD PTR [rsi+0x128],0x1
  0x000000011baae8b7:   movabs rdx,0x13a75b510              ;   {metadata(method data for {method} {0x000000013a73e738} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl')}
  0x000000011baae8c1:   mov    esi,DWORD PTR [rdx+0xac]
  0x000000011baae8c7:   add    esi,0x2
  0x000000011baae8ca:   mov    DWORD PTR [rdx+0xac],esi
  0x000000011baae8d0:   and    esi,0x1ffffe
  0x000000011baae8d6:   cmp    esi,0x0
  0x000000011baae8d9:   je     0x000000011baafa20
  0x000000011baae8df:   movabs rdx,0x13a75b510              ;   {metadata(method data for {method} {0x000000013a73e738} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl')}
  0x000000011baae8e9:   inc    DWORD PTR [rdx+0xf0]
  0x000000011baae8ef:   movabs rdx,0x13a760530              ;   {metadata(method data for {method} {0x000000013a6d4df0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;S)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011baae8f9:   inc    DWORD PTR [rdx+0x100]
  0x000000011baae8ff:   movabs rdx,0x13a760530              ;   {metadata(method data for {method} {0x000000013a6d4df0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;S)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011baae909:   inc    DWORD PTR [rdx+0x178]
  0x000000011baae90f:   mov    rdx,rdi
  0x000000011baae912:   movabs rsi,0x13a760530              ;   {metadata(method data for {method} {0x000000013a6d4df0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;S)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011baae91c:   mov    edx,DWORD PTR [rdx+0x8]
  0x000000011baae91f:   movabs r10,0x800000000
  0x000000011baae929:   add    rdx,r10
  0x000000011baae92c:   cmp    rdx,QWORD PTR [rsi+0x1a8]
  0x000000011baae933:   jne    0x000000011baae942
  0x000000011baae935:   add    QWORD PTR [rsi+0x1b0],0x1
  0x000000011baae93d:   jmp    0x000000011baae9a8
  0x000000011baae942:   cmp    rdx,QWORD PTR [rsi+0x1b8]
  0x000000011baae949:   jne    0x000000011baae958
  0x000000011baae94b:   add    QWORD PTR [rsi+0x1c0],0x1
  0x000000011baae953:   jmp    0x000000011baae9a8
  0x000000011baae958:   cmp    QWORD PTR [rsi+0x1a8],0x0
  0x000000011baae963:   jne    0x000000011baae97c
  0x000000011baae965:   mov    QWORD PTR [rsi+0x1a8],rdx
  0x000000011baae96c:   mov    QWORD PTR [rsi+0x1b0],0x1
  0x000000011baae977:   jmp    0x000000011baae9a8
  0x000000011baae97c:   cmp    QWORD PTR [rsi+0x1b8],0x0
  0x000000011baae987:   jne    0x000000011baae9a0
  0x000000011baae989:   mov    QWORD PTR [rsi+0x1b8],rdx
  0x000000011baae990:   mov    QWORD PTR [rsi+0x1c0],0x1
  0x000000011baae99b:   jmp    0x000000011baae9a8
  0x000000011baae9a0:   add    QWORD PTR [rsi+0x198],0x1
  0x000000011baae9a8:   mov    edx,0x30
  0x000000011baae9ad:   mov    rsi,rdi
  0x000000011baae9b0:   mov    QWORD PTR [rsp+0xf0],rdi
  0x000000011baae9b8:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011baae9bd:   movabs rax,0xffffffffffffffff
  0x000000011baae9c7:   call   0x000000011b42ace0           ; ImmutableOopMap {[240]=Oop }
                                                            ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ShortVector::lanewise@42 (line 806)
                                                            ; - jdk.incubator.vector.ShortVector::sub@5 (line 1343)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@10 (line 601)
                                                            ;   {virtual_call}
  0x000000011baae9cc:   mov    rdi,QWORD PTR [rsp+0xf0]
  0x000000011baae9d4:   movabs rdx,0x13a760530              ;   {metadata(method data for {method} {0x000000013a6d4df0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;S)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011baae9de:   mov    edi,DWORD PTR [rdi+0x8]
  0x000000011baae9e1:   movabs r10,0x800000000
  0x000000011baae9eb:   add    rdi,r10
  0x000000011baae9ee:   cmp    rdi,QWORD PTR [rdx+0x1e0]
  0x000000011baae9f5:   jne    0x000000011baaea04
  0x000000011baae9f7:   add    QWORD PTR [rdx+0x1e8],0x1
  0x000000011baae9ff:   jmp    0x000000011baaea6a
  0x000000011baaea04:   cmp    rdi,QWORD PTR [rdx+0x1f0]
  0x000000011baaea0b:   jne    0x000000011baaea1a
  0x000000011baaea0d:   add    QWORD PTR [rdx+0x1f8],0x1
  0x000000011baaea15:   jmp    0x000000011baaea6a
  0x000000011baaea1a:   cmp    QWORD PTR [rdx+0x1e0],0x0
  0x000000011baaea25:   jne    0x000000011baaea3e
  0x000000011baaea27:   mov    QWORD PTR [rdx+0x1e0],rdi
  0x000000011baaea2e:   mov    QWORD PTR [rdx+0x1e8],0x1
  0x000000011baaea39:   jmp    0x000000011baaea6a
  0x000000011baaea3e:   cmp    QWORD PTR [rdx+0x1f0],0x0
  0x000000011baaea49:   jne    0x000000011baaea62
  0x000000011baaea4b:   mov    QWORD PTR [rdx+0x1f0],rdi
  0x000000011baaea52:   mov    QWORD PTR [rdx+0x1f8],0x1
  0x000000011baaea5d:   jmp    0x000000011baaea6a
  0x000000011baaea62:   add    QWORD PTR [rdx+0x1d0],0x1
  0x000000011baaea6a:   movabs rdx,0x61f0d0470              ;   {oop(a 'jdk/incubator/vector/VectorOperators$BinaryImpl'{0x000000061f0d0470})}
  0x000000011baaea74:   mov    rcx,rax
  0x000000011baaea77:   mov    rsi,QWORD PTR [rsp+0xf0]
  0x000000011baaea7f:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011baaea85:   movabs rax,0xffffffffffffffff
  0x000000011baaea8f:   call   0x000000011b42ad20           ; ImmutableOopMap {}
                                                            ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ShortVector::lanewise@45 (line 806)
                                                            ; - jdk.incubator.vector.ShortVector::sub@5 (line 1343)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@10 (line 601)
                                                            ;   {virtual_call}
  0x000000011baaea94:   cmp    rax,QWORD PTR [rax]          ; implicit exception: dispatches to 0x000000011baafa41
  0x000000011baaea97:   mov    rdx,rax
  0x000000011baaea9a:   movabs rcx,0x13a846328              ;   {metadata(method data for {method} {0x000000013a844b20} 'tryToParseEightDigitsSimd' '([CI)J' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baaeaa4:   mov    edx,DWORD PTR [rdx+0x8]
  0x000000011baaeaa7:   movabs r10,0x800000000
  0x000000011baaeab1:   add    rdx,r10
  0x000000011baaeab4:   cmp    rdx,QWORD PTR [rcx+0x148]
  0x000000011baaeabb:   jne    0x000000011baaeaca
  0x000000011baaeabd:   add    QWORD PTR [rcx+0x150],0x1
  0x000000011baaeac5:   jmp    0x000000011baaeb30
  0x000000011baaeaca:   cmp    rdx,QWORD PTR [rcx+0x158]
  0x000000011baaead1:   jne    0x000000011baaeae0
  0x000000011baaead3:   add    QWORD PTR [rcx+0x160],0x1
  0x000000011baaeadb:   jmp    0x000000011baaeb30
  0x000000011baaeae0:   cmp    QWORD PTR [rcx+0x148],0x0
  0x000000011baaeaeb:   jne    0x000000011baaeb04
  0x000000011baaeaed:   mov    QWORD PTR [rcx+0x148],rdx
  0x000000011baaeaf4:   mov    QWORD PTR [rcx+0x150],0x1
  0x000000011baaeaff:   jmp    0x000000011baaeb30
  0x000000011baaeb04:   cmp    QWORD PTR [rcx+0x158],0x0
  0x000000011baaeb0f:   jne    0x000000011baaeb28
  0x000000011baaeb11:   mov    QWORD PTR [rcx+0x158],rdx
  0x000000011baaeb18:   mov    QWORD PTR [rcx+0x160],0x1
  0x000000011baaeb23:   jmp    0x000000011baaeb30
  0x000000011baaeb28:   add    QWORD PTR [rcx+0x138],0x1
  0x000000011baaeb30:   movabs rdx,0x61f0d1a18              ;   {oop(a 'jdk/incubator/vector/VectorOperators$ComparisonImpl'{0x000000061f0d1a18})}
  0x000000011baaeb3a:   movabs rcx,0x9
  0x000000011baaeb44:   mov    rsi,rax
  0x000000011baaeb47:   mov    QWORD PTR [rsp+0xf8],rax
  0x000000011baaeb4f:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011baaeb55:   movabs rax,0xffffffffffffffff
  0x000000011baaeb5f:   call   0x000000011b42ad60           ; ImmutableOopMap {[248]=Oop }
                                                            ;*invokevirtual compare {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@21 (line 603)
                                                            ;   {virtual_call}
  0x000000011baaeb64:   cmp    rax,QWORD PTR [rax]          ; implicit exception: dispatches to 0x000000011baafa46
  0x000000011baaeb67:   mov    rsi,rax
  0x000000011baaeb6a:   movabs rdx,0x13a846328              ;   {metadata(method data for {method} {0x000000013a844b20} 'tryToParseEightDigitsSimd' '([CI)J' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baaeb74:   add    QWORD PTR [rdx+0x170],0x1
  0x000000011baaeb7c:   movabs rsi,0x13a760788              ;   {metadata(method data for {method} {0x000000013a70ab78} 'anyTrue' '()Z' in 'jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011baaeb86:   mov    edx,DWORD PTR [rsi+0xac]
  0x000000011baaeb8c:   add    edx,0x2
  0x000000011baaeb8f:   mov    DWORD PTR [rsi+0xac],edx
  0x000000011baaeb95:   and    edx,0x1ffffe
  0x000000011baaeb9b:   cmp    edx,0x0
  0x000000011baaeb9e:   je     0x000000011baafa4b
  0x000000011baaeba4:   mov    rsi,rax
  0x000000011baaeba7:   movabs rdx,0x13a760788              ;   {metadata(method data for {method} {0x000000013a70ab78} 'anyTrue' '()Z' in 'jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011baaebb1:   add    QWORD PTR [rdx+0xf0],0x1
  0x000000011baaebb9:   movabs rsi,0x13a760958              ;   {metadata(method data for {method} {0x000000013a709d00} 'vspecies' '()Ljdk/incubator/vector/ShortVector$ShortSpecies;' in 'jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011baaebc3:   mov    edx,DWORD PTR [rsi+0xac]
  0x000000011baaebc9:   add    edx,0x2
  0x000000011baaebcc:   mov    DWORD PTR [rsi+0xac],edx
  0x000000011baaebd2:   and    edx,0x1ffffe
  0x000000011baaebd8:   cmp    edx,0x0
  0x000000011baaebdb:   je     0x000000011baafa6c
  0x000000011baaebe1:   movabs rsi,0x61f0bf278              ;   {oop(a 'jdk/incubator/vector/ShortVector$ShortSpecies'{0x000000061f0bf278})}
  0x000000011baaebeb:   mov    rdx,rsi
  0x000000011baaebee:   movabs rcx,0x13a760788              ;   {metadata(method data for {method} {0x000000013a70ab78} 'anyTrue' '()Z' in 'jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011baaebf8:   add    QWORD PTR [rcx+0x128],0x1
  0x000000011baaec00:   movabs rdx,0x13a760a68              ;   {metadata(method data for {method} {0x000000013a6ee698} 'maskAll' '(Z)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/ShortVector$ShortSpecies')}
  0x000000011baaec0a:   mov    ecx,DWORD PTR [rdx+0xac]
  0x000000011baaec10:   add    ecx,0x2
  0x000000011baaec13:   mov    DWORD PTR [rdx+0xac],ecx
  0x000000011baaec19:   and    ecx,0x1ffffe
  0x000000011baaec1f:   cmp    ecx,0x0
  0x000000011baaec22:   je     0x000000011baafa8d
  0x000000011baaec28:   movabs rdx,0x13a760a68              ;   {metadata(method data for {method} {0x000000013a6ee698} 'maskAll' '(Z)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/ShortVector$ShortSpecies')}
  0x000000011baaec32:   add    QWORD PTR [rdx+0xf0],0x1
  0x000000011baaec3a:   movabs rsi,0x13a760a68              ;   {metadata(method data for {method} {0x000000013a6ee698} 'maskAll' '(Z)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/ShortVector$ShortSpecies')}
  0x000000011baaec44:   inc    DWORD PTR [rsi+0x128]
  0x000000011baaec4a:   movabs rsi,0x61f0bf278              ;   {oop(a 'jdk/incubator/vector/ShortVector$ShortSpecies'{0x000000061f0bf278})}
  0x000000011baaec54:   movabs rdx,0x13a760a68              ;   {metadata(method data for {method} {0x000000013a6ee698} 'maskAll' '(Z)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/ShortVector$ShortSpecies')}
  0x000000011baaec5e:   add    QWORD PTR [rdx+0x158],0x1
  0x000000011baaec66:   movabs rsi,0x13a760a68              ;   {metadata(method data for {method} {0x000000013a6ee698} 'maskAll' '(Z)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/ShortVector$ShortSpecies')}
  0x000000011baaec70:   add    QWORD PTR [rsi+0x200],0x1
  0x000000011baaec78:   movabs rsi,0x13a760cf0              ;   {metadata(method data for {method} {0x000000013a70ad28} 'maskAll' '(Z)Ljdk/incubator/vector/Short128Vector$Short128Mask;' in 'jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011baaec82:   mov    edx,DWORD PTR [rsi+0xac]
  0x000000011baaec88:   add    edx,0x2
  0x000000011baaec8b:   mov    DWORD PTR [rsi+0xac],edx
  0x000000011baaec91:   and    edx,0x1ffffe
  0x000000011baaec97:   cmp    edx,0x0
  0x000000011baaec9a:   je     0x000000011baafaae
  0x000000011baaeca0:   movabs rsi,0x13a760cf0              ;   {metadata(method data for {method} {0x000000013a70ad28} 'maskAll' '(Z)Ljdk/incubator/vector/Short128Vector$Short128Mask;' in 'jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011baaecaa:   inc    DWORD PTR [rsi+0x100]
  0x000000011baaecb0:   movabs rsi,0x13a760cf0              ;   {metadata(method data for {method} {0x000000013a70ad28} 'maskAll' '(Z)Ljdk/incubator/vector/Short128Vector$Short128Mask;' in 'jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011baaecba:   inc    DWORD PTR [rsi+0x110]
  0x000000011baaecc0:   mov    QWORD PTR [rsp+0x100],rax
  0x000000011baaecc8:   movabs rsi,0x13a7566a8              ;   {metadata(method data for {method} {0x00000008000bf490} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x000000011baaecd2:   lea    rsi,[rsi+0x1c8]
  0x000000011baaecd9:   movabs rdx,0x61f13cd40              ;   {oop(a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000061f13cd40})}
  0x000000011baaece3:   mov    rcx,rdx
  0x000000011baaece6:   test   rcx,rcx
  0x000000011baaece9:   jne    0x000000011baaecef
  0x000000011baaeceb:   or     QWORD PTR [rsi],0x1
  0x000000011baaecef:   movabs rsi,0x13a760cf0              ;   {metadata(method data for {method} {0x000000013a70ad28} 'maskAll' '(Z)Ljdk/incubator/vector/Short128Vector$Short128Mask;' in 'jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011baaecf9:   add    QWORD PTR [rsi+0x128],0x1
  0x000000011baaed01:   movabs rsi,0x13a7566a8              ;   {metadata(method data for {method} {0x00000008000bf490} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x000000011baaed0b:   mov    ecx,DWORD PTR [rsi+0xac]
  0x000000011baaed11:   add    ecx,0x2
  0x000000011baaed14:   mov    DWORD PTR [rsi+0xac],ecx
  0x000000011baaed1a:   and    ecx,0x1ffffe
  0x000000011baaed20:   cmp    ecx,0x0
  0x000000011baaed23:   je     0x000000011baafacf
  0x000000011baaed29:   movabs rsi,0x13a800c90              ;   {metadata(method data for {method} {0x000000013a800a68} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000800c00800')}
  0x000000011baaed33:   lea    rsi,[rsi+0x180]
  0x000000011baaed3a:   test   rdx,rdx
  0x000000011baaed3d:   jne    0x000000011baaed43
  0x000000011baaed3f:   or     QWORD PTR [rsi],0x1
  0x000000011baaed43:   movabs rsi,0x13a7566a8              ;   {metadata(method data for {method} {0x00000008000bf490} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x000000011baaed4d:   add    QWORD PTR [rsi+0x128],0x1
  0x000000011baaed55:   movabs rsi,0x13a800c90              ;   {metadata(method data for {method} {0x000000013a800a68} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000800c00800')}
  0x000000011baaed5f:   mov    edx,DWORD PTR [rsi+0xac]
  0x000000011baaed65:   add    edx,0x2
  0x000000011baaed68:   mov    DWORD PTR [rsi+0xac],edx
  0x000000011baaed6e:   and    edx,0x1ffffe
  0x000000011baaed74:   cmp    edx,0x0
  0x000000011baaed77:   je     0x000000011baafaf0
  0x000000011baaed7d:   movabs rsi,0x13a7566a8              ;   {metadata(method data for {method} {0x00000008000bf490} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x000000011baaed87:   lea    rsi,[rsi+0x160]
  0x000000011baaed8e:   movabs rdi,0x61f13cc38              ;   {oop(a 'jdk/incubator/vector/Short128Vector$Short128Mask$$Lambda$89+0x0000000800c25ee0'{0x000000061f13cc38})}
  0x000000011baaed98:   mov    rdx,rdi
  0x000000011baaed9b:   test   rdx,rdx
  0x000000011baaed9e:   jne    0x000000011baaeda4
  0x000000011baaeda0:   or     QWORD PTR [rsi],0x1
  0x000000011baaeda4:   movabs rsi,0x13a760cf0              ;   {metadata(method data for {method} {0x000000013a70ad28} 'maskAll' '(Z)Ljdk/incubator/vector/Short128Vector$Short128Mask;' in 'jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011baaedae:   lea    rsi,[rsi+0x138]
  0x000000011baaedb5:   mov    rdx,rdi
  0x000000011baaedb8:   test   rdx,rdx
  0x000000011baaedbb:   jne    0x000000011baaedc3
  0x000000011baaedbd:   or     QWORD PTR [rsi],0x1
  0x000000011baaedc1:   jmp    0x000000011baaee09
  0x000000011baaedc3:   movabs rdx,0x800c25ee0              ;   {metadata('jdk/incubator/vector/Short128Vector$Short128Mask$$Lambda$89+0x0000000800c25ee0')}
  0x000000011baaedcd:   xor    rdx,QWORD PTR [rsi]
  0x000000011baaedd0:   test   rdx,0xfffffffffffffffc
  0x000000011baaedd7:   je     0x000000011baaee09
  0x000000011baaedd9:   test   rdx,0x2
  0x000000011baaede0:   jne    0x000000011baaee09
  0x000000011baaede2:   cmp    QWORD PTR [rsi],0x0
  0x000000011baaede9:   je     0x000000011baaee06
  0x000000011baaedeb:   cmp    QWORD PTR [rsi],0x1
  0x000000011baaedf2:   je     0x000000011baaee06
  0x000000011baaedf4:   xor    rdx,QWORD PTR [rsi]
  0x000000011baaedf7:   test   rdx,0xfffffffffffffffc
  0x000000011baaedfe:   je     0x000000011baaee09
  0x000000011baaee00:   or     QWORD PTR [rsi],0x2
  0x000000011baaee04:   jmp    0x000000011baaee09
  0x000000011baaee06:   mov    QWORD PTR [rsi],rdx
  0x000000011baaee09:   movabs rsi,0x13a760cf0              ;   {metadata(method data for {method} {0x000000013a70ad28} 'maskAll' '(Z)Ljdk/incubator/vector/Short128Vector$Short128Mask;' in 'jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011baaee13:   add    QWORD PTR [rsi+0x148],0x1
  0x000000011baaee1b:   movabs rsi,0x61f0bf360              ;   {oop(a 'java/lang/Class'{0x000000061f0bf360} = 'jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011baaee25:   movabs rdx,0x7ffb00230              ;   {oop(a 'java/lang/Class'{0x00000007ffb00230} = short)}
  0x000000011baaee2f:   movabs r8,0xffffffffffffffff
  0x000000011baaee39:   mov    ecx,0x8
  0x000000011baaee3e:   movabs r9,0x0                       ;   {oop(NULL)}
  0x000000011baaee48:   nop    DWORD PTR [rax+0x0]
  0x000000011baaee4f:   call   0x000000011ba9b240           ; ImmutableOopMap {[248]=Oop [256]=Oop }
                                                            ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Short128Vector$Short128Mask::maskAll@24 (line 744)
                                                            ; - jdk.incubator.vector.ShortVector$ShortSpecies::maskAll@66 (line 4323)
                                                            ; - jdk.incubator.vector.Short128Vector$Short128Mask::anyTrue@15 (line 729)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@24 (line 603)
                                                            ;   {static_call}
  0x000000011baaee54:   cmp    rax,0x0
  0x000000011baaee58:   jne    0x000000011baaee70
  0x000000011baaee5a:   movabs rcx,0x13a760cf0              ;   {metadata(method data for {method} {0x000000013a70ad28} 'maskAll' '(Z)Ljdk/incubator/vector/Short128Vector$Short128Mask;' in 'jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011baaee64:   or     BYTE PTR [rcx+0x151],0x1
  0x000000011baaee6b:   jmp    0x000000011baaef42
  0x000000011baaee70:   movabs rdx,0x800c7de68              ;   {metadata('jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011baaee7a:   mov    esi,DWORD PTR [rax+0x8]
  0x000000011baaee7d:   movabs r10,0x800000000
  0x000000011baaee87:   add    rsi,r10
  0x000000011baaee8a:   cmp    rdx,rsi
  0x000000011baaee8d:   jne    0x000000011baaef26
  0x000000011baaee93:   movabs rcx,0x13a760cf0              ;   {metadata(method data for {method} {0x000000013a70ad28} 'maskAll' '(Z)Ljdk/incubator/vector/Short128Vector$Short128Mask;' in 'jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011baaee9d:   mov    edx,DWORD PTR [rax+0x8]
  0x000000011baaeea0:   movabs r10,0x800000000
  0x000000011baaeeaa:   add    rdx,r10
  0x000000011baaeead:   cmp    rdx,QWORD PTR [rcx+0x168]
  0x000000011baaeeb4:   jne    0x000000011baaeec3
  0x000000011baaeeb6:   add    QWORD PTR [rcx+0x170],0x1
  0x000000011baaeebe:   jmp    0x000000011baaef42
  0x000000011baaeec3:   cmp    rdx,QWORD PTR [rcx+0x178]
  0x000000011baaeeca:   jne    0x000000011baaeed9
  0x000000011baaeecc:   add    QWORD PTR [rcx+0x180],0x1
  0x000000011baaeed4:   jmp    0x000000011baaef42
  0x000000011baaeed9:   cmp    QWORD PTR [rcx+0x168],0x0
  0x000000011baaeee4:   jne    0x000000011baaeefd
  0x000000011baaeee6:   mov    QWORD PTR [rcx+0x168],rdx
  0x000000011baaeeed:   mov    QWORD PTR [rcx+0x170],0x1
  0x000000011baaeef8:   jmp    0x000000011baaef42
  0x000000011baaeefd:   cmp    QWORD PTR [rcx+0x178],0x0
  0x000000011baaef08:   jne    0x000000011baaef21
  0x000000011baaef0a:   mov    QWORD PTR [rcx+0x178],rdx
  0x000000011baaef11:   mov    QWORD PTR [rcx+0x180],0x1
  0x000000011baaef1c:   jmp    0x000000011baaef42
  0x000000011baaef21:   jmp    0x000000011baaef42
  0x000000011baaef26:   movabs rcx,0x13a760cf0              ;   {metadata(method data for {method} {0x000000013a70ad28} 'maskAll' '(Z)Ljdk/incubator/vector/Short128Vector$Short128Mask;' in 'jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011baaef30:   sub    QWORD PTR [rcx+0x158],0x1
  0x000000011baaef38:   jmp    0x000000011baafb11
  0x000000011baaef3d:   jmp    0x000000011baaef42
  0x000000011baaef42:   mov    rdi,rax
  0x000000011baaef45:   mov    rax,QWORD PTR [rsp+0x100]
  0x000000011baaef4d:   movabs rsi,0x13a7566a8              ;   {metadata(method data for {method} {0x00000008000bf490} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x000000011baaef57:   lea    rsi,[rsi+0x1c8]
  0x000000011baaef5e:   movabs rdx,0x61f13ffc0              ;   {oop(a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000061f13ffc0})}
  0x000000011baaef68:   mov    rcx,rdx
  0x000000011baaef6b:   test   rcx,rcx
  0x000000011baaef6e:   jne    0x000000011baaef74
  0x000000011baaef70:   or     QWORD PTR [rsi],0x1
  0x000000011baaef74:   movabs rsi,0x13a760788              ;   {metadata(method data for {method} {0x000000013a70ab78} 'anyTrue' '()Z' in 'jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011baaef7e:   add    QWORD PTR [rsi+0x160],0x1
  0x000000011baaef86:   movabs rsi,0x13a7566a8              ;   {metadata(method data for {method} {0x00000008000bf490} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x000000011baaef90:   mov    ecx,DWORD PTR [rsi+0xac]
  0x000000011baaef96:   add    ecx,0x2
  0x000000011baaef99:   mov    DWORD PTR [rsi+0xac],ecx
  0x000000011baaef9f:   and    ecx,0x1ffffe
  0x000000011baaefa5:   cmp    ecx,0x0
  0x000000011baaefa8:   je     0x000000011baafb1a
  0x000000011baaefae:   movabs rsi,0x13a800c90              ;   {metadata(method data for {method} {0x000000013a800a68} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000800c00800')}
  0x000000011baaefb8:   lea    rsi,[rsi+0x180]
  0x000000011baaefbf:   test   rdx,rdx
  0x000000011baaefc2:   jne    0x000000011baaefc8
  0x000000011baaefc4:   or     QWORD PTR [rsi],0x1
  0x000000011baaefc8:   movabs rsi,0x13a7566a8              ;   {metadata(method data for {method} {0x00000008000bf490} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x000000011baaefd2:   add    QWORD PTR [rsi+0x128],0x1
  0x000000011baaefda:   movabs rsi,0x13a800c90              ;   {metadata(method data for {method} {0x000000013a800a68} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000800c00800')}
  0x000000011baaefe4:   mov    edx,DWORD PTR [rsi+0xac]
  0x000000011baaefea:   add    edx,0x2
  0x000000011baaefed:   mov    DWORD PTR [rsi+0xac],edx
  0x000000011baaeff3:   and    edx,0x1ffffe
  0x000000011baaeff9:   cmp    edx,0x0
  0x000000011baaeffc:   je     0x000000011baafb3b
  0x000000011baaf002:   movabs rsi,0x13a7566a8              ;   {metadata(method data for {method} {0x00000008000bf490} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x000000011baaf00c:   lea    rsi,[rsi+0x160]
  0x000000011baaf013:   movabs rdx,0x61f13fe38              ;   {oop(a 'jdk/incubator/vector/Short128Vector$Short128Mask$$Lambda$90+0x0000000800c260e8'{0x000000061f13fe38})}
  0x000000011baaf01d:   mov    rcx,rdx
  0x000000011baaf020:   test   rcx,rcx
  0x000000011baaf023:   jne    0x000000011baaf029
  0x000000011baaf025:   or     QWORD PTR [rsi],0x1
  0x000000011baaf029:   movabs rsi,0x13a760788              ;   {metadata(method data for {method} {0x000000013a70ab78} 'anyTrue' '()Z' in 'jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011baaf033:   lea    rsi,[rsi+0x170]
  0x000000011baaf03a:   test   rdx,rdx
  0x000000011baaf03d:   jne    0x000000011baaf045
  0x000000011baaf03f:   or     QWORD PTR [rsi],0x1
  0x000000011baaf043:   jmp    0x000000011baaf08b
  0x000000011baaf045:   movabs rdx,0x800c260e8              ;   {metadata('jdk/incubator/vector/Short128Vector$Short128Mask$$Lambda$90+0x0000000800c260e8')}
  0x000000011baaf04f:   xor    rdx,QWORD PTR [rsi]
  0x000000011baaf052:   test   rdx,0xfffffffffffffffc
  0x000000011baaf059:   je     0x000000011baaf08b
  0x000000011baaf05b:   test   rdx,0x2
  0x000000011baaf062:   jne    0x000000011baaf08b
  0x000000011baaf064:   cmp    QWORD PTR [rsi],0x0
  0x000000011baaf06b:   je     0x000000011baaf088
  0x000000011baaf06d:   cmp    QWORD PTR [rsi],0x1
  0x000000011baaf074:   je     0x000000011baaf088
  0x000000011baaf076:   xor    rdx,QWORD PTR [rsi]
  0x000000011baaf079:   test   rdx,0xfffffffffffffffc
  0x000000011baaf080:   je     0x000000011baaf08b
  0x000000011baaf082:   or     QWORD PTR [rsi],0x2
  0x000000011baaf086:   jmp    0x000000011baaf08b
  0x000000011baaf088:   mov    QWORD PTR [rsi],rdx
  0x000000011baaf08b:   movabs rsi,0x13a760788              ;   {metadata(method data for {method} {0x000000013a70ab78} 'anyTrue' '()Z' in 'jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011baaf095:   add    QWORD PTR [rsi+0x180],0x1
  0x000000011baaf09d:   movabs rdx,0x61f0bf360              ;   {oop(a 'java/lang/Class'{0x000000061f0bf360} = 'jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011baaf0a7:   movabs rcx,0x7ffb00230              ;   {oop(a 'java/lang/Class'{0x00000007ffb00230} = short)}
  0x000000011baaf0b1:   mov    esi,0x4
  0x000000011baaf0b6:   mov    r8d,0x8
  0x000000011baaf0bc:   mov    r9,rax
  0x000000011baaf0bf:   movabs r10,0x61f13fe38              ;   {oop(a 'jdk/incubator/vector/Short128Vector$Short128Mask$$Lambda$90+0x0000000800c260e8'{0x000000061f13fe38})}
  0x000000011baaf0c9:   mov    QWORD PTR [rsp],r10
  0x000000011baaf0cd:   xchg   ax,ax
  0x000000011baaf0cf:   call   0x000000011baafd75           ; ImmutableOopMap {[248]=Oop }
                                                            ;*invokestatic test {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Short128Vector$Short128Mask::anyTrue@23 (line 728)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@24 (line 603)
                                                            ;   {static_call}
  0x000000011baaf0d4:   and    eax,0x1
  0x000000011baaf0d7:   cmp    eax,0x0
  0x000000011baaf0da:   movabs rsi,0x13a846328              ;   {metadata(method data for {method} {0x000000013a844b20} 'tryToParseEightDigitsSimd' '([CI)J' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baaf0e4:   movabs rdi,0x1b8
  0x000000011baaf0ee:   jne    0x000000011baaf0fe
  0x000000011baaf0f4:   movabs rdi,0x1a8
  0x000000011baaf0fe:   mov    rbx,QWORD PTR [rsi+rdi*1]
  0x000000011baaf102:   lea    rbx,[rbx+0x1]
  0x000000011baaf106:   mov    QWORD PTR [rsi+rdi*1],rbx
  0x000000011baaf10a:   jne    0x000000011baaf7a2
  0x000000011baaf110:   mov    rax,QWORD PTR [rsp+0xf8]
  0x000000011baaf118:   movabs rsi,0x13a846328              ;   {metadata(method data for {method} {0x000000013a844b20} 'tryToParseEightDigitsSimd' '([CI)J' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baaf122:   add    QWORD PTR [rsi+0x1c8],0x1
  0x000000011baaf12a:   movabs rsi,0x13a761128              ;   {metadata(method data for {method} {0x000000013a542a08} 'castShape' '(Ljdk/incubator/vector/VectorSpecies;I)Ljdk/incubator/vector/Vector;' in 'jdk/incubator/vector/AbstractVector')}
  0x000000011baaf134:   mov    edi,DWORD PTR [rsi+0xac]
  0x000000011baaf13a:   add    edi,0x2
  0x000000011baaf13d:   mov    DWORD PTR [rsi+0xac],edi
  0x000000011baaf143:   and    edi,0x1ffffe
  0x000000011baaf149:   cmp    edi,0x0
  0x000000011baaf14c:   je     0x000000011baafb5c
  0x000000011baaf152:   mov    rax,QWORD PTR [rsp+0xf8]
  0x000000011baaf15a:   movabs rsi,0x13a761128              ;   {metadata(method data for {method} {0x000000013a542a08} 'castShape' '(Ljdk/incubator/vector/VectorSpecies;I)Ljdk/incubator/vector/Vector;' in 'jdk/incubator/vector/AbstractVector')}
  0x000000011baaf164:   mov    eax,DWORD PTR [rax+0x8]
  0x000000011baaf167:   movabs r10,0x800000000
  0x000000011baaf171:   add    rax,r10
  0x000000011baaf174:   cmp    rax,QWORD PTR [rsi+0x100]
  0x000000011baaf17b:   jne    0x000000011baaf18a
  0x000000011baaf17d:   add    QWORD PTR [rsi+0x108],0x1
  0x000000011baaf185:   jmp    0x000000011baaf1f0
  0x000000011baaf18a:   cmp    rax,QWORD PTR [rsi+0x110]
  0x000000011baaf191:   jne    0x000000011baaf1a0
  0x000000011baaf193:   add    QWORD PTR [rsi+0x118],0x1
  0x000000011baaf19b:   jmp    0x000000011baaf1f0
  0x000000011baaf1a0:   cmp    QWORD PTR [rsi+0x100],0x0
  0x000000011baaf1ab:   jne    0x000000011baaf1c4
  0x000000011baaf1ad:   mov    QWORD PTR [rsi+0x100],rax
  0x000000011baaf1b4:   mov    QWORD PTR [rsi+0x108],0x1
  0x000000011baaf1bf:   jmp    0x000000011baaf1f0
  0x000000011baaf1c4:   cmp    QWORD PTR [rsi+0x110],0x0
  0x000000011baaf1cf:   jne    0x000000011baaf1e8
  0x000000011baaf1d1:   mov    QWORD PTR [rsi+0x110],rax
  0x000000011baaf1d8:   mov    QWORD PTR [rsi+0x118],0x1
  0x000000011baaf1e3:   jmp    0x000000011baaf1f0
  0x000000011baaf1e8:   add    QWORD PTR [rsi+0xf0],0x1
  0x000000011baaf1f0:   mov    rsi,QWORD PTR [rsp+0xf8]
  0x000000011baaf1f8:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011baaf1fd:   movabs rax,0x800c7d7e0
  0x000000011baaf207:   call   0x000000011b42aea0           ; ImmutableOopMap {[248]=Oop }
                                                            ;*invokevirtual vspecies {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@1 (line 282)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {virtual_call}
  0x000000011baaf20c:   mov    edi,DWORD PTR [rax+0x28]     ; implicit exception: dispatches to 0x000000011baafb7d
  0x000000011baaf20f:   shl    rdi,0x3
  0x000000011baaf213:   movabs rsi,0x13a761128              ;   {metadata(method data for {method} {0x000000013a542a08} 'castShape' '(Ljdk/incubator/vector/VectorSpecies;I)Ljdk/incubator/vector/Vector;' in 'jdk/incubator/vector/AbstractVector')}
  0x000000011baaf21d:   add    QWORD PTR [rsi+0x160],0x1
  0x000000011baaf225:   movabs rsi,0x13a761320              ;   {metadata(method data for {method} {0x000000013a7470b0} 'ofCast' '(Ljdk/incubator/vector/LaneType;Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011baaf22f:   mov    edx,DWORD PTR [rsi+0xac]
  0x000000011baaf235:   add    edx,0x2
  0x000000011baaf238:   mov    DWORD PTR [rsi+0xac],edx
  0x000000011baaf23e:   and    edx,0x1ffffe
  0x000000011baaf244:   cmp    edx,0x0
  0x000000011baaf247:   je     0x000000011baafb82
  0x000000011baaf24d:   movabs rsi,0x6003c9238              ;   {oop(a 'jdk/incubator/vector/LaneType'{0x00000006003c9238})}
  0x000000011baaf257:   cmp    rdi,rsi
  0x000000011baaf25a:   movabs rsi,0x13a761320              ;   {metadata(method data for {method} {0x000000013a7470b0} 'ofCast' '(Ljdk/incubator/vector/LaneType;Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011baaf264:   movabs rdx,0xf0
  0x000000011baaf26e:   jne    0x000000011baaf27e
  0x000000011baaf274:   movabs rdx,0x100
  0x000000011baaf27e:   mov    rcx,QWORD PTR [rsi+rdx*1]
  0x000000011baaf282:   lea    rcx,[rcx+0x1]
  0x000000011baaf286:   mov    QWORD PTR [rsi+rdx*1],rcx
  0x000000011baaf28a:   jne    0x000000011baaf40c
  0x000000011baaf290:   movabs rsi,0x13a761320              ;   {metadata(method data for {method} {0x000000013a7470b0} 'ofCast' '(Ljdk/incubator/vector/LaneType;Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011baaf29a:   add    QWORD PTR [rsi+0x110],0x1
  0x000000011baaf2a2:   movabs rsi,0x13a761498              ;   {metadata(method data for {method} {0x000000013a746ff0} 'ofCopy' '(Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011baaf2ac:   mov    edx,DWORD PTR [rsi+0xac]
  0x000000011baaf2b2:   add    edx,0x2
  0x000000011baaf2b5:   mov    DWORD PTR [rsi+0xac],edx
  0x000000011baaf2bb:   and    edx,0x1ffffe
  0x000000011baaf2c1:   cmp    edx,0x0
  0x000000011baaf2c4:   je     0x000000011baafba3
  0x000000011baaf2ca:   movabs rsi,0x13a761498              ;   {metadata(method data for {method} {0x000000013a746ff0} 'ofCopy' '(Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011baaf2d4:   add    QWORD PTR [rsi+0xf0],0x1
  0x000000011baaf2dc:   movabs rsi,0x13a7615d8              ;   {metadata(method data for {method} {0x000000013a7472a0} 'findConv' '(CLjdk/incubator/vector/LaneType;Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011baaf2e6:   mov    edx,DWORD PTR [rsi+0xac]
  0x000000011baaf2ec:   add    edx,0x2
  0x000000011baaf2ef:   mov    DWORD PTR [rsi+0xac],edx
  0x000000011baaf2f5:   and    edx,0x1ffffe
  0x000000011baaf2fb:   cmp    edx,0x0
  0x000000011baaf2fe:   je     0x000000011baafbc4
  0x000000011baaf304:   movabs rsi,0x13a7615d8              ;   {metadata(method data for {method} {0x000000013a7472a0} 'findConv' '(CLjdk/incubator/vector/LaneType;Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011baaf30e:   add    QWORD PTR [rsi+0xf0],0x1
  0x000000011baaf316:   movabs rsi,0x13a75f580              ;   {metadata(method data for {method} {0x000000013a7477f0} 'cacheOf' '(CLjdk/incubator/vector/LaneType;)[Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011baaf320:   mov    edx,DWORD PTR [rsi+0xac]
  0x000000011baaf326:   add    edx,0x2
  0x000000011baaf329:   mov    DWORD PTR [rsi+0xac],edx
  0x000000011baaf32f:   and    edx,0x1ffffe
  0x000000011baaf335:   cmp    edx,0x0
  0x000000011baaf338:   je     0x000000011baafbe5
  0x000000011baaf33e:   movabs rsi,0x13a75f580              ;   {metadata(method data for {method} {0x000000013a7477f0} 'cacheOf' '(CLjdk/incubator/vector/LaneType;)[Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011baaf348:   inc    DWORD PTR [rsi+0xf0]
  0x000000011baaf34e:   movabs rsi,0x13a75f580              ;   {metadata(method data for {method} {0x000000013a7477f0} 'cacheOf' '(CLjdk/incubator/vector/LaneType;)[Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011baaf358:   inc    DWORD PTR [rsi+0x188]
  0x000000011baaf35e:   movabs rsi,0x13a75f580              ;   {metadata(method data for {method} {0x000000013a7477f0} 'cacheOf' '(CLjdk/incubator/vector/LaneType;)[Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011baaf368:   inc    DWORD PTR [rsi+0x198]
  0x000000011baaf36e:   mov    esi,DWORD PTR [rdi+0x20]     ; implicit exception: dispatches to 0x000000011baafc06
  0x000000011baaf371:   mov    edx,0x7
  0x000000011baaf376:   movabs rcx,0x61f103198              ;   {oop(a 'jdk/incubator/vector/VectorOperators$ConversionImpl'[][7] {0x000000061f103198})}
  0x000000011baaf380:   cmp    edx,esi
  0x000000011baaf382:   jbe    0x000000011baafc0b
  0x000000011baaf388:   movsxd rdx,esi
  0x000000011baaf38b:   mov    edx,DWORD PTR [rcx+rdx*4+0x10]; implicit exception: dispatches to 0x000000011baafc19
  0x000000011baaf38f:   shl    rdx,0x3
  0x000000011baaf393:   cmp    esi,DWORD PTR [rdx+0xc]      ; implicit exception: dispatches to 0x000000011baafc1e
  0x000000011baaf396:   jae    0x000000011baafc28
  0x000000011baaf39c:   movsxd rsi,esi
  0x000000011baaf39f:   mov    esi,DWORD PTR [rdx+rsi*4+0x10]
  0x000000011baaf3a3:   shl    rsi,0x3
  0x000000011baaf3a7:   cmp    rsi,0x0
  0x000000011baaf3ab:   movabs rdx,0x13a7615d8              ;   {metadata(method data for {method} {0x000000013a7472a0} 'findConv' '(CLjdk/incubator/vector/LaneType;Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011baaf3b5:   movabs rcx,0x110
  0x000000011baaf3bf:   jne    0x000000011baaf3cf
  0x000000011baaf3c5:   movabs rcx,0x100
  0x000000011baaf3cf:   mov    rbx,QWORD PTR [rdx+rcx*1]
  0x000000011baaf3d3:   lea    rbx,[rbx+0x1]
  0x000000011baaf3d7:   mov    QWORD PTR [rdx+rcx*1],rbx
  0x000000011baaf3db:   jne    0x000000011baaf54f
  0x000000011baaf3e1:   movabs rsi,0x13a7615d8              ;   {metadata(method data for {method} {0x000000013a7472a0} 'findConv' '(CLjdk/incubator/vector/LaneType;Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011baaf3eb:   add    QWORD PTR [rsi+0x120],0x1
  0x000000011baaf3f3:   mov    esi,0x49
  0x000000011baaf3f8:   mov    rdx,rdi
  0x000000011baaf3fb:   mov    rcx,rdi
  0x000000011baaf3fe:   nop
  0x000000011baaf3ff:   call   0x000000011b42e080           ; ImmutableOopMap {[248]=Oop }
                                                            ;*invokestatic makeConv {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::findConv@29 (line 1008)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCopy@4 (line 979)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCast@6 (line 982)
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@20 (line 286)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {static_call}
  0x000000011baaf404:   mov    rsi,rax
  0x000000011baaf407:   jmp    0x000000011baaf54f
  0x000000011baaf40c:   movabs rsi,0x13a761320              ;   {metadata(method data for {method} {0x000000013a7470b0} 'ofCast' '(Ljdk/incubator/vector/LaneType;Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011baaf416:   add    QWORD PTR [rsi+0x120],0x1
  0x000000011baaf41e:   movabs rsi,0x13a7615d8              ;   {metadata(method data for {method} {0x000000013a7472a0} 'findConv' '(CLjdk/incubator/vector/LaneType;Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011baaf428:   mov    edx,DWORD PTR [rsi+0xac]
  0x000000011baaf42e:   add    edx,0x2
  0x000000011baaf431:   mov    DWORD PTR [rsi+0xac],edx
  0x000000011baaf437:   and    edx,0x1ffffe
  0x000000011baaf43d:   cmp    edx,0x0
  0x000000011baaf440:   je     0x000000011baafc36
  0x000000011baaf446:   movabs rsi,0x13a7615d8              ;   {metadata(method data for {method} {0x000000013a7472a0} 'findConv' '(CLjdk/incubator/vector/LaneType;Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011baaf450:   add    QWORD PTR [rsi+0xf0],0x1
  0x000000011baaf458:   movabs rsi,0x13a75f580              ;   {metadata(method data for {method} {0x000000013a7477f0} 'cacheOf' '(CLjdk/incubator/vector/LaneType;)[Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011baaf462:   mov    edx,DWORD PTR [rsi+0xac]
  0x000000011baaf468:   add    edx,0x2
  0x000000011baaf46b:   mov    DWORD PTR [rsi+0xac],edx
  0x000000011baaf471:   and    edx,0x1ffffe
  0x000000011baaf477:   cmp    edx,0x0
  0x000000011baaf47a:   je     0x000000011baafc57
  0x000000011baaf480:   movabs rsi,0x13a75f580              ;   {metadata(method data for {method} {0x000000013a7477f0} 'cacheOf' '(CLjdk/incubator/vector/LaneType;)[Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011baaf48a:   inc    DWORD PTR [rsi+0xf0]
  0x000000011baaf490:   movabs rsi,0x13a75f580              ;   {metadata(method data for {method} {0x000000013a7477f0} 'cacheOf' '(CLjdk/incubator/vector/LaneType;)[Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011baaf49a:   inc    DWORD PTR [rsi+0x188]
  0x000000011baaf4a0:   movabs rsi,0x13a75f580              ;   {metadata(method data for {method} {0x000000013a7477f0} 'cacheOf' '(CLjdk/incubator/vector/LaneType;)[Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011baaf4aa:   inc    DWORD PTR [rsi+0x198]
  0x000000011baaf4b0:   mov    esi,DWORD PTR [rdi+0x20]     ; implicit exception: dispatches to 0x000000011baafc78
  0x000000011baaf4b3:   mov    edx,0x7
  0x000000011baaf4b8:   movabs rcx,0x61f103198              ;   {oop(a 'jdk/incubator/vector/VectorOperators$ConversionImpl'[][7] {0x000000061f103198})}
  0x000000011baaf4c2:   cmp    edx,esi
  0x000000011baaf4c4:   jbe    0x000000011baafc7d
  0x000000011baaf4ca:   movsxd rsi,esi
  0x000000011baaf4cd:   mov    esi,DWORD PTR [rcx+rsi*4+0x10]; implicit exception: dispatches to 0x000000011baafc8b
  0x000000011baaf4d1:   shl    rsi,0x3
  0x000000011baaf4d5:   cmp    DWORD PTR [rsi+0xc],0x5      ; implicit exception: dispatches to 0x000000011baafc90
  0x000000011baaf4dc:   jbe    0x000000011baafc9a
  0x000000011baaf4e2:   mov    esi,DWORD PTR [rsi+0x24]
  0x000000011baaf4e5:   shl    rsi,0x3
  0x000000011baaf4e9:   cmp    rsi,0x0
  0x000000011baaf4ed:   movabs rdx,0x13a7615d8              ;   {metadata(method data for {method} {0x000000013a7472a0} 'findConv' '(CLjdk/incubator/vector/LaneType;Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011baaf4f7:   movabs rcx,0x110
  0x000000011baaf501:   jne    0x000000011baaf511
  0x000000011baaf507:   movabs rcx,0x100
  0x000000011baaf511:   mov    rbx,QWORD PTR [rdx+rcx*1]
  0x000000011baaf515:   lea    rbx,[rbx+0x1]
  0x000000011baaf519:   mov    QWORD PTR [rdx+rcx*1],rbx
  0x000000011baaf51d:   jne    0x000000011baaf54f
  0x000000011baaf523:   movabs rsi,0x13a7615d8              ;   {metadata(method data for {method} {0x000000013a7472a0} 'findConv' '(CLjdk/incubator/vector/LaneType;Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011baaf52d:   add    QWORD PTR [rsi+0x120],0x1
  0x000000011baaf535:   movabs rcx,0x6003c9238              ;   {oop(a 'jdk/incubator/vector/LaneType'{0x00000006003c9238})}
  0x000000011baaf53f:   mov    esi,0x43
  0x000000011baaf544:   mov    rdx,rdi
  0x000000011baaf547:   call   0x000000011b42e080           ; ImmutableOopMap {[248]=Oop }
                                                            ;*invokestatic makeConv {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::findConv@29 (line 1008)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCast@14 (line 983)
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@20 (line 286)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {static_call}
  0x000000011baaf54c:   mov    rsi,rax
  0x000000011baaf54f:   mov    rax,QWORD PTR [rsp+0xf8]
  0x000000011baaf557:   mov    rdx,rax
  0x000000011baaf55a:   movabs rcx,0x13a761128              ;   {metadata(method data for {method} {0x000000013a542a08} 'castShape' '(Ljdk/incubator/vector/VectorSpecies;I)Ljdk/incubator/vector/Vector;' in 'jdk/incubator/vector/AbstractVector')}
  0x000000011baaf564:   mov    edx,DWORD PTR [rdx+0x8]
  0x000000011baaf567:   movabs r10,0x800000000
  0x000000011baaf571:   add    rdx,r10
  0x000000011baaf574:   cmp    rdx,QWORD PTR [rcx+0x180]
  0x000000011baaf57b:   jne    0x000000011baaf58a
  0x000000011baaf57d:   add    QWORD PTR [rcx+0x188],0x1
  0x000000011baaf585:   jmp    0x000000011baaf5f0
  0x000000011baaf58a:   cmp    rdx,QWORD PTR [rcx+0x190]
  0x000000011baaf591:   jne    0x000000011baaf5a0
  0x000000011baaf593:   add    QWORD PTR [rcx+0x198],0x1
  0x000000011baaf59b:   jmp    0x000000011baaf5f0
  0x000000011baaf5a0:   cmp    QWORD PTR [rcx+0x180],0x0
  0x000000011baaf5ab:   jne    0x000000011baaf5c4
  0x000000011baaf5ad:   mov    QWORD PTR [rcx+0x180],rdx
  0x000000011baaf5b4:   mov    QWORD PTR [rcx+0x188],0x1
  0x000000011baaf5bf:   jmp    0x000000011baaf5f0
  0x000000011baaf5c4:   cmp    QWORD PTR [rcx+0x190],0x0
  0x000000011baaf5cf:   jne    0x000000011baaf5e8
  0x000000011baaf5d1:   mov    QWORD PTR [rcx+0x190],rdx
  0x000000011baaf5d8:   mov    QWORD PTR [rcx+0x198],0x1
  0x000000011baaf5e3:   jmp    0x000000011baaf5f0
  0x000000011baaf5e8:   add    QWORD PTR [rcx+0x170],0x1
  0x000000011baaf5f0:   movabs rcx,0x6003c9198              ;   {oop(a 'jdk/incubator/vector/IntVector$IntSpecies'{0x00000006003c9198})}
  0x000000011baaf5fa:   mov    rdx,rsi
  0x000000011baaf5fd:   mov    r8d,0x0
  0x000000011baaf603:   mov    rsi,rax
  0x000000011baaf606:   nop    DWORD PTR [rax+0x0]
  0x000000011baaf60d:   movabs rax,0xffffffffffffffff
  0x000000011baaf617:   call   0x000000011b42ada0           ; ImmutableOopMap {}
                                                            ;*invokevirtual convertShape {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@31 (line 287)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {virtual_call}
  0x000000011baaf61c:   cmp    rax,QWORD PTR [rax]          ; implicit exception: dispatches to 0x000000011baafcac
  0x000000011baaf61f:   mov    rdx,rax
  0x000000011baaf622:   movabs rsi,0x13a846328              ;   {metadata(method data for {method} {0x000000013a844b20} 'tryToParseEightDigitsSimd' '([CI)J' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baaf62c:   mov    edx,DWORD PTR [rdx+0x8]
  0x000000011baaf62f:   movabs r10,0x800000000
  0x000000011baaf639:   add    rdx,r10
  0x000000011baaf63c:   cmp    rdx,QWORD PTR [rsi+0x210]
  0x000000011baaf643:   jne    0x000000011baaf652
  0x000000011baaf645:   add    QWORD PTR [rsi+0x218],0x1
  0x000000011baaf64d:   jmp    0x000000011baaf6b8
  0x000000011baaf652:   cmp    rdx,QWORD PTR [rsi+0x220]
  0x000000011baaf659:   jne    0x000000011baaf668
  0x000000011baaf65b:   add    QWORD PTR [rsi+0x228],0x1
  0x000000011baaf663:   jmp    0x000000011baaf6b8
  0x000000011baaf668:   cmp    QWORD PTR [rsi+0x210],0x0
  0x000000011baaf673:   jne    0x000000011baaf68c
  0x000000011baaf675:   mov    QWORD PTR [rsi+0x210],rdx
  0x000000011baaf67c:   mov    QWORD PTR [rsi+0x218],0x1
  0x000000011baaf687:   jmp    0x000000011baaf6b8
  0x000000011baaf68c:   cmp    QWORD PTR [rsi+0x220],0x0
  0x000000011baaf697:   jne    0x000000011baaf6b0
  0x000000011baaf699:   mov    QWORD PTR [rsi+0x220],rdx
  0x000000011baaf6a0:   mov    QWORD PTR [rsi+0x228],0x1
  0x000000011baaf6ab:   jmp    0x000000011baaf6b8
  0x000000011baaf6b0:   add    QWORD PTR [rsi+0x200],0x1
  0x000000011baaf6b8:   movabs rdx,0x61f0b0110              ;   {oop(a 'jdk/incubator/vector/Int256Vector'{0x000000061f0b0110})}
  0x000000011baaf6c2:   mov    rsi,rax
  0x000000011baaf6c5:   movabs rax,0xffffffffffffffff
  0x000000011baaf6cf:   call   0x000000011b42ade0           ; ImmutableOopMap {}
                                                            ;*invokevirtual mul {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@45 (line 608)
                                                            ;   {virtual_call}
  0x000000011baaf6d4:   cmp    rax,QWORD PTR [rax]          ; implicit exception: dispatches to 0x000000011baafcb1
  0x000000011baaf6d7:   mov    rdx,rax
  0x000000011baaf6da:   movabs rsi,0x13a846328              ;   {metadata(method data for {method} {0x000000013a844b20} 'tryToParseEightDigitsSimd' '([CI)J' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baaf6e4:   mov    edx,DWORD PTR [rdx+0x8]
  0x000000011baaf6e7:   movabs r10,0x800000000
  0x000000011baaf6f1:   add    rdx,r10
  0x000000011baaf6f4:   cmp    rdx,QWORD PTR [rsi+0x248]
  0x000000011baaf6fb:   jne    0x000000011baaf70a
  0x000000011baaf6fd:   add    QWORD PTR [rsi+0x250],0x1
  0x000000011baaf705:   jmp    0x000000011baaf770
  0x000000011baaf70a:   cmp    rdx,QWORD PTR [rsi+0x258]
  0x000000011baaf711:   jne    0x000000011baaf720
  0x000000011baaf713:   add    QWORD PTR [rsi+0x260],0x1
  0x000000011baaf71b:   jmp    0x000000011baaf770
  0x000000011baaf720:   cmp    QWORD PTR [rsi+0x248],0x0
  0x000000011baaf72b:   jne    0x000000011baaf744
  0x000000011baaf72d:   mov    QWORD PTR [rsi+0x248],rdx
  0x000000011baaf734:   mov    QWORD PTR [rsi+0x250],0x1
  0x000000011baaf73f:   jmp    0x000000011baaf770
  0x000000011baaf744:   cmp    QWORD PTR [rsi+0x258],0x0
  0x000000011baaf74f:   jne    0x000000011baaf768
  0x000000011baaf751:   mov    QWORD PTR [rsi+0x258],rdx
  0x000000011baaf758:   mov    QWORD PTR [rsi+0x260],0x1
  0x000000011baaf763:   jmp    0x000000011baaf770
  0x000000011baaf768:   add    QWORD PTR [rsi+0x238],0x1
  0x000000011baaf770:   movabs rdx,0x61f0d0408              ;   {oop(a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x000000061f0d0408})}
  0x000000011baaf77a:   mov    rsi,rax
  0x000000011baaf77d:   movabs rax,0xffffffffffffffff
  0x000000011baaf787:   call   0x000000011b42ae20           ; ImmutableOopMap {}
                                                            ;*invokevirtual reduceLanesToLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@51 (line 609)
                                                            ;   {virtual_call}
  0x000000011baaf78c:   add    rsp,0x110
  0x000000011baaf793:   pop    rbp
  0x000000011baaf794:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x000000011baaf79b:   ja     0x000000011baafcb6
  0x000000011baaf7a1:   ret
  0x000000011baaf7a2:   movabs rax,0xffffffffffffffff
  0x000000011baaf7ac:   add    rsp,0x110
  0x000000011baaf7b3:   pop    rbp
  0x000000011baaf7b4:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x000000011baaf7bb:   ja     0x000000011baafccc
  0x000000011baaf7c1:   ret
  0x000000011baaf7c2:   movabs r10,0x13a844b20              ;   {metadata({method} {0x000000013a844b20} 'tryToParseEightDigitsSimd' '([CI)J' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011baaf7cc:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baaf7d1:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011baaf7d9:   call   0x000000011b4db500           ; ImmutableOopMap {rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@-1 (line 600)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baaf7de:   jmp    0x000000011baae0fa
  0x000000011baaf7e3:   movabs r10,0x13a6db640              ;   {metadata({method} {0x000000013a6db640} 'fromCharArray' '(Ljdk/incubator/vector/VectorSpecies;[CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011baaf7ed:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baaf7f2:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011baaf7fa:   call   0x000000011b4db500           ; ImmutableOopMap {rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray@-1 (line 3049)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@5 (line 600)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baaf7ff:   jmp    0x000000011baae134
  0x000000011baaf804:   call   0x000000011b4d5b20           ; ImmutableOopMap {rdi=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray@8 (line 3049)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@5 (line 600)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011baaf809:   movabs r10,0x13a62d330              ;   {metadata({method} {0x000000013a62d330} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x000000011baaf813:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baaf818:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011baaf820:   call   0x000000011b4db500           ; ImmutableOopMap {rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 49)
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray@9 (line 3049)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@5 (line 600)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baaf825:   jmp    0x000000011baae216
  0x000000011baaf82a:   movabs r10,0x800068070              ;   {metadata({method} {0x0000000800068070} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x000000011baaf834:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baaf839:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011baaf841:   call   0x000000011b4db500           ; ImmutableOopMap {rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.Objects::checkIndex@-1 (line 359)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 52)
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray@9 (line 3049)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@5 (line 600)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baaf846:   jmp    0x000000011baae258
  0x000000011baaf84b:   mov    QWORD PTR [rsp],0xffffffffffffffe4
  0x000000011baaf853:   call   0x000000011b4d9400           ; ImmutableOopMap {rdi=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 359)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 52)
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray@9 (line 3049)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@5 (line 600)
                                                            ;   {runtime_call deoptimize Runtime1 stub}
  0x000000011baaf858:   mov    QWORD PTR [rsp],0xffffffffffffffe4
  0x000000011baaf860:   call   0x000000011b4d9400           ; ImmutableOopMap {rdi=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 359)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 52)
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray@9 (line 3049)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@5 (line 600)
                                                            ;   {runtime_call deoptimize Runtime1 stub}
  0x000000011baaf865:   movabs r10,0x13a6edc60              ;   {metadata({method} {0x000000013a6edc60} 'dummyVector' '()Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector$ShortSpecies')}
  0x000000011baaf86f:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baaf874:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011baaf87c:   call   0x000000011b4db500           ; ImmutableOopMap {rdi=Oop rcx=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.ShortVector$ShortSpecies::dummyVector@-1 (line 4216)
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray@19 (line 3051)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@5 (line 600)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baaf881:   jmp    0x000000011baae2d3
  0x000000011baaf886:   movabs r10,0x13a55a340              ;   {metadata({method} {0x000000013a55a340} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x000000011baaf890:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baaf895:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011baaf89d:   call   0x000000011b4db500           ; ImmutableOopMap {rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 295)
                                                            ; - jdk.incubator.vector.ShortVector$ShortSpecies::dummyVector@1 (line 4216)
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray@19 (line 3051)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@5 (line 600)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baaf8a2:   jmp    0x000000011baae30d
  0x000000011baaf8a7:   movabs r10,0x13a704530              ;   {metadata({method} {0x000000013a704530} 'fromCharArray0' '([CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/Short128Vector')}
  0x000000011baaf8b1:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baaf8b6:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011baaf8be:   call   0x000000011b4db500           ; ImmutableOopMap {rdi=Oop rcx=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.Short128Vector::fromCharArray0@-1 (line 843)
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray@24 (line 3051)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@5 (line 600)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baaf8c3:   jmp    0x000000011baae364
  0x000000011baaf8c8:   movabs r10,0x13a6dcd80              ;   {metadata({method} {0x000000013a6dcd80} 'fromCharArray0Template' '([CI)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011baaf8d2:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baaf8d7:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011baaf8df:   call   0x000000011b4db500           ; ImmutableOopMap {rdi=Oop rcx=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray0Template@-1 (line 3704)
                                                            ; - jdk.incubator.vector.Short128Vector::fromCharArray0@3 (line 843)
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray@24 (line 3051)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@5 (line 600)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baaf8e4:   jmp    0x000000011baae3a1
  0x000000011baaf8e9:   movabs r10,0x13a700e88              ;   {metadata({method} {0x000000013a700e88} 'vspecies' '()Ljdk/incubator/vector/ShortVector$ShortSpecies;' in 'jdk/incubator/vector/Short128Vector')}
  0x000000011baaf8f3:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baaf8f8:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011baaf900:   call   0x000000011b4db500           ; ImmutableOopMap {rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.Short128Vector::vspecies@-1 (line 86)
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray0Template@1 (line 3704)
                                                            ; - jdk.incubator.vector.Short128Vector::fromCharArray0@3 (line 843)
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray@24 (line 3051)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@5 (line 600)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baaf905:   jmp    0x000000011baae3db
  0x000000011baaf90a:   movabs r10,0x13a6ed2e8              ;   {metadata({method} {0x000000013a6ed2e8} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/ShortVector$ShortSpecies')}
  0x000000011baaf914:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baaf919:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011baaf921:   call   0x000000011b4db500           ; ImmutableOopMap {rdi=Oop rcx=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.ShortVector$ShortSpecies::elementType@-1 (line 4118)
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray0Template@10 (line 3706)
                                                            ; - jdk.incubator.vector.Short128Vector::fromCharArray0@3 (line 843)
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray@24 (line 3051)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@5 (line 600)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baaf926:   jmp    0x000000011baae437
  0x000000011baaf92b:   movabs r10,0x13a6de590              ;   {metadata({method} {0x000000013a6de590} 'charArrayAddress' '([CI)J' in 'jdk/incubator/vector/ShortVector')}
  0x000000011baaf935:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baaf93a:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011baaf942:   call   0x000000011b4db500           ; ImmutableOopMap {rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.ShortVector::charArrayAddress@-1 (line 3982)
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray0Template@20 (line 3707)
                                                            ; - jdk.incubator.vector.Short128Vector::fromCharArray0@3 (line 843)
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray@24 (line 3051)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@5 (line 600)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baaf947:   jmp    0x000000011baae483
  0x000000011baaf94c:   movabs r10,0x8000bf490              ;   {metadata({method} {0x00000008000bf490} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x000000011baaf956:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baaf95b:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011baaf963:   call   0x000000011b4db500           ; ImmutableOopMap {rdi=Oop rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@-1
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray0Template@26 (line 3707)
                                                            ; - jdk.incubator.vector.Short128Vector::fromCharArray0@3 (line 843)
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray@24 (line 3051)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@5 (line 600)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baaf968:   jmp    0x000000011baae4ff
  0x000000011baaf96d:   movabs r10,0x13a800a68              ;   {metadata({method} {0x000000013a800a68} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000800c00800')}
  0x000000011baaf977:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baaf97c:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011baaf984:   call   0x000000011b4db500           ; ImmutableOopMap {rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.invoke.LambdaForm$MH/0x0000000800c00800::invoke@-1
                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray0Template@26 (line 3707)
                                                            ; - jdk.incubator.vector.Short128Vector::fromCharArray0@3 (line 843)
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray@24 (line 3051)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@5 (line 600)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baaf989:   jmp    0x000000011baae553
  0x000000011baaf98e:   mov    QWORD PTR [rsp],rax
  0x000000011baaf992:   call   0x000000011b4d7f20           ; ImmutableOopMap {}
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray0Template@34 (line 3705)
                                                            ; - jdk.incubator.vector.Short128Vector::fromCharArray0@3 (line 843)
                                                            ; - jdk.incubator.vector.ShortVector::fromCharArray@24 (line 3051)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@5 (line 600)
                                                            ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000000011baaf997:   call   0x000000011b4d5b20           ; ImmutableOopMap {rdi=Oop }
                                                            ;*invokevirtual sub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@10 (line 601)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011baaf99c:   movabs r10,0x13a6d6538              ;   {metadata({method} {0x000000013a6d6538} 'sub' '(S)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011baaf9a6:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baaf9ab:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011baaf9b3:   call   0x000000011b4db500           ; ImmutableOopMap {rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.ShortVector::sub@-1 (line 1343)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@10 (line 601)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baaf9b8:   jmp    0x000000011baae766
  0x000000011baaf9bd:   movabs r10,0x13a6d4df0              ;   {metadata({method} {0x000000013a6d4df0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;S)Ljdk/incubator/vector/ShortVector;' in 'jdk/incubator/vector/ShortVector')}
  0x000000011baaf9c7:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baaf9cc:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011baaf9d4:   call   0x000000011b4db500           ; ImmutableOopMap {rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.ShortVector::lanewise@-1 (line 800)
                                                            ; - jdk.incubator.vector.ShortVector::sub@5 (line 1343)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@10 (line 601)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baaf9d9:   jmp    0x000000011baae7a3
  0x000000011baaf9de:   movabs r10,0x13a6d1f78              ;   {metadata({method} {0x000000013a6d1f78} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/ShortVector')}
  0x000000011baaf9e8:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baaf9ed:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011baaf9f5:   call   0x000000011b4db500           ; ImmutableOopMap {rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.ShortVector::opKind@-1 (line 71)
                                                            ; - jdk.incubator.vector.ShortVector::lanewise@3 (line 800)
                                                            ; - jdk.incubator.vector.ShortVector::sub@5 (line 1343)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@10 (line 601)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baaf9fa:   jmp    0x000000011baae7dd
  0x000000011baaf9ff:   movabs r10,0x13a550a38              ;   {metadata({method} {0x000000013a550a38} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/VectorOperators')}
  0x000000011baafa09:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baafa0e:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011baafa16:   call   0x000000011b4db500           ; ImmutableOopMap {rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.VectorOperators::opKind@-1 (line 409)
                                                            ; - jdk.incubator.vector.ShortVector::opKind@2 (line 71)
                                                            ; - jdk.incubator.vector.ShortVector::lanewise@3 (line 800)
                                                            ; - jdk.incubator.vector.ShortVector::sub@5 (line 1343)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@10 (line 601)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baafa1b:   jmp    0x000000011baae817
  0x000000011baafa20:   movabs r10,0x13a73e738              ;   {metadata({method} {0x000000013a73e738} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl')}
  0x000000011baafa2a:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baafa2f:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011baafa37:   call   0x000000011b4db500           ; ImmutableOopMap {rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.VectorOperators$OperatorImpl::opKind@-1 (line 883)
                                                            ; - jdk.incubator.vector.VectorOperators::opKind@5 (line 409)
                                                            ; - jdk.incubator.vector.ShortVector::opKind@2 (line 71)
                                                            ; - jdk.incubator.vector.ShortVector::lanewise@3 (line 800)
                                                            ; - jdk.incubator.vector.ShortVector::sub@5 (line 1343)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@10 (line 601)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baafa3c:   jmp    0x000000011baae8df
  0x000000011baafa41:   call   0x000000011b4d5b20           ; ImmutableOopMap {rax=Oop }
                                                            ;*invokevirtual compare {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@21 (line 603)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011baafa46:   call   0x000000011b4d5b20           ; ImmutableOopMap {[248]=Oop rax=Oop }
                                                            ;*invokevirtual anyTrue {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@24 (line 603)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011baafa4b:   movabs r10,0x13a70ab78              ;   {metadata({method} {0x000000013a70ab78} 'anyTrue' '()Z' in 'jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011baafa55:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baafa5a:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011baafa62:   call   0x000000011b4db500           ; ImmutableOopMap {[248]=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.Short128Vector$Short128Mask::anyTrue@-1 (line 728)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@24 (line 603)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baafa67:   jmp    0x000000011baaeba4
  0x000000011baafa6c:   movabs r10,0x13a709d00              ;   {metadata({method} {0x000000013a709d00} 'vspecies' '()Ljdk/incubator/vector/ShortVector$ShortSpecies;' in 'jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011baafa76:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baafa7b:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011baafa83:   call   0x000000011b4db500           ; ImmutableOopMap {[248]=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.Short128Vector$Short128Mask::vspecies@-1 (line 579)
                                                            ; - jdk.incubator.vector.Short128Vector$Short128Mask::anyTrue@11 (line 729)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@24 (line 603)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baafa88:   jmp    0x000000011baaebe1
  0x000000011baafa8d:   movabs r10,0x13a6ee698              ;   {metadata({method} {0x000000013a6ee698} 'maskAll' '(Z)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/ShortVector$ShortSpecies')}
  0x000000011baafa97:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baafa9c:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011baafaa4:   call   0x000000011b4db500           ; ImmutableOopMap {[248]=Oop rax=Oop rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.ShortVector$ShortSpecies::maskAll@-1 (line 4319)
                                                            ; - jdk.incubator.vector.Short128Vector$Short128Mask::anyTrue@15 (line 729)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@24 (line 603)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baafaa9:   jmp    0x000000011baaec28
  0x000000011baafaae:   movabs r10,0x13a70ad28              ;   {metadata({method} {0x000000013a70ad28} 'maskAll' '(Z)Ljdk/incubator/vector/Short128Vector$Short128Mask;' in 'jdk/incubator/vector/Short128Vector$Short128Mask')}
  0x000000011baafab8:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baafabd:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011baafac5:   call   0x000000011b4db500           ; ImmutableOopMap {[248]=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.Short128Vector$Short128Mask::maskAll@-1 (line 744)
                                                            ; - jdk.incubator.vector.ShortVector$ShortSpecies::maskAll@66 (line 4323)
                                                            ; - jdk.incubator.vector.Short128Vector$Short128Mask::anyTrue@15 (line 729)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@24 (line 603)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baafaca:   jmp    0x000000011baaeca0
  0x000000011baafacf:   movabs r10,0x8000bf490              ;   {metadata({method} {0x00000008000bf490} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x000000011baafad9:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baafade:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011baafae6:   call   0x000000011b4db500           ; ImmutableOopMap {[248]=Oop [256]=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@-1
                                                            ; - jdk.incubator.vector.Short128Vector$Short128Mask::maskAll@19 (line 745)
                                                            ; - jdk.incubator.vector.ShortVector$ShortSpecies::maskAll@66 (line 4323)
                                                            ; - jdk.incubator.vector.Short128Vector$Short128Mask::anyTrue@15 (line 729)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@24 (line 603)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baafaeb:   jmp    0x000000011baaed29
  0x000000011baafaf0:   movabs r10,0x13a800a68              ;   {metadata({method} {0x000000013a800a68} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000800c00800')}
  0x000000011baafafa:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baafaff:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011baafb07:   call   0x000000011b4db500           ; ImmutableOopMap {[248]=Oop [256]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.invoke.LambdaForm$MH/0x0000000800c00800::invoke@-1
                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
                                                            ; - jdk.incubator.vector.Short128Vector$Short128Mask::maskAll@19 (line 745)
                                                            ; - jdk.incubator.vector.ShortVector$ShortSpecies::maskAll@66 (line 4323)
                                                            ; - jdk.incubator.vector.Short128Vector$Short128Mask::anyTrue@15 (line 729)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@24 (line 603)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baafb0c:   jmp    0x000000011baaed7d
  0x000000011baafb11:   mov    QWORD PTR [rsp],rax
  0x000000011baafb15:   call   0x000000011b4d7f20           ; ImmutableOopMap {[248]=Oop [256]=Oop }
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Short128Vector$Short128Mask::maskAll@27 (line 744)
                                                            ; - jdk.incubator.vector.ShortVector$ShortSpecies::maskAll@66 (line 4323)
                                                            ; - jdk.incubator.vector.Short128Vector$Short128Mask::anyTrue@15 (line 729)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@24 (line 603)
                                                            ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000000011baafb1a:   movabs r10,0x8000bf490              ;   {metadata({method} {0x00000008000bf490} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x000000011baafb24:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baafb29:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011baafb31:   call   0x000000011b4db500           ; ImmutableOopMap {[248]=Oop rdi=Oop rax=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@-1
                                                            ; - jdk.incubator.vector.Short128Vector$Short128Mask::anyTrue@18 (line 729)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@24 (line 603)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baafb36:   jmp    0x000000011baaefae
  0x000000011baafb3b:   movabs r10,0x13a800a68              ;   {metadata({method} {0x000000013a800a68} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000800c00800')}
  0x000000011baafb45:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baafb4a:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011baafb52:   call   0x000000011b4db500           ; ImmutableOopMap {[248]=Oop rdi=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.invoke.LambdaForm$MH/0x0000000800c00800::invoke@-1
                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
                                                            ; - jdk.incubator.vector.Short128Vector$Short128Mask::anyTrue@18 (line 729)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@24 (line 603)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baafb57:   jmp    0x000000011baaf002
  0x000000011baafb5c:   movabs r10,0x13a542a08              ;   {metadata({method} {0x000000013a542a08} 'castShape' '(Ljdk/incubator/vector/VectorSpecies;I)Ljdk/incubator/vector/Vector;' in 'jdk/incubator/vector/AbstractVector')}
  0x000000011baafb66:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baafb6b:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011baafb73:   call   0x000000011b4db500           ; ImmutableOopMap {[248]=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@-1 (line 282)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baafb78:   jmp    0x000000011baaf152
  0x000000011baafb7d:   call   0x000000011b4d5b20           ; ImmutableOopMap {[248]=Oop }
                                                            ;*getfield laneType {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.incubator.vector.AbstractVector::castShape@12 (line 285)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011baafb82:   movabs r10,0x13a7470b0              ;   {metadata({method} {0x000000013a7470b0} 'ofCast' '(Ljdk/incubator/vector/LaneType;Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011baafb8c:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baafb91:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011baafb99:   call   0x000000011b4db500           ; ImmutableOopMap {[248]=Oop rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCast@-1 (line 982)
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@20 (line 286)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baafb9e:   jmp    0x000000011baaf24d
  0x000000011baafba3:   movabs r10,0x13a746ff0              ;   {metadata({method} {0x000000013a746ff0} 'ofCopy' '(Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011baafbad:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baafbb2:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011baafbba:   call   0x000000011b4db500           ; ImmutableOopMap {[248]=Oop rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCopy@-1 (line 979)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCast@6 (line 982)
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@20 (line 286)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baafbbf:   jmp    0x000000011baaf2ca
  0x000000011baafbc4:   movabs r10,0x13a7472a0              ;   {metadata({method} {0x000000013a7472a0} 'findConv' '(CLjdk/incubator/vector/LaneType;Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011baafbce:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baafbd3:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011baafbdb:   call   0x000000011b4db500           ; ImmutableOopMap {[248]=Oop rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::findConv@-1 (line 1002)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCopy@4 (line 979)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCast@6 (line 982)
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@20 (line 286)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baafbe0:   jmp    0x000000011baaf304
  0x000000011baafbe5:   movabs r10,0x13a7477f0              ;   {metadata({method} {0x000000013a7477f0} 'cacheOf' '(CLjdk/incubator/vector/LaneType;)[Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011baafbef:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baafbf4:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011baafbfc:   call   0x000000011b4db500           ; ImmutableOopMap {[248]=Oop rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::cacheOf@-1 (line 1072)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::findConv@2 (line 1002)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCopy@4 (line 979)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCast@6 (line 982)
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@20 (line 286)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baafc01:   jmp    0x000000011baaf33e
  0x000000011baafc06:   call   0x000000011b4d5b20           ; ImmutableOopMap {[248]=Oop rdi=Oop }
                                                            ;*getfield switchKey {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.incubator.vector.VectorOperators$ConversionImpl::cacheOf@57 (line 1076)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::findConv@2 (line 1002)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCopy@4 (line 979)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCast@6 (line 982)
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@20 (line 286)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011baafc0b:   mov    QWORD PTR [rsp],rsi
  0x000000011baafc0f:   mov    QWORD PTR [rsp+0x8],rcx
  0x000000011baafc14:   call   0x000000011b4d4f20           ; ImmutableOopMap {[248]=Oop rdi=Oop rcx=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::cacheOf@60 (line 1076)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::findConv@2 (line 1002)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCopy@4 (line 979)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCast@6 (line 982)
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@20 (line 286)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011baafc19:   call   0x000000011b4d5b20           ; ImmutableOopMap {[248]=Oop rdi=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::cacheOf@60 (line 1076)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::findConv@2 (line 1002)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCopy@4 (line 979)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCast@6 (line 982)
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@20 (line 286)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011baafc1e:   call   0x000000011b4d5b20           ; ImmutableOopMap {[248]=Oop rdi=Oop rdx=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::findConv@15 (line 1004)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCopy@4 (line 979)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCast@6 (line 982)
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@20 (line 286)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011baafc23:   call   0x000000011b4d5b20           ; ImmutableOopMap {[248]=Oop rdi=Oop rdx=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::findConv@15 (line 1004)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCopy@4 (line 979)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCast@6 (line 982)
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@20 (line 286)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011baafc28:   mov    QWORD PTR [rsp],rsi
  0x000000011baafc2c:   mov    QWORD PTR [rsp+0x8],rdx
  0x000000011baafc31:   call   0x000000011b4d4f20           ; ImmutableOopMap {[248]=Oop rdi=Oop rdx=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::findConv@15 (line 1004)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCopy@4 (line 979)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCast@6 (line 982)
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@20 (line 286)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011baafc36:   movabs r10,0x13a7472a0              ;   {metadata({method} {0x000000013a7472a0} 'findConv' '(CLjdk/incubator/vector/LaneType;Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011baafc40:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baafc45:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011baafc4d:   call   0x000000011b4db500           ; ImmutableOopMap {[248]=Oop rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::findConv@-1 (line 1002)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCast@14 (line 983)
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@20 (line 286)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baafc52:   jmp    0x000000011baaf446
  0x000000011baafc57:   movabs r10,0x13a7477f0              ;   {metadata({method} {0x000000013a7477f0} 'cacheOf' '(CLjdk/incubator/vector/LaneType;)[Ljdk/incubator/vector/VectorOperators$ConversionImpl;' in 'jdk/incubator/vector/VectorOperators$ConversionImpl')}
  0x000000011baafc61:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011baafc66:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011baafc6e:   call   0x000000011b4db500           ; ImmutableOopMap {[248]=Oop rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::cacheOf@-1 (line 1072)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::findConv@2 (line 1002)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCast@14 (line 983)
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@20 (line 286)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011baafc73:   jmp    0x000000011baaf480
  0x000000011baafc78:   call   0x000000011b4d5b20           ; ImmutableOopMap {[248]=Oop rdi=Oop }
                                                            ;*getfield switchKey {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.incubator.vector.VectorOperators$ConversionImpl::cacheOf@57 (line 1076)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::findConv@2 (line 1002)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCast@14 (line 983)
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@20 (line 286)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011baafc7d:   mov    QWORD PTR [rsp],rsi
  0x000000011baafc81:   mov    QWORD PTR [rsp+0x8],rcx
  0x000000011baafc86:   call   0x000000011b4d4f20           ; ImmutableOopMap {[248]=Oop rdi=Oop rcx=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::cacheOf@60 (line 1076)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::findConv@2 (line 1002)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCast@14 (line 983)
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@20 (line 286)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011baafc8b:   call   0x000000011b4d5b20           ; ImmutableOopMap {[248]=Oop rdi=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::cacheOf@60 (line 1076)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::findConv@2 (line 1002)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCast@14 (line 983)
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@20 (line 286)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011baafc90:   call   0x000000011b4d5b20           ; ImmutableOopMap {[248]=Oop rdi=Oop rsi=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::findConv@15 (line 1004)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCast@14 (line 983)
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@20 (line 286)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011baafc95:   call   0x000000011b4d5b20           ; ImmutableOopMap {[248]=Oop rdi=Oop rsi=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::findConv@15 (line 1004)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCast@14 (line 983)
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@20 (line 286)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011baafc9a:   mov    QWORD PTR [rsp],0x5
  0x000000011baafca2:   mov    QWORD PTR [rsp+0x8],rsi
  0x000000011baafca7:   call   0x000000011b4d4f20           ; ImmutableOopMap {[248]=Oop rdi=Oop rsi=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::findConv@15 (line 1004)
                                                            ; - jdk.incubator.vector.VectorOperators$ConversionImpl::ofCast@14 (line 983)
                                                            ; - jdk.incubator.vector.AbstractVector::castShape@20 (line 286)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@39 (line 607)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011baafcac:   call   0x000000011b4d5b20           ; ImmutableOopMap {rax=Oop }
                                                            ;*invokevirtual mul {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@45 (line 608)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011baafcb1:   call   0x000000011b4d5b20           ; ImmutableOopMap {rax=Oop }
                                                            ;*invokevirtual reduceLanesToLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::tryToParseEightDigitsSimd@51 (line 609)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011baafcb6:   movabs r10,0x11baaf794              ;   {internal_word}
  0x000000011baafcc0:   mov    QWORD PTR [r15+0x350],r10
  0x000000011baafcc7:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x000000011baafccc:   movabs r10,0x11baaf7b4              ;   {internal_word}
  0x000000011baafcd6:   mov    QWORD PTR [r15+0x350],r10
  0x000000011baafcdd:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x000000011baafce2:   nop
  0x000000011baafce3:   nop
  0x000000011baafce4:   mov    rax,QWORD PTR [r15+0x3c8]
  0x000000011baafceb:   mov    QWORD PTR [r15+0x3c8],0x0
  0x000000011baafcf6:   mov    QWORD PTR [r15+0x3d0],0x0
  0x000000011baafd01:   add    rsp,0x110
  0x000000011baafd08:   pop    rbp
  0x000000011baafd09:   jmp    0x000000011b446f00           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011baafd0e:   hlt
  0x000000011baafd0f:   hlt
  0x000000011baafd10:   hlt
  0x000000011baafd11:   hlt
  0x000000011baafd12:   hlt
  0x000000011baafd13:   hlt
  0x000000011baafd14:   hlt
  0x000000011baafd15:   hlt
  0x000000011baafd16:   hlt
  0x000000011baafd17:   hlt
  0x000000011baafd18:   hlt
  0x000000011baafd19:   hlt
  0x000000011baafd1a:   hlt
  0x000000011baafd1b:   hlt
  0x000000011baafd1c:   hlt
  0x000000011baafd1d:   hlt
  0x000000011baafd1e:   hlt
  0x000000011baafd1f:   hlt
[Stub Code]
  0x000000011baafd20:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x000000011baafd25:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011baafd2f:   jmp    0x000000011baafd2f           ;   {runtime_call}
  0x000000011baafd34:   nop
  0x000000011baafd35:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011baafd3f:   jmp    0x000000011baafd3f           ;   {runtime_call}
  0x000000011baafd44:   nop
  0x000000011baafd45:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011baafd4f:   jmp    0x000000011baafd4f           ;   {runtime_call}
  0x000000011baafd54:   nop
  0x000000011baafd55:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011baafd5f:   jmp    0x000000011baafd5f           ;   {runtime_call}
  0x000000011baafd64:   nop
  0x000000011baafd65:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011baafd6f:   jmp    0x000000011baafd6f           ;   {runtime_call}
  0x000000011baafd74:   nop
  0x000000011baafd75:   movabs rbx,0x80003a668              ;   {static_stub}
  0x000000011baafd7f:   jmp    0x000000011b4fde79           ;   {runtime_call I2C/C2I adapters}
  0x000000011baafd84:   nop
  0x000000011baafd85:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011baafd8f:   jmp    0x000000011baafd8f           ;   {runtime_call}
  0x000000011baafd94:   nop
  0x000000011baafd95:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011baafd9f:   jmp    0x000000011baafd9f           ;   {runtime_call}
  0x000000011baafda4:   nop
  0x000000011baafda5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011baafdaf:   jmp    0x000000011baafdaf           ;   {runtime_call}
  0x000000011baafdb4:   nop
  0x000000011baafdb5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011baafdbf:   jmp    0x000000011baafdbf           ;   {runtime_call}
  0x000000011baafdc4:   nop
  0x000000011baafdc5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011baafdcf:   jmp    0x000000011baafdcf           ;   {runtime_call}
  0x000000011baafdd4:   nop
  0x000000011baafdd5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011baafddf:   jmp    0x000000011baafddf           ;   {runtime_call}
[Exception Handler]
  0x000000011baafde4:   call   0x000000011b4d7900           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011baafde9:   movabs rdi,0x10db45fc1              ;   {external_word}
  0x000000011baafdf3:   and    rsp,0xfffffffffffffff0
  0x000000011baafdf7:   call   0x000000010d7f0290           ;   {runtime_call _ZN14MacroAssembler7debug64EPcxPx}
  0x000000011baafdfc:   hlt
[Deopt Handler Code]
  0x000000011baafdfd:   movabs r10,0x11baafdfd              ;   {section_word}
  0x000000011baafe07:   push   r10
  0x000000011baafe09:   jmp    0x000000011b4333a0           ;   {runtime_call DeoptimizationBlob}
  0x000000011baafe0e:   hlt
  0x000000011baafe0f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     603 1008       4       ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::skipWhitespace (26 bytes)
 total in heap  [0x0000000122f13d90,0x0000000122f14090] = 768
 relocation     [0x0000000122f13ef0,0x0000000122f13f08] = 24
 main code      [0x0000000122f13f20,0x0000000122f13fc0] = 160
 stub code      [0x0000000122f13fc0,0x0000000122f13fd8] = 24
 oops           [0x0000000122f13fd8,0x0000000122f13fe0] = 8
 metadata       [0x0000000122f13fe0,0x0000000122f13fe8] = 8
 scopes data    [0x0000000122f13fe8,0x0000000122f14028] = 64
 scopes pcs     [0x0000000122f14028,0x0000000122f14078] = 80
 dependencies   [0x0000000122f14078,0x0000000122f14080] = 8
 nul chk table  [0x0000000122f14080,0x0000000122f14090] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013a844a28} 'skipWhitespace' '([CII)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray'
  # parm0:    rsi:rsi   = '[C'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000122f13f20:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000122f13f27:   push   rbp
  0x0000000122f13f28:   sub    rsp,0x30
  0x0000000122f13f2c:   cmp    edx,ecx
  0x0000000122f13f2e:   jge    0x0000000122f13f5c
  0x0000000122f13f30:   mov    r10d,DWORD PTR [rsi+0xc]     ; implicit exception: dispatches to 0x0000000122f13f88
  0x0000000122f13f34:   cmp    edx,r10d
  0x0000000122f13f37:   jae    0x0000000122f13f71
  0x0000000122f13f39:   movzx  ebp,WORD PTR [rsi+rdx*2+0x10]
  0x0000000122f13f3e:   xchg   ax,ax
  0x0000000122f13f40:   cmp    ebp,0x20
  0x0000000122f13f43:   jg     0x0000000122f13f5c
  0x0000000122f13f45:   mov    QWORD PTR [rsp],rsi
  0x0000000122f13f49:   mov    DWORD PTR [rsp+0x8],ecx
  0x0000000122f13f4d:   mov    DWORD PTR [rsp+0xc],edx
  0x0000000122f13f51:   mov    esi,0xffffff45
  0x0000000122f13f56:   nop
  0x0000000122f13f57:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::skipWhitespace@12 (line 590)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f13f5c:   mov    eax,edx
  0x0000000122f13f5e:   add    rsp,0x30
  0x0000000122f13f62:   pop    rbp
  0x0000000122f13f63:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x0000000122f13f6a:   ja     0x0000000122f13f94
  0x0000000122f13f70:   ret
  0x0000000122f13f71:   mov    DWORD PTR [rsp],ecx
  0x0000000122f13f74:   mov    QWORD PTR [rsp+0x8],rsi
  0x0000000122f13f79:   mov    DWORD PTR [rsp+0x10],edx
  0x0000000122f13f7d:   mov    esi,0xffffffe4
  0x0000000122f13f82:   nop
  0x0000000122f13f83:   call   0x000000011b433000           ; ImmutableOopMap {[8]=Oop }
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::skipWhitespace@9 (line 590)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f13f88:   mov    esi,0xfffffff6
  0x0000000122f13f8d:   mov    ebp,edx
  0x0000000122f13f8f:   call   0x000000011b433000           ; ImmutableOopMap {}
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::skipWhitespace@9 (line 590)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f13f94:   movabs r10,0x122f13f63              ;   {internal_word}
  0x0000000122f13f9e:   mov    QWORD PTR [r15+0x350],r10
  0x0000000122f13fa5:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x0000000122f13faa:   hlt
  0x0000000122f13fab:   hlt
  0x0000000122f13fac:   hlt
  0x0000000122f13fad:   hlt
  0x0000000122f13fae:   hlt
  0x0000000122f13faf:   hlt
  0x0000000122f13fb0:   hlt
  0x0000000122f13fb1:   hlt
  0x0000000122f13fb2:   hlt
  0x0000000122f13fb3:   hlt
  0x0000000122f13fb4:   hlt
  0x0000000122f13fb5:   hlt
  0x0000000122f13fb6:   hlt
  0x0000000122f13fb7:   hlt
  0x0000000122f13fb8:   hlt
  0x0000000122f13fb9:   hlt
  0x0000000122f13fba:   hlt
  0x0000000122f13fbb:   hlt
  0x0000000122f13fbc:   hlt
  0x0000000122f13fbd:   hlt
  0x0000000122f13fbe:   hlt
  0x0000000122f13fbf:   hlt
[Exception Handler]
  0x0000000122f13fc0:   jmp    0x000000011b447880           ;   {no_reloc}
[Deopt Handler Code]
  0x0000000122f13fc5:   call   0x0000000122f13fca
  0x0000000122f13fca:   sub    QWORD PTR [rsp],0x5
  0x0000000122f13fcf:   jmp    0x000000011b4333a0           ;   {runtime_call DeoptimizationBlob}
  0x0000000122f13fd4:   hlt
  0x0000000122f13fd5:   hlt
  0x0000000122f13fd6:   hlt
  0x0000000122f13fd7:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     607  983       4       ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral (513 bytes)
 total in heap  [0x0000000122f14410,0x0000000122f15bd0] = 6080
 relocation     [0x0000000122f14570,0x0000000122f14610] = 160
 constants      [0x0000000122f14620,0x0000000122f14640] = 32
 main code      [0x0000000122f14640,0x0000000122f15100] = 2752
 stub code      [0x0000000122f15100,0x0000000122f15170] = 112
 oops           [0x0000000122f15170,0x0000000122f15178] = 8
 metadata       [0x0000000122f15178,0x0000000122f15228] = 176
 scopes data    [0x0000000122f15228,0x0000000122f158b0] = 1672
 scopes pcs     [0x0000000122f158b0,0x0000000122f15ad0] = 544
 dependencies   [0x0000000122f15ad0,0x0000000122f15b10] = 64
 handler table  [0x0000000122f15b10,0x0000000122f15ba0] = 144
 nul chk table  [0x0000000122f15ba0,0x0000000122f15bd0] = 48

[Disassembly]
--------------------------------------------------------------------------------

[Constant Pool]
             Address          hex4                    hex8
  0x0000000122f14620:   0x00300030      0x0030003000300030
  0x0000000122f14624:   0x00300030
  0x0000000122f14628:   0x00090009      0x0009000900090009
  0x0000000122f1462c:   0x00090009
  0x0000000122f14630:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4
  0x0000000122f14634:   0xf4f4f4f4
  0x0000000122f14638:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4
  0x0000000122f1463c:   0xf4f4f4f4

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013a83ff78} 'parseRestOfDecimalFloatLiteral' '([CIIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray'
  # parm0:    rsi:rsi   = '[C'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  # parm3:    r8        = int
  # parm4:    r9        = boolean
  # parm5:    rdi       = boolean
  #           [sp+0x80]  (sp of caller)
  0x0000000122f14640:   mov    DWORD PTR [rsp-0x14000],eax  ;   {no_reloc}
  0x0000000122f14647:   push   rbp
  0x0000000122f14648:   sub    rsp,0x70
  0x0000000122f1464c:   mov    DWORD PTR [rsp+0x2c],edi
  0x0000000122f14650:   mov    DWORD PTR [rsp+0x28],r9d
  0x0000000122f14655:   mov    DWORD PTR [rsp+0x1c],ecx
  0x0000000122f14659:   mov    QWORD PTR [rsp+0x20],rsi
  0x0000000122f1465e:   mov    DWORD PTR [rsp+0x18],r8d
  0x0000000122f14663:   mov    r14d,edx
  0x0000000122f14666:   xor    edi,edi
  0x0000000122f14668:   cmp    edx,r8d
  0x0000000122f1466b:   jge    0x0000000122f14820
  0x0000000122f14671:   mov    eax,DWORD PTR [rsi+0xc]      ; implicit exception: dispatches to 0x0000000122f15070
  0x0000000122f14674:   mov    r10d,edx
  0x0000000122f14677:   xor    ebx,ebx
  0x0000000122f14679:   mov    r11d,0xffffffff
  0x0000000122f1467f:   nop
  0x0000000122f14680:   cmp    r10d,eax
  0x0000000122f14683:   jae    0x0000000122f14c4c
  0x0000000122f14689:   mov    r8,QWORD PTR [rsp+0x20]
  0x0000000122f1468e:   movzx  ecx,WORD PTR [r8+r10*2+0x10]
  0x0000000122f14694:   mov    r9d,ecx
  0x0000000122f14697:   add    r9d,0xffffffd0
  0x0000000122f1469b:   nop    DWORD PTR [rax+rax*1+0x0]
  0x0000000122f146a0:   cmp    r9d,0xa
  0x0000000122f146a4:   jae    0x0000000122f148d9
  0x0000000122f146aa:   mov    r8,rbx
  0x0000000122f146ad:   shl    r8,0x3
  0x0000000122f146b1:   movsxd r9,ecx
  0x0000000122f146b4:   shl    rbx,1
  0x0000000122f146b7:   add    rbx,r8
  0x0000000122f146ba:   add    rbx,r9
  0x0000000122f146bd:   add    rbx,0xffffffffffffffd0
  0x0000000122f146c1:   mov    r8,QWORD PTR [r15+0x340]
  0x0000000122f146c8:   inc    r10d                         ; ImmutableOopMap {[32]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@121 (line 341)
  0x0000000122f146cb:   test   DWORD PTR [r8],eax           ;   {poll}
  0x0000000122f146ce:   cmp    r10d,DWORD PTR [rsp+0x18]
  0x0000000122f146d3:   jl     0x0000000122f1467f
  0x0000000122f146d5:   cmp    r11d,0xffffffff
  0x0000000122f146d9:   je     0x0000000122f14d30
  0x0000000122f146df:   mov    edx,r11d
  0x0000000122f146e2:   sub    edx,r10d
  0x0000000122f146e5:   mov    edi,r10d
  0x0000000122f146e8:   sub    edi,r14d
  0x0000000122f146eb:   mov    r9d,edx
  0x0000000122f146ee:   inc    r9d
  0x0000000122f146f1:   mov    r8d,edi
  0x0000000122f146f4:   dec    r8d
  0x0000000122f146f7:   cmp    ecx,0x65
  0x0000000122f146fa:   nop    WORD PTR [rax+rax*1+0x0]
  0x0000000122f14700:   je     0x0000000122f14d84
  0x0000000122f14706:   mov    ebp,DWORD PTR [rsp+0x18]
  0x0000000122f1470a:   sub    ebp,DWORD PTR [rsp+0x1c]
  0x0000000122f1470e:   cmp    ecx,0x45
  0x0000000122f14711:   je     0x0000000122f14832
  0x0000000122f14717:   mov    eax,r9d
  0x0000000122f1471a:   mov    DWORD PTR [rsp+0x44],r10d
  0x0000000122f1471f:   xor    ecx,ecx
  0x0000000122f14721:   mov    r9d,DWORD PTR [rsp+0x44]
  0x0000000122f14726:   cmp    r9d,DWORD PTR [rsp+0x18]
  0x0000000122f1472b:   jl     0x0000000122f147a6
  0x0000000122f14731:   mov    esi,DWORD PTR [rsp+0x2c]
  0x0000000122f14735:   test   esi,esi
  0x0000000122f14737:   je     0x0000000122f14b6e
  0x0000000122f1473d:   data16 xchg ax,ax
  0x0000000122f14740:   cmp    r8d,0x13
  0x0000000122f14744:   jg     0x0000000122f14ddc
  0x0000000122f1474a:   test   rbx,rbx
  0x0000000122f1474d:   je     0x0000000122f14e28
  0x0000000122f14753:   mov    r11d,eax
  0x0000000122f14756:   add    r11d,0x145
  0x0000000122f1475d:   data16 xchg ax,ax
  0x0000000122f14760:   cmp    r11d,0x27a
  0x0000000122f14767:   jae    0x0000000122f14e84
  0x0000000122f1476d:   mov    esi,DWORD PTR [rsp+0x28]
  0x0000000122f14771:   mov    rdx,rbx
  0x0000000122f14774:   mov    ecx,eax
  0x0000000122f14776:   xchg   ax,ax
  0x0000000122f14778:   vzeroupper
  0x0000000122f1477b:   call   0x0000000122ee6a00           ; ImmutableOopMap {[32]=Oop }
                                                            ;*invokestatic tryDecToDoubleWithFastAlgorithm {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleMath::decFloatLiteralToDouble@131 (line 763)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@486 (line 433)
                                                            ;   {static_call}
  0x0000000122f14780:   vucomisd xmm0,xmm0
  0x0000000122f14784:   jp     0x0000000122f14bf6
  0x0000000122f1478a:   jne    0x0000000122f14bf6
  0x0000000122f14790:   vzeroupper
  0x0000000122f14793:   add    rsp,0x70
  0x0000000122f14797:   pop    rbp
  0x0000000122f14798:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x0000000122f1479f:   ja     0x0000000122f150e8
  0x0000000122f147a5:   ret
  0x0000000122f147a6:   mov    rdi,QWORD PTR [rsp+0x20]
  0x0000000122f147ab:   mov    edi,DWORD PTR [rdi+0xc]      ; implicit exception: dispatches to 0x0000000122f15094
  0x0000000122f147ae:   cmp    r9d,edi
  0x0000000122f147b1:   jae    0x0000000122f14c8b
  0x0000000122f147b7:   mov    rdi,QWORD PTR [rsp+0x20]
  0x0000000122f147bc:   movzx  ebp,WORD PTR [rdi+r9*2+0x10]
  0x0000000122f147c2:   cmp    ebp,0x20
  0x0000000122f147c5:   jle    0x0000000122f14cdc
  0x0000000122f147cb:   mov    esi,0xffffff45
  0x0000000122f147d0:   mov    ebp,r14d
  0x0000000122f147d3:   mov    DWORD PTR [rsp],r11d
  0x0000000122f147d7:   mov    DWORD PTR [rsp+0x4],r10d
  0x0000000122f147dc:   rex.W push QWORD PTR [rsp+0x20]
  0x0000000122f147e1:   rex.W pop QWORD PTR [rsp+0x8]
  0x0000000122f147e6:   mov    r11d,DWORD PTR [rsp+0x1c]
  0x0000000122f147eb:   mov    DWORD PTR [rsp+0x14],r11d
  0x0000000122f147f0:   mov    r10d,DWORD PTR [rsp+0x28]
  0x0000000122f147f5:   mov    DWORD PTR [rsp+0x1c],r10d
  0x0000000122f147fa:   mov    r11d,DWORD PTR [rsp+0x2c]
  0x0000000122f147ff:   mov    DWORD PTR [rsp+0x20],r11d
  0x0000000122f14804:   mov    QWORD PTR [rsp+0x28],rbx
  0x0000000122f14809:   mov    DWORD PTR [rsp+0x24],eax
  0x0000000122f1480d:   mov    DWORD PTR [rsp+0x30],r8d
  0x0000000122f14812:   mov    QWORD PTR [rsp+0x38],rcx
  0x0000000122f14817:   nop
  0x0000000122f14818:   vzeroupper
  0x0000000122f1481b:   call   0x000000011b433000           ; ImmutableOopMap {[8]=Oop }
                                                            ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@348 (line 405)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f14820:   mov    r11d,0xffffffff
  0x0000000122f14826:   xor    ecx,ecx
  0x0000000122f14828:   xor    ebx,ebx
  0x0000000122f1482a:   mov    r10d,edx
  0x0000000122f1482d:   jmp    0x0000000122f146d5
  0x0000000122f14832:   mov    eax,r10d
  0x0000000122f14835:   inc    eax
  0x0000000122f14837:   cmp    eax,DWORD PTR [rsp+0x18]
  0x0000000122f1483b:   nop    DWORD PTR [rax+rax*1+0x0]
  0x0000000122f14840:   jge    0x0000000122f14875
  0x0000000122f14846:   mov    rcx,QWORD PTR [rsp+0x20]
  0x0000000122f1484b:   mov    esi,DWORD PTR [rcx+0xc]      ; implicit exception: dispatches to 0x0000000122f150b4
  0x0000000122f1484e:   cmp    eax,esi
  0x0000000122f14850:   jae    0x0000000122f14f5c
  0x0000000122f14856:   movsxd r13,r10d
  0x0000000122f14859:   movzx  ecx,WORD PTR [rcx+r13*2+0x12]
  0x0000000122f1485f:   nop
  0x0000000122f14860:   cmp    ecx,0x2d
  0x0000000122f14863:   je     0x0000000122f14c1b
  0x0000000122f14869:   cmp    ecx,0x2b
  0x0000000122f1486c:   jne    0x0000000122f14877
  0x0000000122f1486e:   xor    ecx,ecx
  0x0000000122f14870:   jmp    0x0000000122f14c20
  0x0000000122f14875:   xor    ecx,ecx
  0x0000000122f14877:   mov    DWORD PTR [rsp+0x4c],ecx
  0x0000000122f1487b:   xor    ecx,ecx
  0x0000000122f1487d:   mov    DWORD PTR [rsp+0x48],ecx
  0x0000000122f14881:   mov    DWORD PTR [rsp+0x44],eax
  0x0000000122f14885:   mov    DWORD PTR [rsp+0x40],ebp
  0x0000000122f14889:   mov    DWORD PTR [rsp+0x3c],r8d
  0x0000000122f1488e:   mov    DWORD PTR [rsp+0x38],r9d
  0x0000000122f14893:   mov    DWORD PTR [rsp+0x34],edi
  0x0000000122f14897:   mov    DWORD PTR [rsp+0x30],edx
  0x0000000122f1489b:   mov    QWORD PTR [rsp+0x10],rbx
  0x0000000122f148a0:   mov    DWORD PTR [rsp+0xc],r10d
  0x0000000122f148a5:   mov    DWORD PTR [rsp+0x8],r11d
  0x0000000122f148aa:   rex.W push QWORD PTR [rsp+0x20]
  0x0000000122f148af:   rex.W pop QWORD PTR [rsp]
  0x0000000122f148b3:   mov    ebp,r14d
  0x0000000122f148b6:   mov    esi,DWORD PTR [rsp+0x4c]
  0x0000000122f148ba:   xchg   ax,ax
  0x0000000122f148bc:   vzeroupper
  0x0000000122f148bf:   call   0x000000011ba8d320           ; ImmutableOopMap {[0]=Oop }
                                                            ;*invokestatic isDigit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@255 (line 386)
                                                            ;   {static_call}
  0x0000000122f148c4:   test   eax,eax
  0x0000000122f148c6:   je     0x0000000122f14bc4
  0x0000000122f148cc:   mov    r10d,DWORD PTR [rsp+0x4c]
  0x0000000122f148d1:   xor    r11d,r11d
  0x0000000122f148d4:   jmp    0x0000000122f14ad2
  0x0000000122f148d9:   cmp    ecx,0x2e
  0x0000000122f148dc:   nop    DWORD PTR [rax+0x0]
  0x0000000122f148e0:   jne    0x0000000122f146d5
  0x0000000122f148e6:   cmp    r11d,0xffffffff
  0x0000000122f148ea:   jne    0x0000000122f14fa8
  0x0000000122f148f0:   mov    ebp,DWORD PTR [rsp+0x18]
  0x0000000122f148f4:   add    ebp,0xfffffff7
  0x0000000122f148f7:   cmp    r10d,ebp
  0x0000000122f148fa:   jl     0x0000000122f14909
  0x0000000122f148fc:   mov    ecx,0x2e
  0x0000000122f14901:   mov    r11d,r10d
  0x0000000122f14904:   jmp    0x0000000122f146c1
  0x0000000122f14909:   mov    r8d,eax
  0x0000000122f1490c:   add    r8d,0xfffffff9
  0x0000000122f14910:   test   r8d,r8d
  0x0000000122f14913:   jl     0x0000000122f14f14
  0x0000000122f14919:   movsxd r9,eax
  0x0000000122f1491c:   movsxd r11,r10d
  0x0000000122f1491f:   add    r9,0xfffffffffffffff9
  0x0000000122f14923:   mov    r8,r11
  0x0000000122f14926:   add    r8,0x1
  0x0000000122f1492a:   cmp    r8,r9
  0x0000000122f1492d:   jae    0x0000000122f14f14
  0x0000000122f14933:   movsxd r8,ebp
  0x0000000122f14936:   sub    r8,r11
  0x0000000122f14939:   add    r8,0x7
  0x0000000122f1493d:   and    r8,0xfffffffffffffff8
  0x0000000122f14941:   mov    r11d,r8d
  0x0000000122f14944:   add    r11d,r10d
  0x0000000122f14947:   movsxd r11,r11d
  0x0000000122f1494a:   add    r11,0xfffffffffffffff9
  0x0000000122f1494e:   cmp    r11,r9
  0x0000000122f14951:   jae    0x0000000122f14f14
  0x0000000122f14957:   nop    WORD PTR [rax+rax*1+0x0]
  0x0000000122f14960:   cmp    ebp,0x7ffffff8
  0x0000000122f14966:   jg     0x0000000122f14f38
  0x0000000122f1496c:   mov    r11d,0x1f40
  0x0000000122f14972:   vmovq  xmm0,QWORD PTR [rip+0xfffffffffffffca6]        # 0x0000000122f14620
                                                            ;   {section_word}
  0x0000000122f1497a:   vpbroadcastw xmm0,xmm0
  0x0000000122f1497f:   vmovq  xmm1,QWORD PTR [rip+0xfffffffffffffca1]        # 0x0000000122f14628
                                                            ;   {section_word}
  0x0000000122f14987:   vpbroadcastw xmm1,xmm1
  0x0000000122f1498c:   movabs r13,0x61f0b00e0              ;   {oop([I{0x000000061f0b00e0})}
  0x0000000122f14996:   vpcmpeqb xmm2,xmm2,xmm2
  0x0000000122f1499a:   mov    r9d,r10d
  0x0000000122f1499d:   mov    ecx,0x2e
  0x0000000122f149a2:   mov    r8d,DWORD PTR [rsp+0x18]
  0x0000000122f149a7:   sub    r8d,r9d
  0x0000000122f149aa:   add    r8d,0xfffffff7
  0x0000000122f149ae:   cmp    ebp,r9d
  0x0000000122f149b1:   cmovl  r8d,edi
  0x0000000122f149b5:   cmp    r8d,0x1f40
  0x0000000122f149bc:   cmova  r8d,r11d
  0x0000000122f149c0:   add    r8d,r9d
  0x0000000122f149c3:   nop    WORD PTR [rax+rax*1+0x0]
  0x0000000122f149cc:   data16 data16 xchg ax,ax
  0x0000000122f149d0:   movsxd rdx,r9d
  0x0000000122f149d3:   mov    rsi,QWORD PTR [rsp+0x20]
  0x0000000122f149d8:   vmovdqu xmm3,XMMWORD PTR [rsi+rdx*2+0x12]
  0x0000000122f149de:   vpsubw xmm3,xmm3,xmm0
  0x0000000122f149e2:   vpmovzxwd ymm4,xmm3
  0x0000000122f149e7:   vpmovzxwd ymm5,xmm1
  0x0000000122f149ec:   vpcmpgtd ymm4,ymm4,ymm5
  0x0000000122f149f0:   vpackssdw ymm4,ymm4,ymm4
  0x0000000122f149f4:   vpermpd ymm4,ymm4,0x8
  0x0000000122f149fa:   nop    WORD PTR [rax+rax*1+0x0]
  0x0000000122f14a00:   vptest xmm4,xmm2
  0x0000000122f14a05:   jne    0x0000000122f14c80
  0x0000000122f14a0b:   vpmovsxwd ymm3,xmm3
  0x0000000122f14a10:   vpmulld ymm3,ymm3,YMMWORD PTR [r13+0x10]
  0x0000000122f14a16:   vphaddd ymm5,ymm3,ymm3
  0x0000000122f14a1b:   vextracti128 xmm4,ymm5,0x1
  0x0000000122f14a21:   vpaddd xmm5,xmm5,xmm4
  0x0000000122f14a25:   vphaddd xmm5,xmm5,xmm5
  0x0000000122f14a2a:   vmovd  xmm4,edi
  0x0000000122f14a2e:   vpaddd xmm5,xmm5,xmm4
  0x0000000122f14a32:   vmovd  esi,xmm5
  0x0000000122f14a36:   test   esi,esi
  0x0000000122f14a38:   jl     0x0000000122f14c80
  0x0000000122f14a3e:   movsxd rdx,esi
  0x0000000122f14a41:   imul   rbx,rbx,0x5f5e100
  0x0000000122f14a48:   add    rbx,rdx
  0x0000000122f14a4b:   add    r9d,0x8
  0x0000000122f14a4f:   cmp    r9d,r8d
  0x0000000122f14a52:   jl     0x0000000122f149d0
  0x0000000122f14a58:   mov    r8,QWORD PTR [r15+0x340]     ; ImmutableOopMap {r13=Oop [32]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@115 (line 360)
  0x0000000122f14a5f:   test   DWORD PTR [r8],eax           ;   {poll}
  0x0000000122f14a62:   cmp    r9d,ebp
  0x0000000122f14a65:   jl     0x0000000122f149a2
  0x0000000122f14a6b:   mov    r11d,r10d
  0x0000000122f14a6e:   mov    r10d,r9d
  0x0000000122f14a71:   jmp    0x0000000122f146c1
  0x0000000122f14a76:   movsxd r10,r10d
  0x0000000122f14a79:   mov    r9,r11
  0x0000000122f14a7c:   shl    r9,1
  0x0000000122f14a7f:   shl    r11,0x3
  0x0000000122f14a83:   add    r9,r11
  0x0000000122f14a86:   add    r9,r10
  0x0000000122f14a89:   add    r9,0xffffffffffffffd0
  0x0000000122f14a8d:   jmp    0x0000000122f14aec
  0x0000000122f14a8f:   xor    r8d,r8d
  0x0000000122f14a92:   mov    r11,QWORD PTR [rsp]
  0x0000000122f14a96:   mov    DWORD PTR [rsp+0x4c],r8d
  0x0000000122f14a9b:   mov    DWORD PTR [rsp+0x44],r10d
  0x0000000122f14aa0:   mov    QWORD PTR [rsp+0x20],r9
  0x0000000122f14aa5:   mov    QWORD PTR [rsp],r11
  0x0000000122f14aa9:   mov    esi,r8d
  0x0000000122f14aac:   vzeroupper
  0x0000000122f14aaf:   call   0x000000011ba8d320           ; ImmutableOopMap {[0]=Oop }
                                                            ;*invokestatic isDigit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@314 (line 395)
                                                            ;   {static_call}
  0x0000000122f14ab4:   mov    r10,QWORD PTR [r15+0x340]    ; ImmutableOopMap {[0]=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@317 (line 395)
  0x0000000122f14abb:   test   DWORD PTR [r10],eax          ;   {poll}
  0x0000000122f14abe:   xchg   ax,ax
  0x0000000122f14ac0:   test   eax,eax
  0x0000000122f14ac2:   je     0x0000000122f14b1d
  0x0000000122f14ac8:   mov    r10d,DWORD PTR [rsp+0x4c]
  0x0000000122f14acd:   mov    r11,QWORD PTR [rsp+0x20]
  0x0000000122f14ad2:   data16 nop WORD PTR [rax+rax*1+0x0]
  0x0000000122f14adc:   data16 data16 xchg ax,ax
  0x0000000122f14ae0:   cmp    r11,0x989680
  0x0000000122f14ae7:   jl     0x0000000122f14a76
  0x0000000122f14ae9:   mov    r9,r11
  0x0000000122f14aec:   mov    r10d,DWORD PTR [rsp+0x44]
  0x0000000122f14af1:   inc    r10d
  0x0000000122f14af4:   cmp    r10d,DWORD PTR [rsp+0x18]
  0x0000000122f14af9:   jge    0x0000000122f14a8f
  0x0000000122f14afb:   mov    r11,QWORD PTR [rsp]
  0x0000000122f14aff:   nop
  0x0000000122f14b00:   mov    ecx,DWORD PTR [r11+0xc]      ; implicit exception: dispatches to 0x0000000122f150a4
  0x0000000122f14b04:   cmp    r10d,ecx
  0x0000000122f14b07:   jae    0x0000000122f14ea4
  0x0000000122f14b0d:   movsxd r8,DWORD PTR [rsp+0x44]
  0x0000000122f14b12:   movzx  r8d,WORD PTR [r11+r8*2+0x12]
  0x0000000122f14b18:   jmp    0x0000000122f14a96
  0x0000000122f14b1d:   mov    r11d,DWORD PTR [rsp+0x48]
  0x0000000122f14b22:   test   r11d,r11d
  0x0000000122f14b25:   je     0x0000000122f14c11
  0x0000000122f14b2b:   mov    rcx,QWORD PTR [rsp+0x20]
  0x0000000122f14b30:   neg    rcx
  0x0000000122f14b33:   mov    r11d,ecx
  0x0000000122f14b36:   add    r11d,DWORD PTR [rsp+0x30]
  0x0000000122f14b3b:   inc    r11d
  0x0000000122f14b3e:   mov    eax,r11d
  0x0000000122f14b41:   mov    r14d,ebp
  0x0000000122f14b44:   rex.W push QWORD PTR [rsp]
  0x0000000122f14b48:   rex.W pop QWORD PTR [rsp+0x20]
  0x0000000122f14b4d:   mov    r11d,DWORD PTR [rsp+0x8]
  0x0000000122f14b52:   mov    r10d,DWORD PTR [rsp+0xc]
  0x0000000122f14b57:   mov    rbx,QWORD PTR [rsp+0x10]
  0x0000000122f14b5c:   mov    edi,DWORD PTR [rsp+0x34]
  0x0000000122f14b60:   mov    r8d,DWORD PTR [rsp+0x3c]
  0x0000000122f14b65:   mov    ebp,DWORD PTR [rsp+0x40]
  0x0000000122f14b69:   jmp    0x0000000122f14721
  0x0000000122f14b6e:   cmp    edi,0x1
  0x0000000122f14b71:   jne    0x0000000122f1473d
  0x0000000122f14b77:   mov    rdi,QWORD PTR [rsp+0x20]
  0x0000000122f14b7c:   nop    DWORD PTR [rax+0x0]
  0x0000000122f14b80:   mov    edx,DWORD PTR [rdi+0xc]      ; implicit exception: dispatches to 0x0000000122f150d6
  0x0000000122f14b83:   cmp    r11d,edx
  0x0000000122f14b86:   jae    0x0000000122f14fe0
  0x0000000122f14b8c:   movzx  edx,WORD PTR [rdi+r11*2+0x10]
  0x0000000122f14b92:   cmp    edx,0x2e
  0x0000000122f14b95:   je     0x0000000122f1473d
  0x0000000122f14b9b:   mov    rsi,QWORD PTR [rsp+0x20]
  0x0000000122f14ba0:   mov    edx,DWORD PTR [rsp+0x1c]
  0x0000000122f14ba4:   mov    ecx,ebp
  0x0000000122f14ba6:   xchg   ax,ax
  0x0000000122f14ba8:   vzeroupper
  0x0000000122f14bab:   call   0x000000011b42e080           ; ImmutableOopMap {}
                                                            ;*invokestatic newNumberFormatException {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@375 (line 407)
                                                            ;   {static_call}
  0x0000000122f14bb0:   test   rax,rax
  0x0000000122f14bb3:   jne    0x0000000122f14be6
  0x0000000122f14bb5:   mov    esi,0xfffffff6
  0x0000000122f14bba:   xchg   ax,ax
  0x0000000122f14bbc:   vzeroupper
  0x0000000122f14bbf:   call   0x000000011b433000           ; ImmutableOopMap {}
                                                            ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@378 (line 407)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f14bc4:   mov    rsi,QWORD PTR [rsp]
  0x0000000122f14bc8:   mov    edx,DWORD PTR [rsp+0x1c]
  0x0000000122f14bcc:   mov    ecx,DWORD PTR [rsp+0x40]
  0x0000000122f14bd0:   vzeroupper
  0x0000000122f14bd3:   call   0x000000011b42e080           ; ImmutableOopMap {}
                                                            ;*invokestatic newNumberFormatException {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@266 (line 387)
                                                            ;   {static_call}
  0x0000000122f14bd8:   test   rax,rax
  0x0000000122f14bdb:   nop    DWORD PTR [rax+rax*1+0x0]
  0x0000000122f14be0:   je     0x0000000122f14fd0
  0x0000000122f14be6:   mov    rsi,rax
  0x0000000122f14be9:   vzeroupper
  0x0000000122f14bec:   add    rsp,0x70
  0x0000000122f14bf0:   pop    rbp
  0x0000000122f14bf1:   jmp    0x000000011b4e2700           ;   {runtime_call _rethrow_Java}
  0x0000000122f14bf6:   mov    rsi,QWORD PTR [rsp+0x20]
  0x0000000122f14bfb:   mov    edx,DWORD PTR [rsp+0x1c]
  0x0000000122f14bff:   mov    ecx,ebp
  0x0000000122f14c01:   data16 xchg ax,ax
  0x0000000122f14c04:   vzeroupper
  0x0000000122f14c07:   call   0x0000000122f1514b           ; ImmutableOopMap {}
                                                            ;*invokestatic parseRestOfDecimalFloatLiteralTheHardWay {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@504 (line 434)
                                                            ;   {static_call}
  0x0000000122f14c0c:   jmp    0x0000000122f14790
  0x0000000122f14c11:   mov    rcx,QWORD PTR [rsp+0x20]
  0x0000000122f14c16:   jmp    0x0000000122f14b33
  0x0000000122f14c1b:   mov    ecx,0x1
  0x0000000122f14c20:   mov    eax,r10d
  0x0000000122f14c23:   add    eax,0x2
  0x0000000122f14c26:   cmp    eax,DWORD PTR [rsp+0x18]
  0x0000000122f14c2a:   jl     0x0000000122f14c37
  0x0000000122f14c2c:   xor    esi,esi
  0x0000000122f14c2e:   mov    DWORD PTR [rsp+0x4c],esi
  0x0000000122f14c32:   jmp    0x0000000122f1487d
  0x0000000122f14c37:   cmp    eax,esi
  0x0000000122f14c39:   jae    0x0000000122f15020
  0x0000000122f14c3f:   mov    rsi,QWORD PTR [rsp+0x20]
  0x0000000122f14c44:   movzx  esi,WORD PTR [rsi+r13*2+0x14]
  0x0000000122f14c4a:   jmp    0x0000000122f14c2e
  0x0000000122f14c4c:   mov    esi,0xffffffe4
  0x0000000122f14c51:   mov    QWORD PTR [rsp],rbx
  0x0000000122f14c55:   mov    DWORD PTR [rsp+0x8],r14d
  0x0000000122f14c5a:   mov    DWORD PTR [rsp+0xc],r11d
  0x0000000122f14c5f:   mov    DWORD PTR [rsp+0x10],r10d
  0x0000000122f14c64:   mov    r10d,DWORD PTR [rsp+0x1c]
  0x0000000122f14c69:   mov    DWORD PTR [rsp+0x14],r10d
  0x0000000122f14c6e:   mov    r11d,DWORD PTR [rsp+0x28]
  0x0000000122f14c73:   mov    DWORD PTR [rsp+0x1c],r11d
  0x0000000122f14c78:   vzeroupper
  0x0000000122f14c7b:   call   0x000000011b433000           ; ImmutableOopMap {[32]=Oop }
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@22 (line 342)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f14c80:   mov    r11d,r10d
  0x0000000122f14c83:   mov    r10d,r9d
  0x0000000122f14c86:   jmp    0x0000000122f146c1
  0x0000000122f14c8b:   mov    esi,0xffffffe4
  0x0000000122f14c90:   mov    ebp,r14d
  0x0000000122f14c93:   mov    DWORD PTR [rsp],r11d
  0x0000000122f14c97:   mov    DWORD PTR [rsp+0x4],r10d
  0x0000000122f14c9c:   mov    r11d,DWORD PTR [rsp+0x1c]
  0x0000000122f14ca1:   mov    DWORD PTR [rsp+0x10],r11d
  0x0000000122f14ca6:   mov    r11d,DWORD PTR [rsp+0x28]
  0x0000000122f14cab:   mov    DWORD PTR [rsp+0x1c],r11d
  0x0000000122f14cb0:   mov    r10d,DWORD PTR [rsp+0x2c]
  0x0000000122f14cb5:   mov    DWORD PTR [rsp+0x28],r10d
  0x0000000122f14cba:   mov    QWORD PTR [rsp+0x30],rbx
  0x0000000122f14cbf:   mov    DWORD PTR [rsp+0x2c],eax
  0x0000000122f14cc3:   mov    DWORD PTR [rsp+0x38],r8d
  0x0000000122f14cc8:   mov    QWORD PTR [rsp+0x40],rcx
  0x0000000122f14ccd:   mov    DWORD PTR [rsp+0x50],r9d
  0x0000000122f14cd2:   xchg   ax,ax
  0x0000000122f14cd4:   vzeroupper
  0x0000000122f14cd7:   call   0x000000011b433000           ; ImmutableOopMap {[32]=Oop }
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::skipWhitespace@9 (line 590)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@342 (line 404)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f14cdc:   mov    esi,0xffffff45
  0x0000000122f14ce1:   mov    DWORD PTR [rsp],r14d
  0x0000000122f14ce5:   mov    DWORD PTR [rsp+0x4],r11d
  0x0000000122f14cea:   mov    DWORD PTR [rsp+0x8],r10d
  0x0000000122f14cef:   mov    r10d,DWORD PTR [rsp+0x1c]
  0x0000000122f14cf4:   mov    DWORD PTR [rsp+0xc],r10d
  0x0000000122f14cf9:   mov    r11d,DWORD PTR [rsp+0x28]
  0x0000000122f14cfe:   mov    DWORD PTR [rsp+0x1c],r11d
  0x0000000122f14d03:   mov    r10d,DWORD PTR [rsp+0x2c]
  0x0000000122f14d08:   mov    DWORD PTR [rsp+0x28],r10d
  0x0000000122f14d0d:   mov    QWORD PTR [rsp+0x30],rbx
  0x0000000122f14d12:   mov    DWORD PTR [rsp+0x2c],eax
  0x0000000122f14d16:   mov    DWORD PTR [rsp+0x38],r8d
  0x0000000122f14d1b:   mov    QWORD PTR [rsp+0x40],rcx
  0x0000000122f14d20:   mov    DWORD PTR [rsp+0x48],r9d
  0x0000000122f14d25:   data16 xchg ax,ax
  0x0000000122f14d28:   vzeroupper
  0x0000000122f14d2b:   call   0x000000011b433000           ; ImmutableOopMap {[32]=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::skipWhitespace@12 (line 590)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@342 (line 404)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f14d30:   mov    esi,0xffffff45
  0x0000000122f14d35:   mov    DWORD PTR [rsp],r14d
  0x0000000122f14d39:   mov    DWORD PTR [rsp+0x8],r10d
  0x0000000122f14d3e:   mov    DWORD PTR [rsp+0xc],r11d
  0x0000000122f14d43:   rex.W push QWORD PTR [rsp+0x20]
  0x0000000122f14d48:   rex.W pop QWORD PTR [rsp+0x10]
  0x0000000122f14d4d:   mov    QWORD PTR [rsp-0x8],rax
  0x0000000122f14d52:   mov    eax,DWORD PTR [rsp+0x28]
  0x0000000122f14d56:   mov    DWORD PTR [rsp+0x20],eax
  0x0000000122f14d5a:   mov    rax,QWORD PTR [rsp-0x8]
  0x0000000122f14d5f:   mov    QWORD PTR [rsp-0x8],rax
  0x0000000122f14d64:   mov    eax,DWORD PTR [rsp+0x2c]
  0x0000000122f14d68:   mov    DWORD PTR [rsp+0x24],eax
  0x0000000122f14d6c:   mov    rax,QWORD PTR [rsp-0x8]
  0x0000000122f14d71:   mov    QWORD PTR [rsp+0x28],rbx
  0x0000000122f14d76:   mov    DWORD PTR [rsp+0x30],ecx
  0x0000000122f14d7a:   xchg   ax,ax
  0x0000000122f14d7c:   vzeroupper
  0x0000000122f14d7f:   call   0x000000011b433000           ; ImmutableOopMap {[16]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@130 (line 368)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f14d84:   mov    esi,0xffffff45
  0x0000000122f14d89:   mov    DWORD PTR [rsp],r14d
  0x0000000122f14d8d:   mov    DWORD PTR [rsp+0x4],r11d
  0x0000000122f14d92:   mov    DWORD PTR [rsp+0x8],r10d
  0x0000000122f14d97:   rex.W push QWORD PTR [rsp+0x20]
  0x0000000122f14d9c:   rex.W pop QWORD PTR [rsp+0x10]
  0x0000000122f14da1:   mov    r11d,DWORD PTR [rsp+0x1c]
  0x0000000122f14da6:   mov    DWORD PTR [rsp+0xc],r11d
  0x0000000122f14dab:   mov    r11d,DWORD PTR [rsp+0x28]
  0x0000000122f14db0:   mov    DWORD PTR [rsp+0x1c],r11d
  0x0000000122f14db5:   mov    r10d,DWORD PTR [rsp+0x2c]
  0x0000000122f14dba:   mov    DWORD PTR [rsp+0x20],r10d
  0x0000000122f14dbf:   mov    QWORD PTR [rsp+0x28],rbx
  0x0000000122f14dc4:   mov    DWORD PTR [rsp+0x24],r9d
  0x0000000122f14dc9:   mov    DWORD PTR [rsp+0x30],r8d
  0x0000000122f14dce:   mov    DWORD PTR [rsp+0x38],ecx
  0x0000000122f14dd2:   xchg   ax,ax
  0x0000000122f14dd4:   vzeroupper
  0x0000000122f14dd7:   call   0x000000011b433000           ; ImmutableOopMap {[16]=Oop }
                                                            ;*if_icmpeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@171 (line 379)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f14ddc:   mov    esi,0xffffff45
  0x0000000122f14de1:   mov    ebp,r14d
  0x0000000122f14de4:   mov    DWORD PTR [rsp],r11d
  0x0000000122f14de8:   mov    DWORD PTR [rsp+0x4],r10d
  0x0000000122f14ded:   rex.W push QWORD PTR [rsp+0x20]
  0x0000000122f14df2:   rex.W pop QWORD PTR [rsp+0x8]
  0x0000000122f14df7:   mov    r10d,DWORD PTR [rsp+0x1c]
  0x0000000122f14dfc:   mov    DWORD PTR [rsp+0x14],r10d
  0x0000000122f14e01:   mov    r11d,DWORD PTR [rsp+0x28]
  0x0000000122f14e06:   mov    DWORD PTR [rsp+0x1c],r11d
  0x0000000122f14e0b:   mov    QWORD PTR [rsp+0x20],rbx
  0x0000000122f14e10:   mov    DWORD PTR [rsp+0x28],eax
  0x0000000122f14e14:   mov    QWORD PTR [rsp+0x30],rcx
  0x0000000122f14e19:   mov    DWORD PTR [rsp+0x2c],r8d
  0x0000000122f14e1e:   xchg   ax,ax
  0x0000000122f14e20:   vzeroupper
  0x0000000122f14e23:   call   0x000000011b433000           ; ImmutableOopMap {[8]=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@386 (line 414)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f14e28:   xor    r10d,r10d
  0x0000000122f14e2b:   cmp    rbx,r10
  0x0000000122f14e2e:   mov    ebp,0xffffffff
  0x0000000122f14e33:   jl     0x0000000122f14e3d
  0x0000000122f14e35:   setne  bpl
  0x0000000122f14e39:   movzx  ebp,bpl
  0x0000000122f14e3d:   mov    esi,0xffffff45
  0x0000000122f14e42:   mov    DWORD PTR [rsp],r11d
  0x0000000122f14e46:   rex.W push QWORD PTR [rsp+0x20]
  0x0000000122f14e4b:   rex.W pop QWORD PTR [rsp+0x8]
  0x0000000122f14e50:   mov    r11d,DWORD PTR [rsp+0x1c]
  0x0000000122f14e55:   mov    DWORD PTR [rsp+0x4],r11d
  0x0000000122f14e5a:   mov    r10d,DWORD PTR [rsp+0x18]
  0x0000000122f14e5f:   mov    DWORD PTR [rsp+0x10],r10d
  0x0000000122f14e64:   mov    r11d,DWORD PTR [rsp+0x28]
  0x0000000122f14e69:   mov    DWORD PTR [rsp+0x18],r11d
  0x0000000122f14e6e:   mov    QWORD PTR [rsp+0x20],rbx
  0x0000000122f14e73:   mov    DWORD PTR [rsp+0x1c],eax
  0x0000000122f14e77:   mov    QWORD PTR [rsp+0x28],rcx
  0x0000000122f14e7c:   vzeroupper
  0x0000000122f14e7f:   call   0x000000011b433000           ; ImmutableOopMap {[8]=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleMath::decFloatLiteralToDouble@3 (line 738)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@486 (line 433)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f14e84:   mov    esi,0xffffff3d
  0x0000000122f14e89:   mov    r11d,DWORD PTR [rsp+0x18]
  0x0000000122f14e8e:   mov    DWORD PTR [rsp+0x4],r11d
  0x0000000122f14e93:   mov    QWORD PTR [rsp+0x10],rbx
  0x0000000122f14e98:   mov    DWORD PTR [rsp+0x18],eax
  0x0000000122f14e9c:   vzeroupper
  0x0000000122f14e9f:   call   0x000000011b433000           ; ImmutableOopMap {[32]=Oop }
                                                            ;*if_icmpgt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleMath::decFloatLiteralToDouble@116 (line 762)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@486 (line 433)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f14ea4:   mov    esi,0xffffffe4
  0x0000000122f14ea9:   mov    r8d,DWORD PTR [rsp+0x8]
  0x0000000122f14eae:   mov    DWORD PTR [rsp],r8d
  0x0000000122f14eb2:   mov    ecx,DWORD PTR [rsp+0xc]
  0x0000000122f14eb6:   mov    DWORD PTR [rsp+0x4],ecx
  0x0000000122f14eba:   mov    QWORD PTR [rsp-0x8],rax
  0x0000000122f14ebf:   mov    eax,DWORD PTR [rsp+0x28]
  0x0000000122f14ec3:   mov    DWORD PTR [rsp+0x24],eax
  0x0000000122f14ec7:   mov    rax,QWORD PTR [rsp-0x8]
  0x0000000122f14ecc:   mov    QWORD PTR [rsp-0x8],rax
  0x0000000122f14ed1:   mov    eax,DWORD PTR [rsp+0x2c]
  0x0000000122f14ed5:   mov    DWORD PTR [rsp+0x28],eax
  0x0000000122f14ed9:   mov    rax,QWORD PTR [rsp-0x8]
  0x0000000122f14ede:   mov    r8d,DWORD PTR [rsp+0x38]
  0x0000000122f14ee3:   mov    DWORD PTR [rsp+0x2c],r8d
  0x0000000122f14ee8:   mov    ecx,DWORD PTR [rsp+0x3c]
  0x0000000122f14eec:   mov    DWORD PTR [rsp+0x30],ecx
  0x0000000122f14ef0:   mov    QWORD PTR [rsp+0x38],r9
  0x0000000122f14ef5:   mov    r9d,DWORD PTR [rsp+0x48]
  0x0000000122f14efa:   mov    DWORD PTR [rsp+0x34],r9d
  0x0000000122f14eff:   mov    QWORD PTR [rsp+0x40],r11
  0x0000000122f14f04:   mov    DWORD PTR [rsp+0x48],r10d
  0x0000000122f14f09:   data16 xchg ax,ax
  0x0000000122f14f0c:   vzeroupper
  0x0000000122f14f0f:   call   0x000000011b433000           ; ImmutableOopMap {[64]=Oop }
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@305 (line 394)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f14f14:   mov    esi,0xffffff76
  0x0000000122f14f19:   mov    QWORD PTR [rsp+0x8],rbx
  0x0000000122f14f1e:   mov    DWORD PTR [rsp+0x4],r14d
  0x0000000122f14f23:   mov    DWORD PTR [rsp+0x10],r10d
  0x0000000122f14f28:   mov    DWORD PTR [rsp+0x14],r10d
  0x0000000122f14f2d:   data16 xchg ax,ax
  0x0000000122f14f30:   vzeroupper
  0x0000000122f14f33:   call   0x000000011b433000           ; ImmutableOopMap {[32]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@82 (line 351)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f14f38:   mov    esi,0xffffff6e
  0x0000000122f14f3d:   mov    QWORD PTR [rsp+0x8],rbx
  0x0000000122f14f42:   mov    DWORD PTR [rsp+0x4],r14d
  0x0000000122f14f47:   mov    DWORD PTR [rsp+0x10],r10d
  0x0000000122f14f4c:   mov    DWORD PTR [rsp+0x14],r10d
  0x0000000122f14f51:   data16 xchg ax,ax
  0x0000000122f14f54:   vzeroupper
  0x0000000122f14f57:   call   0x000000011b433000           ; ImmutableOopMap {[32]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@82 (line 351)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f14f5c:   mov    esi,0xffffffe4
  0x0000000122f14f61:   mov    ebp,r14d
  0x0000000122f14f64:   mov    DWORD PTR [rsp],r11d
  0x0000000122f14f68:   mov    DWORD PTR [rsp+0x4],r10d
  0x0000000122f14f6d:   mov    r11d,DWORD PTR [rsp+0x1c]
  0x0000000122f14f72:   mov    DWORD PTR [rsp+0x14],r11d
  0x0000000122f14f77:   mov    r10d,DWORD PTR [rsp+0x28]
  0x0000000122f14f7c:   mov    DWORD PTR [rsp+0x1c],r10d
  0x0000000122f14f81:   mov    r10d,DWORD PTR [rsp+0x2c]
  0x0000000122f14f86:   mov    DWORD PTR [rsp+0x28],r10d
  0x0000000122f14f8b:   mov    QWORD PTR [rsp+0x30],rbx
  0x0000000122f14f90:   mov    DWORD PTR [rsp+0x2c],r9d
  0x0000000122f14f95:   mov    DWORD PTR [rsp+0x38],r8d
  0x0000000122f14f9a:   mov    DWORD PTR [rsp+0x3c],eax
  0x0000000122f14f9e:   xchg   ax,ax
  0x0000000122f14fa0:   vzeroupper
  0x0000000122f14fa3:   call   0x000000011b433000           ; ImmutableOopMap {[32]=Oop }
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@203 (line 381)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f14fa8:   mov    esi,0xffffff45
  0x0000000122f14fad:   mov    ebp,r10d
  0x0000000122f14fb0:   mov    QWORD PTR [rsp],rbx
  0x0000000122f14fb4:   mov    DWORD PTR [rsp+0x8],r14d
  0x0000000122f14fb9:   mov    DWORD PTR [rsp+0xc],r11d
  0x0000000122f14fbe:   rex.W push QWORD PTR [rsp+0x20]
  0x0000000122f14fc3:   rex.W pop QWORD PTR [rsp+0x10]
  0x0000000122f14fc8:   vzeroupper
  0x0000000122f14fcb:   call   0x000000011b433000           ; ImmutableOopMap {[16]=Oop }
                                                            ;*if_icmpeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@62 (line 347)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f14fd0:   mov    esi,0xfffffff6
  0x0000000122f14fd5:   data16 xchg ax,ax
  0x0000000122f14fd8:   vzeroupper
  0x0000000122f14fdb:   call   0x000000011b433000           ; ImmutableOopMap {}
                                                            ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@269 (line 387)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f14fe0:   mov    esi,0xffffffe4
  0x0000000122f14fe5:   mov    ebp,r14d
  0x0000000122f14fe8:   mov    DWORD PTR [rsp+0x4],r10d
  0x0000000122f14fed:   mov    DWORD PTR [rsp+0x8],r11d
  0x0000000122f14ff2:   mov    QWORD PTR [rsp-0x8],rax
  0x0000000122f14ff7:   mov    eax,DWORD PTR [rsp+0x44]
  0x0000000122f14ffb:   mov    DWORD PTR [rsp+0xc],eax
  0x0000000122f14fff:   mov    rax,QWORD PTR [rsp-0x8]
  0x0000000122f15004:   mov    QWORD PTR [rsp+0x30],rbx
  0x0000000122f15009:   mov    DWORD PTR [rsp+0x2c],eax
  0x0000000122f1500d:   mov    DWORD PTR [rsp+0x38],r8d
  0x0000000122f15012:   mov    QWORD PTR [rsp+0x40],rcx
  0x0000000122f15017:   nop
  0x0000000122f15018:   vzeroupper
  0x0000000122f1501b:   call   0x000000011b433000           ; ImmutableOopMap {[32]=Oop }
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@364 (line 405)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f15020:   mov    esi,0xffffffe4
  0x0000000122f15025:   mov    ebp,r14d
  0x0000000122f15028:   mov    DWORD PTR [rsp],r11d
  0x0000000122f1502c:   mov    DWORD PTR [rsp+0x4],r10d
  0x0000000122f15031:   mov    r11d,DWORD PTR [rsp+0x1c]
  0x0000000122f15036:   mov    DWORD PTR [rsp+0x14],r11d
  0x0000000122f1503b:   mov    r10d,DWORD PTR [rsp+0x28]
  0x0000000122f15040:   mov    DWORD PTR [rsp+0x1c],r10d
  0x0000000122f15045:   mov    r10d,DWORD PTR [rsp+0x2c]
  0x0000000122f1504a:   mov    DWORD PTR [rsp+0x28],r10d
  0x0000000122f1504f:   mov    QWORD PTR [rsp+0x30],rbx
  0x0000000122f15054:   mov    DWORD PTR [rsp+0x2c],r9d
  0x0000000122f15059:   mov    DWORD PTR [rsp+0x38],r8d
  0x0000000122f1505e:   mov    DWORD PTR [rsp+0x3c],ecx
  0x0000000122f15062:   mov    DWORD PTR [rsp+0x40],eax
  0x0000000122f15066:   xchg   ax,ax
  0x0000000122f15068:   vzeroupper
  0x0000000122f1506b:   call   0x000000011b433000           ; ImmutableOopMap {[32]=Oop }
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@246 (line 384)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f15070:   mov    esi,0xffffff76
  0x0000000122f15075:   mov    DWORD PTR [rsp],edx
  0x0000000122f15078:   mov    DWORD PTR [rsp+0x4],edx
  0x0000000122f1507c:   rex.W push QWORD PTR [rsp+0x20]
  0x0000000122f15081:   rex.W pop QWORD PTR [rsp+0x8]
  0x0000000122f15086:   mov    DWORD PTR [rsp+0x10],ecx
  0x0000000122f1508a:   xchg   ax,ax
  0x0000000122f1508c:   vzeroupper
  0x0000000122f1508f:   call   0x000000011b433000           ; ImmutableOopMap {[8]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@17 (line 341)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f15094:   mov    esi,0xfffffff6
  0x0000000122f15099:   data16 xchg ax,ax
  0x0000000122f1509c:   vzeroupper
  0x0000000122f1509f:   call   0x000000011b433000           ; ImmutableOopMap {}
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::skipWhitespace@9 (line 590)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@342 (line 404)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f150a4:   mov    esi,0xfffffff6
  0x0000000122f150a9:   mov    ebp,r10d
  0x0000000122f150ac:   vzeroupper
  0x0000000122f150af:   call   0x000000011b433000           ; ImmutableOopMap {}
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@305 (line 394)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f150b4:   mov    esi,0xfffffff6
  0x0000000122f150b9:   mov    ebp,eax
  0x0000000122f150bb:   nop
  0x0000000122f150bc:   vzeroupper
  0x0000000122f150bf:   call   0x000000011b433000           ; ImmutableOopMap {}
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@203 (line 381)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f150c4:   jmp    0x0000000122f150ce
  0x0000000122f150c6:   jmp    0x0000000122f150ce
  0x0000000122f150c8:   jmp    0x0000000122f150ce
  0x0000000122f150ca:   jmp    0x0000000122f150ce
  0x0000000122f150cc:   jmp    0x0000000122f150ce
  0x0000000122f150ce:   mov    rsi,rax
  0x0000000122f150d1:   jmp    0x0000000122f14be9
  0x0000000122f150d6:   mov    esi,0xfffffff6
  0x0000000122f150db:   mov    ebp,r11d
  0x0000000122f150de:   xchg   ax,ax
  0x0000000122f150e0:   vzeroupper
  0x0000000122f150e3:   call   0x000000011b433000           ; ImmutableOopMap {}
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteral@364 (line 405)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f150e8:   movabs r10,0x122f14798              ;   {internal_word}
  0x0000000122f150f2:   mov    QWORD PTR [r15+0x350],r10
  0x0000000122f150f9:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x0000000122f150fe:   hlt
  0x0000000122f150ff:   hlt
[Stub Code]
  0x0000000122f15100:   movabs rbx,0x0                      ;   {no_reloc}
  0x0000000122f1510a:   jmp    0x0000000122f1510a           ;   {runtime_call}
  0x0000000122f1510f:   movabs rbx,0x0                      ;   {static_stub}
  0x0000000122f15119:   jmp    0x0000000122f15119           ;   {runtime_call}
  0x0000000122f1511e:   movabs rbx,0x0                      ;   {static_stub}
  0x0000000122f15128:   jmp    0x0000000122f15128           ;   {runtime_call}
  0x0000000122f1512d:   movabs rbx,0x0                      ;   {static_stub}
  0x0000000122f15137:   jmp    0x0000000122f15137           ;   {runtime_call}
  0x0000000122f1513c:   movabs rbx,0x0                      ;   {static_stub}
  0x0000000122f15146:   jmp    0x0000000122f15146           ;   {runtime_call}
  0x0000000122f1514b:   movabs rbx,0x13a844488              ;   {static_stub}
  0x0000000122f15155:   jmp    0x000000011b40fb5f           ;   {runtime_call I2C/C2I adapters}
[Exception Handler]
  0x0000000122f1515a:   jmp    0x000000011b447880           ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000122f1515f:   call   0x0000000122f15164
  0x0000000122f15164:   sub    QWORD PTR [rsp],0x5
  0x0000000122f15169:   jmp    0x000000011b4333a0           ;   {runtime_call DeoptimizationBlob}
  0x0000000122f1516e:   hlt
  0x0000000122f1516f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     627  869       3       ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble (8 bytes)
 total in heap  [0x000000011bac6a10,0x000000011bac6d78] = 872
 relocation     [0x000000011bac6b70,0x000000011bac6ba8] = 56
 main code      [0x000000011bac6bc0,0x000000011bac6ca0] = 224
 stub code      [0x000000011bac6ca0,0x000000011bac6ce0] = 64
 oops           [0x000000011bac6ce0,0x000000011bac6ce8] = 8
 metadata       [0x000000011bac6ce8,0x000000011bac6cf0] = 8
 scopes data    [0x000000011bac6cf0,0x000000011bac6d10] = 32
 scopes pcs     [0x000000011bac6d10,0x000000011bac6d60] = 80
 dependencies   [0x000000011bac6d60,0x000000011bac6d68] = 8
 nul chk table  [0x000000011bac6d68,0x000000011bac6d78] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013a83fa98} 'parseDouble' '([C)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray'
  # parm0:    rsi:rsi   = '[C'
  #           [sp+0x40]  (sp of caller)
  0x000000011bac6bc0:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011bac6bc7:   push   rbp
  0x000000011bac6bc8:   sub    rsp,0x30
  0x000000011bac6bcc:   movabs rdx,0x13a846740              ;   {metadata(method data for {method} {0x000000013a83fa98} 'parseDouble' '([C)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011bac6bd6:   mov    ecx,DWORD PTR [rdx+0xac]
  0x000000011bac6bdc:   add    ecx,0x2
  0x000000011bac6bdf:   mov    DWORD PTR [rdx+0xac],ecx
  0x000000011bac6be5:   and    ecx,0x7fe
  0x000000011bac6beb:   cmp    ecx,0x0
  0x000000011bac6bee:   je     0x000000011bac6c27
  0x000000011bac6bf4:   mov    ecx,DWORD PTR [rsi+0xc]      ; implicit exception: dispatches to 0x000000011bac6c45
  0x000000011bac6bf7:   movabs rdx,0x13a846740              ;   {metadata(method data for {method} {0x000000013a83fa98} 'parseDouble' '([C)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011bac6c01:   add    QWORD PTR [rdx+0xf0],0x1
  0x000000011bac6c09:   mov    edx,0x0
  0x000000011bac6c0e:   nop
  0x000000011bac6c0f:   call   0x000000011bac6ca5           ; ImmutableOopMap {}
                                                            ;*invokestatic parseDouble {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@4 (line 115)
                                                            ;   {static_call}
  0x000000011bac6c14:   add    rsp,0x30
  0x000000011bac6c18:   pop    rbp
  0x000000011bac6c19:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x000000011bac6c20:   ja     0x000000011bac6c4a
  0x000000011bac6c26:   ret
  0x000000011bac6c27:   movabs r10,0x13a83fa98              ;   {metadata({method} {0x000000013a83fa98} 'parseDouble' '([C)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011bac6c31:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011bac6c36:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011bac6c3e:   call   0x000000011b4db500           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@-1 (line 115)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011bac6c43:   jmp    0x000000011bac6bf4
  0x000000011bac6c45:   call   0x000000011b4d5b20           ; ImmutableOopMap {rsi=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@3 (line 115)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011bac6c4a:   movabs r10,0x11bac6c19              ;   {internal_word}
  0x000000011bac6c54:   mov    QWORD PTR [r15+0x350],r10
  0x000000011bac6c5b:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x000000011bac6c60:   nop
  0x000000011bac6c61:   nop
  0x000000011bac6c62:   mov    rax,QWORD PTR [r15+0x3c8]
  0x000000011bac6c69:   mov    QWORD PTR [r15+0x3c8],0x0
  0x000000011bac6c74:   mov    QWORD PTR [r15+0x3d0],0x0
  0x000000011bac6c7f:   add    rsp,0x30
  0x000000011bac6c83:   pop    rbp
  0x000000011bac6c84:   jmp    0x000000011b446f00           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011bac6c89:   hlt
  0x000000011bac6c8a:   hlt
  0x000000011bac6c8b:   hlt
  0x000000011bac6c8c:   hlt
  0x000000011bac6c8d:   hlt
  0x000000011bac6c8e:   hlt
  0x000000011bac6c8f:   hlt
  0x000000011bac6c90:   hlt
  0x000000011bac6c91:   hlt
  0x000000011bac6c92:   hlt
  0x000000011bac6c93:   hlt
  0x000000011bac6c94:   hlt
  0x000000011bac6c95:   hlt
  0x000000011bac6c96:   hlt
  0x000000011bac6c97:   hlt
  0x000000011bac6c98:   hlt
  0x000000011bac6c99:   hlt
  0x000000011bac6c9a:   hlt
  0x000000011bac6c9b:   hlt
  0x000000011bac6c9c:   hlt
  0x000000011bac6c9d:   hlt
  0x000000011bac6c9e:   hlt
  0x000000011bac6c9f:   hlt
[Stub Code]
  0x000000011bac6ca0:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x000000011bac6ca5:   movabs rbx,0x13a83fc70              ;   {static_stub}
  0x000000011bac6caf:   jmp    0x000000011b40fb5f           ;   {runtime_call I2C/C2I adapters}
[Exception Handler]
  0x000000011bac6cb4:   call   0x000000011b4d7900           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011bac6cb9:   movabs rdi,0x10db45fc1              ;   {external_word}
  0x000000011bac6cc3:   and    rsp,0xfffffffffffffff0
  0x000000011bac6cc7:   call   0x000000010d7f0290           ;   {runtime_call _ZN14MacroAssembler7debug64EPcxPx}
  0x000000011bac6ccc:   hlt
[Deopt Handler Code]
  0x000000011bac6ccd:   movabs r10,0x11bac6ccd              ;   {section_word}
  0x000000011bac6cd7:   push   r10
  0x000000011bac6cd9:   jmp    0x000000011b4333a0           ;   {runtime_call DeoptimizationBlob}
  0x000000011bac6cde:   hlt
  0x000000011bac6cdf:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     631 1027       4       ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble (8 bytes)
 total in heap  [0x0000000122f16910,0x0000000122f16f38] = 1576
 relocation     [0x0000000122f16a70,0x0000000122f16aa8] = 56
 main code      [0x0000000122f16ac0,0x0000000122f16c80] = 448
 stub code      [0x0000000122f16c80,0x0000000122f16ca8] = 40
 oops           [0x0000000122f16ca8,0x0000000122f16cb0] = 8
 metadata       [0x0000000122f16cb0,0x0000000122f16cc8] = 24
 scopes data    [0x0000000122f16cc8,0x0000000122f16e28] = 352
 scopes pcs     [0x0000000122f16e28,0x0000000122f16f08] = 224
 dependencies   [0x0000000122f16f08,0x0000000122f16f10] = 8
 handler table  [0x0000000122f16f10,0x0000000122f16f28] = 24
 nul chk table  [0x0000000122f16f28,0x0000000122f16f38] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013a83fa98} 'parseDouble' '([C)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray'
  # parm0:    rsi:rsi   = '[C'
  #           [sp+0x40]  (sp of caller)
  0x0000000122f16ac0:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000122f16ac7:   push   rbp
  0x0000000122f16ac8:   sub    rsp,0x30
  0x0000000122f16acc:   mov    r8d,DWORD PTR [rsi+0xc]      ; implicit exception: dispatches to 0x0000000122f16c5d
  0x0000000122f16ad0:   test   r8d,r8d
  0x0000000122f16ad3:   jbe    0x0000000122f16b7b
  0x0000000122f16ad9:   movzx  ebp,WORD PTR [rsi+0x10]
  0x0000000122f16add:   data16 xchg ax,ax
  0x0000000122f16ae0:   cmp    ebp,0x20
  0x0000000122f16ae3:   jle    0x0000000122f16ba8
  0x0000000122f16ae9:   cmp    r8d,0x1
  0x0000000122f16aed:   jbe    0x0000000122f16b94
  0x0000000122f16af3:   movzx  ebp,WORD PTR [rsi+0x10]
  0x0000000122f16af7:   cmp    ebp,0x2d
  0x0000000122f16afa:   nop    WORD PTR [rax+rax*1+0x0]
  0x0000000122f16b00:   je     0x0000000122f16bc4
  0x0000000122f16b06:   cmp    ebp,0x2b
  0x0000000122f16b09:   je     0x0000000122f16bd8
  0x0000000122f16b0f:   cmp    ebp,0x4e
  0x0000000122f16b12:   je     0x0000000122f16bec
  0x0000000122f16b18:   cmp    ebp,0x49
  0x0000000122f16b1b:   nop    DWORD PTR [rax+rax*1+0x0]
  0x0000000122f16b20:   je     0x0000000122f16c00
  0x0000000122f16b26:   cmp    ebp,0x30
  0x0000000122f16b29:   jne    0x0000000122f16b77
  0x0000000122f16b2f:   cmp    r8d,0x1
  0x0000000122f16b33:   jle    0x0000000122f16c14
  0x0000000122f16b39:   movzx  ebp,WORD PTR [rsi+0x12]
  0x0000000122f16b3d:   data16 xchg ax,ax
  0x0000000122f16b40:   cmp    ebp,0x78
  0x0000000122f16b43:   je     0x0000000122f16c28
  0x0000000122f16b49:   cmp    ebp,0x58
  0x0000000122f16b4c:   je     0x0000000122f16c3c
  0x0000000122f16b52:   mov    edx,0x1
  0x0000000122f16b57:   xor    ecx,ecx
  0x0000000122f16b59:   xor    r9d,r9d
  0x0000000122f16b5c:   mov    edi,edx
  0x0000000122f16b5e:   nop
  0x0000000122f16b5f:   call   0x0000000122f14640           ; ImmutableOopMap {}
                                                            ;*invokestatic parseRestOfDecimalFloatLiteral {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@199 (line 272)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@4 (line 115)
                                                            ;   {static_call}
  0x0000000122f16b64:   add    rsp,0x30
  0x0000000122f16b68:   pop    rbp
  0x0000000122f16b69:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x0000000122f16b70:   ja     0x0000000122f16c68
  0x0000000122f16b76:   ret
  0x0000000122f16b77:   xor    edx,edx
  0x0000000122f16b79:   jmp    0x0000000122f16b57
  0x0000000122f16b7b:   mov    rbp,rsi
  0x0000000122f16b7e:   mov    DWORD PTR [rsp+0x4],r8d
  0x0000000122f16b83:   mov    DWORD PTR [rsp+0x8],r8d
  0x0000000122f16b88:   mov    esi,0xffffff45
  0x0000000122f16b8d:   xchg   ax,ax
  0x0000000122f16b8f:   call   0x000000011b433000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@15 (line 239)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@4 (line 115)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f16b94:   mov    DWORD PTR [rsp+0x4],r8d
  0x0000000122f16b99:   mov    QWORD PTR [rsp+0x8],rsi
  0x0000000122f16b9e:   mov    esi,0xffffffe4
  0x0000000122f16ba3:   call   0x000000011b433000           ; ImmutableOopMap {[8]=Oop }
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@31 (line 242)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@4 (line 115)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f16ba8:   mov    DWORD PTR [rsp+0xc],r8d
  0x0000000122f16bad:   mov    QWORD PTR [rsp+0x10],rsi
  0x0000000122f16bb2:   mov    DWORD PTR [rsp+0x18],r8d
  0x0000000122f16bb7:   mov    esi,0xffffff45
  0x0000000122f16bbc:   data16 xchg ax,ax
  0x0000000122f16bbf:   call   0x000000011b433000           ; ImmutableOopMap {[16]=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::skipWhitespace@12 (line 590)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@7 (line 238)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@4 (line 115)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f16bc4:   mov    QWORD PTR [rsp],rsi
  0x0000000122f16bc8:   mov    DWORD PTR [rsp+0xc],r8d
  0x0000000122f16bcd:   mov    esi,0xffffff45
  0x0000000122f16bd2:   nop
  0x0000000122f16bd3:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@38 (line 246)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@4 (line 115)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f16bd8:   mov    QWORD PTR [rsp],rsi
  0x0000000122f16bdc:   mov    DWORD PTR [rsp+0xc],r8d
  0x0000000122f16be1:   mov    esi,0xffffff45
  0x0000000122f16be6:   nop
  0x0000000122f16be7:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@57 (line 247)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@4 (line 115)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f16bec:   mov    QWORD PTR [rsp],rsi
  0x0000000122f16bf0:   mov    DWORD PTR [rsp+0x8],r8d
  0x0000000122f16bf5:   mov    esi,0xffffff45
  0x0000000122f16bfa:   nop
  0x0000000122f16bfb:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@95 (line 256)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@4 (line 115)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f16c00:   mov    QWORD PTR [rsp],rsi
  0x0000000122f16c04:   mov    DWORD PTR [rsp+0x8],r8d
  0x0000000122f16c09:   mov    esi,0xffffff45
  0x0000000122f16c0e:   nop
  0x0000000122f16c0f:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@111 (line 258)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@4 (line 115)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f16c14:   mov    rbp,rsi
  0x0000000122f16c17:   mov    DWORD PTR [rsp+0x4],r8d
  0x0000000122f16c1c:   mov    esi,0xffffff45
  0x0000000122f16c21:   xchg   ax,ax
  0x0000000122f16c23:   call   0x000000011b433000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@150 (line 266)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@4 (line 115)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f16c28:   mov    QWORD PTR [rsp],rsi
  0x0000000122f16c2c:   mov    DWORD PTR [rsp+0x8],r8d
  0x0000000122f16c31:   mov    esi,0xffffff45
  0x0000000122f16c36:   nop
  0x0000000122f16c37:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@167 (line 267)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@4 (line 115)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f16c3c:   mov    QWORD PTR [rsp],rsi
  0x0000000122f16c40:   mov    DWORD PTR [rsp+0x8],r8d
  0x0000000122f16c45:   mov    esi,0xffffff45
  0x0000000122f16c4a:   nop
  0x0000000122f16c4b:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@174 (line 267)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@4 (line 115)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f16c50:   mov    rsi,rax
  0x0000000122f16c53:   add    rsp,0x30
  0x0000000122f16c57:   pop    rbp
  0x0000000122f16c58:   jmp    0x000000011b4e2700           ;   {runtime_call _rethrow_Java}
  0x0000000122f16c5d:   mov    esi,0xfffffff6
  0x0000000122f16c62:   nop
  0x0000000122f16c63:   call   0x000000011b433000           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@3 (line 115)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f16c68:   movabs r10,0x122f16b69              ;   {internal_word}
  0x0000000122f16c72:   mov    QWORD PTR [r15+0x350],r10
  0x0000000122f16c79:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x0000000122f16c7e:   hlt
  0x0000000122f16c7f:   hlt
[Stub Code]
  0x0000000122f16c80:   movabs rbx,0x0                      ;   {no_reloc}
  0x0000000122f16c8a:   jmp    0x0000000122f16c8a           ;   {runtime_call}
[Exception Handler]
  0x0000000122f16c8f:   jmp    0x000000011b447880           ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000122f16c94:   call   0x0000000122f16c99
  0x0000000122f16c99:   sub    QWORD PTR [rsp],0x5
  0x0000000122f16c9e:   jmp    0x000000011b4333a0           ;   {runtime_call DeoptimizationBlob}
  0x0000000122f16ca3:   hlt
  0x0000000122f16ca4:   hlt
  0x0000000122f16ca5:   hlt
  0x0000000122f16ca6:   hlt
  0x0000000122f16ca7:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     636  870       2       ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble (203 bytes)
 total in heap  [0x000000011bacff10,0x000000011bad0828] = 2328
 relocation     [0x000000011bad0070,0x000000011bad0120] = 176
 main code      [0x000000011bad0120,0x000000011bad0520] = 1024
 stub code      [0x000000011bad0520,0x000000011bad05b0] = 144
 oops           [0x000000011bad05b0,0x000000011bad05b8] = 8
 metadata       [0x000000011bad05b8,0x000000011bad05c8] = 16
 scopes data    [0x000000011bad05c8,0x000000011bad0678] = 176
 scopes pcs     [0x000000011bad0678,0x000000011bad07e8] = 368
 dependencies   [0x000000011bad07e8,0x000000011bad07f0] = 8
 nul chk table  [0x000000011bad07f0,0x000000011bad0828] = 56

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013a83fc70} 'parseDouble' '([CII)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray'
  # parm0:    rsi:rsi   = '[C'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x70]  (sp of caller)
  0x000000011bad0120:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011bad0127:   push   rbp
  0x000000011bad0128:   sub    rsp,0x60
  0x000000011bad012c:   mov    rdi,rdx
  0x000000011bad012f:   movabs rdx,0x13a845608
  0x000000011bad0139:   mov    r8d,DWORD PTR [rdx+0x8]
  0x000000011bad013d:   add    r8d,0x2
  0x000000011bad0141:   mov    DWORD PTR [rdx+0x8],r8d
  0x000000011bad0145:   and    r8d,0xffe
  0x000000011bad014c:   cmp    r8d,0x0
  0x000000011bad0150:   je     0x000000011bad03ce
  0x000000011bad0156:   mov    rbx,rcx
  0x000000011bad0159:   add    ebx,edi
  0x000000011bad015b:   mov    rdx,rdi
  0x000000011bad015e:   jmp    0x000000011bad01b7
  0x000000011bad0163:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011bad0168:   cmp    edx,DWORD PTR [rsi+0xc]      ; implicit exception: dispatches to 0x000000011bad03ef
  0x000000011bad016b:   jae    0x000000011bad03f9
  0x000000011bad0171:   movsxd r8,edx
  0x000000011bad0174:   movzx  r8d,WORD PTR [rsi+r8*2+0x10]
  0x000000011bad017a:   cmp    r8d,0x20
  0x000000011bad017e:   jg     0x000000011bad01bb
  0x000000011bad0184:   inc    edx
  0x000000011bad0186:   movabs r8,0x13a845640
  0x000000011bad0190:   mov    r9d,DWORD PTR [r8+0xc]
  0x000000011bad0194:   add    r9d,0x2
  0x000000011bad0198:   mov    DWORD PTR [r8+0xc],r9d
  0x000000011bad019c:   and    r9d,0x7ffe
  0x000000011bad01a3:   cmp    r9d,0x0
  0x000000011bad01a7:   je     0x000000011bad0407
  0x000000011bad01ad:   mov    r10,QWORD PTR [r15+0x340]    ; ImmutableOopMap {rsi=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::skipWhitespace@21 (line 589)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@7 (line 238)
  0x000000011bad01b4:   test   DWORD PTR [r10],eax          ;   {poll}
  0x000000011bad01b7:   cmp    edx,ebx
  0x000000011bad01b9:   jl     0x000000011bad0168
  0x000000011bad01bb:   cmp    edx,ebx
  0x000000011bad01bd:   je     0x000000011bad0344
  0x000000011bad01c3:   cmp    edx,DWORD PTR [rsi+0xc]      ; implicit exception: dispatches to 0x000000011bad0428
  0x000000011bad01c6:   jae    0x000000011bad0432
  0x000000011bad01cc:   movsxd r8,edx
  0x000000011bad01cf:   movzx  r8d,WORD PTR [rsi+r8*2+0x10]
  0x000000011bad01d5:   cmp    r8d,0x2d
  0x000000011bad01d9:   mov    eax,0x0
  0x000000011bad01de:   jne    0x000000011bad01e9
  0x000000011bad01e4:   mov    eax,0x1
  0x000000011bad01e9:   cmp    r8d,0x2d
  0x000000011bad01ed:   je     0x000000011bad01fd
  0x000000011bad01f3:   cmp    r8d,0x2b
  0x000000011bad01f7:   jne    0x000000011bad022e
  0x000000011bad01fd:   inc    edx
  0x000000011bad01ff:   cmp    edx,ebx
  0x000000011bad0201:   jge    0x000000011bad021e
  0x000000011bad0207:   cmp    edx,DWORD PTR [rsi+0xc]
  0x000000011bad020a:   jae    0x000000011bad0440
  0x000000011bad0210:   movsxd r8,edx
  0x000000011bad0213:   movzx  r8d,WORD PTR [rsi+r8*2+0x10]
  0x000000011bad0219:   jmp    0x000000011bad0224
  0x000000011bad021e:   mov    r8d,0x0
  0x000000011bad0224:   cmp    r8d,0x0
  0x000000011bad0228:   je     0x000000011bad032f
  0x000000011bad022e:   cmp    r8d,0x4e
  0x000000011bad0232:   je     0x000000011bad030f
  0x000000011bad0238:   cmp    r8d,0x49
  0x000000011bad023c:   je     0x000000011bad02e7
  0x000000011bad0242:   cmp    r8d,0x30
  0x000000011bad0246:   mov    r11d,0x0
  0x000000011bad024c:   jne    0x000000011bad0258
  0x000000011bad0252:   mov    r11d,0x1
  0x000000011bad0258:   cmp    r8d,0x30
  0x000000011bad025c:   jne    0x000000011bad0299
  0x000000011bad0262:   inc    edx
  0x000000011bad0264:   cmp    edx,ebx
  0x000000011bad0266:   jge    0x000000011bad0282
  0x000000011bad026c:   cmp    edx,DWORD PTR [rsi+0xc]
  0x000000011bad026f:   jae    0x000000011bad044e
  0x000000011bad0275:   movsxd rcx,edx
  0x000000011bad0278:   movzx  ecx,WORD PTR [rsi+rcx*2+0x10]
  0x000000011bad027d:   jmp    0x000000011bad0287
  0x000000011bad0282:   mov    ecx,0x0
  0x000000011bad0287:   cmp    ecx,0x78
  0x000000011bad028a:   je     0x000000011bad02bf
  0x000000011bad0290:   cmp    ecx,0x58
  0x000000011bad0293:   je     0x000000011bad02bf
  0x000000011bad0299:   mov    rcx,rdi
  0x000000011bad029c:   mov    r8,rbx
  0x000000011bad029f:   mov    r9,rax
  0x000000011bad02a2:   mov    rdi,r11
  0x000000011bad02a5:   xchg   ax,ax
  0x000000011bad02a7:   call   0x000000011b42e080           ; ImmutableOopMap {}
                                                            ;*invokestatic parseRestOfDecimalFloatLiteral {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@199 (line 272)
                                                            ;   {static_call}
  0x000000011bad02ac:   add    rsp,0x60
  0x000000011bad02b0:   pop    rbp
  0x000000011bad02b1:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x000000011bad02b8:   ja     0x000000011bad045c
  0x000000011bad02be:   ret
  0x000000011bad02bf:   inc    edx
  0x000000011bad02c1:   mov    rcx,rdi
  0x000000011bad02c4:   mov    r8,rbx
  0x000000011bad02c7:   mov    r9,rax
  0x000000011bad02ca:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011bad02cf:   call   0x000000011b42e080           ; ImmutableOopMap {}
                                                            ;*invokestatic parseRestOfHexFloatingPointLiteral {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@186 (line 268)
                                                            ;   {static_call}
  0x000000011bad02d4:   add    rsp,0x60
  0x000000011bad02d8:   pop    rbp
  0x000000011bad02d9:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x000000011bad02e0:   ja     0x000000011bad0472
  0x000000011bad02e6:   ret
  0x000000011bad02e7:   mov    rcx,rbx
  0x000000011bad02ea:   mov    r8,rax
  0x000000011bad02ed:   mov    r9,rdi
  0x000000011bad02f0:   nop    DWORD PTR [rax+0x0]
  0x000000011bad02f7:   call   0x000000011b42e080           ; ImmutableOopMap {}
                                                            ;*invokestatic parseInfinity {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@121 (line 259)
                                                            ;   {static_call}
  0x000000011bad02fc:   add    rsp,0x60
  0x000000011bad0300:   pop    rbp
  0x000000011bad0301:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x000000011bad0308:   ja     0x000000011bad0488
  0x000000011bad030e:   ret
  0x000000011bad030f:   mov    rcx,rbx
  0x000000011bad0312:   mov    r8,rdi
  0x000000011bad0315:   xchg   ax,ax
  0x000000011bad0317:   call   0x000000011b42e080           ; ImmutableOopMap {}
                                                            ;*invokestatic parseNaN {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@103 (line 257)
                                                            ;   {static_call}
  0x000000011bad031c:   add    rsp,0x60
  0x000000011bad0320:   pop    rbp
  0x000000011bad0321:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x000000011bad0328:   ja     0x000000011bad049e
  0x000000011bad032e:   ret
  0x000000011bad032f:   mov    rdx,rdi
  0x000000011bad0332:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011bad0337:   call   0x000000011b42e080           ; ImmutableOopMap {}
                                                            ;*invokestatic newNumberFormatException {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@87 (line 250)
                                                            ;   {static_call}
  0x000000011bad033c:   cmp    rax,QWORD PTR [rax]          ; implicit exception: dispatches to 0x000000011bad04b4
  0x000000011bad033f:   jmp    0x000000011bad0503
  0x000000011bad0344:   nop    DWORD PTR [rax+0x0]
  0x000000011bad0348:   jmp    0x000000011bad04c8           ;   {no_reloc}
  0x000000011bad034d:   add    BYTE PTR [rax],al
  0x000000011bad034f:   add    BYTE PTR [rax],al
  0x000000011bad0351:   add    BYTE PTR [rax+0x123ba],al
  0x000000011bad0357:   add    BYTE PTR [rdi+rcx*1],al
  0x000000011bad035a:   test   DWORD PTR [rax+0x1],edi
  0x000000011bad035d:   add    BYTE PTR [rax],al
  0x000000011bad035f:   mov    rax,QWORD PTR [r15+0xf0]
  0x000000011bad0366:   lea    rdi,[rax+0x28]
  0x000000011bad036a:   cmp    rdi,QWORD PTR [r15+0x100]
  0x000000011bad0371:   ja     0x000000011bad04d7
  0x000000011bad0377:   mov    QWORD PTR [r15+0xf0],rdi
  0x000000011bad037e:   mov    QWORD PTR [rax],0x1
  0x000000011bad0385:   mov    rcx,rdx
  0x000000011bad0388:   movabs r10,0x800000000
  0x000000011bad0392:   sub    rcx,r10
  0x000000011bad0395:   mov    DWORD PTR [rax+0x8],ecx
  0x000000011bad0398:   xor    rcx,rcx
  0x000000011bad039b:   mov    DWORD PTR [rax+0xc],ecx
  0x000000011bad039e:   xor    rcx,rcx
  0x000000011bad03a1:   mov    QWORD PTR [rax+0x10],rcx
  0x000000011bad03a5:   mov    QWORD PTR [rax+0x18],rcx
  0x000000011bad03a9:   mov    QWORD PTR [rax+0x20],rcx
  0x000000011bad03ad:   movabs rdx,0x7ffc50390              ;   {oop("empty String"{0x00000007ffc50390})}
  0x000000011bad03b7:   mov    rsi,rax
  0x000000011bad03ba:   mov    QWORD PTR [rsp+0x50],rax
  0x000000011bad03bf:   call   0x000000011b42da80           ; ImmutableOopMap {[80]=Oop }
                                                            ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@24 (line 240)
                                                            ;   {optimized virtual_call}
  0x000000011bad03c4:   mov    rax,QWORD PTR [rsp+0x50]
  0x000000011bad03c9:   jmp    0x000000011bad0503
  0x000000011bad03ce:   movabs r10,0x13a83fc70              ;   {metadata({method} {0x000000013a83fc70} 'parseDouble' '([CII)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011bad03d8:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011bad03dd:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011bad03e5:   call   0x000000011b4db500           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@-1 (line 234)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011bad03ea:   jmp    0x000000011bad0156
  0x000000011bad03ef:   call   0x000000011b4d5b20           ; ImmutableOopMap {rsi=Oop }
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::skipWhitespace@9 (line 590)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@7 (line 238)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011bad03f4:   call   0x000000011b4d5b20           ; ImmutableOopMap {rsi=Oop }
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::skipWhitespace@9 (line 590)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@7 (line 238)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011bad03f9:   mov    QWORD PTR [rsp],rdx
  0x000000011bad03fd:   mov    QWORD PTR [rsp+0x8],rsi
  0x000000011bad0402:   call   0x000000011b4d4f20           ; ImmutableOopMap {rsi=Oop }
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::skipWhitespace@9 (line 590)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@7 (line 238)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011bad0407:   movabs r10,0x13a844a28              ;   {metadata({method} {0x000000013a844a28} 'skipWhitespace' '([CII)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011bad0411:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011bad0416:   mov    QWORD PTR [rsp],0x15
  0x000000011bad041e:   call   0x000000011b4db500           ; ImmutableOopMap {rsi=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::skipWhitespace@21 (line 589)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@7 (line 238)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011bad0423:   jmp    0x000000011bad01ad
  0x000000011bad0428:   call   0x000000011b4d5b20           ; ImmutableOopMap {rsi=Oop }
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@31 (line 242)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011bad042d:   call   0x000000011b4d5b20           ; ImmutableOopMap {rsi=Oop }
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@31 (line 242)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011bad0432:   mov    QWORD PTR [rsp],rdx
  0x000000011bad0436:   mov    QWORD PTR [rsp+0x8],rsi
  0x000000011bad043b:   call   0x000000011b4d4f20           ; ImmutableOopMap {rsi=Oop }
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@31 (line 242)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011bad0440:   mov    QWORD PTR [rsp],rdx
  0x000000011bad0444:   mov    QWORD PTR [rsp+0x8],rsi
  0x000000011bad0449:   call   0x000000011b4d4f20           ; ImmutableOopMap {rsi=Oop }
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@72 (line 248)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011bad044e:   mov    QWORD PTR [rsp],rdx
  0x000000011bad0452:   mov    QWORD PTR [rsp+0x8],rsi
  0x000000011bad0457:   call   0x000000011b4d4f20           ; ImmutableOopMap {rsi=Oop }
                                                            ;*caload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@156 (line 266)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011bad045c:   movabs r10,0x11bad02b1              ;   {internal_word}
  0x000000011bad0466:   mov    QWORD PTR [r15+0x350],r10
  0x000000011bad046d:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x000000011bad0472:   movabs r10,0x11bad02d9              ;   {internal_word}
  0x000000011bad047c:   mov    QWORD PTR [r15+0x350],r10
  0x000000011bad0483:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x000000011bad0488:   movabs r10,0x11bad0301              ;   {internal_word}
  0x000000011bad0492:   mov    QWORD PTR [r15+0x350],r10
  0x000000011bad0499:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x000000011bad049e:   movabs r10,0x11bad0321              ;   {internal_word}
  0x000000011bad04a8:   mov    QWORD PTR [r15+0x350],r10
  0x000000011bad04af:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x000000011bad04b4:   call   0x000000011b4d5b20           ; ImmutableOopMap {rax=Oop }
                                                            ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@90 (line 250)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011bad04b9:   movabs rdx,0x0                      ;   {metadata(NULL)}
  0x000000011bad04c3:   mov    eax,0xa050f00
  0x000000011bad04c8:   call   0x000000011b4d9b80           ; ImmutableOopMap {}
                                                            ;*new {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@18 (line 240)
                                                            ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000000011bad04cd:   jmp    0x000000011bad0348
  0x000000011bad04d2:   call   0x000000011b4d5b20           ; ImmutableOopMap {}
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@18 (line 240)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011bad04d7:   mov    rdx,rdx
  0x000000011bad04da:   call   0x000000011b4d6700           ; ImmutableOopMap {}
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseDouble@18 (line 240)
                                                            ;   {runtime_call fast_new_instance_init_check Runtime1 stub}
  0x000000011bad04df:   jmp    0x000000011bad03ad
  0x000000011bad04e4:   nop
  0x000000011bad04e5:   nop
  0x000000011bad04e6:   mov    rax,QWORD PTR [r15+0x3c8]
  0x000000011bad04ed:   mov    QWORD PTR [r15+0x3c8],0x0
  0x000000011bad04f8:   mov    QWORD PTR [r15+0x3d0],0x0
  0x000000011bad0503:   add    rsp,0x60
  0x000000011bad0507:   pop    rbp
  0x000000011bad0508:   jmp    0x000000011b446f00           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011bad050d:   hlt
  0x000000011bad050e:   hlt
  0x000000011bad050f:   hlt
  0x000000011bad0510:   hlt
  0x000000011bad0511:   hlt
  0x000000011bad0512:   hlt
  0x000000011bad0513:   hlt
  0x000000011bad0514:   hlt
  0x000000011bad0515:   hlt
  0x000000011bad0516:   hlt
  0x000000011bad0517:   hlt
  0x000000011bad0518:   hlt
  0x000000011bad0519:   hlt
  0x000000011bad051a:   hlt
  0x000000011bad051b:   hlt
  0x000000011bad051c:   hlt
  0x000000011bad051d:   hlt
  0x000000011bad051e:   hlt
  0x000000011bad051f:   hlt
[Stub Code]
  0x000000011bad0520:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x000000011bad0525:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011bad052f:   jmp    0x000000011bad052f           ;   {runtime_call}
  0x000000011bad0534:   nop
  0x000000011bad0535:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011bad053f:   jmp    0x000000011bad053f           ;   {runtime_call}
  0x000000011bad0544:   nop
  0x000000011bad0545:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011bad054f:   jmp    0x000000011bad054f           ;   {runtime_call}
  0x000000011bad0554:   nop
  0x000000011bad0555:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011bad055f:   jmp    0x000000011bad055f           ;   {runtime_call}
  0x000000011bad0564:   nop
  0x000000011bad0565:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011bad056f:   jmp    0x000000011bad056f           ;   {runtime_call}
  0x000000011bad0574:   nop
  0x000000011bad0575:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011bad057f:   jmp    0x000000011bad057f           ;   {runtime_call}
[Exception Handler]
  0x000000011bad0584:   call   0x000000011b4d7900           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011bad0589:   movabs rdi,0x10db45fc1              ;   {external_word}
  0x000000011bad0593:   and    rsp,0xfffffffffffffff0
  0x000000011bad0597:   call   0x000000010d7f0290           ;   {runtime_call _ZN14MacroAssembler7debug64EPcxPx}
  0x000000011bad059c:   hlt
[Deopt Handler Code]
  0x000000011bad059d:   movabs r10,0x11bad059d              ;   {section_word}
  0x000000011bad05a7:   push   r10
  0x000000011bad05a9:   jmp    0x000000011b4333a0           ;   {runtime_call DeoptimizationBlob}
  0x000000011bad05ae:   hlt
  0x000000011bad05af:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     653 1033       4       ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::isDigit (18 bytes)
 total in heap  [0x0000000122f18c10,0x0000000122f18e30] = 544
 relocation     [0x0000000122f18d70,0x0000000122f18d80] = 16
 main code      [0x0000000122f18d80,0x0000000122f18de0] = 96
 stub code      [0x0000000122f18de0,0x0000000122f18df8] = 24
 oops           [0x0000000122f18df8,0x0000000122f18e00] = 8
 scopes data    [0x0000000122f18e00,0x0000000122f18e08] = 8
 scopes pcs     [0x0000000122f18e08,0x0000000122f18e28] = 32
 dependencies   [0x0000000122f18e28,0x0000000122f18e30] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013a83f8e8} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray'
  # parm0:    rsi       = char
  #           [sp+0x20]  (sp of caller)
  0x0000000122f18d80:   sub    rsp,0x18
  0x0000000122f18d87:   mov    QWORD PTR [rsp+0x10],rbp
  0x0000000122f18d8c:   add    esi,0xffffffd0
  0x0000000122f18d8f:   cmp    esi,0xa
  0x0000000122f18d92:   jae    0x0000000122f18dac
  0x0000000122f18d94:   mov    eax,0x1
  0x0000000122f18d99:   add    rsp,0x10
  0x0000000122f18d9d:   pop    rbp
  0x0000000122f18d9e:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x0000000122f18da5:   ja     0x0000000122f18db0
  0x0000000122f18dab:   ret
  0x0000000122f18dac:   xor    eax,eax
  0x0000000122f18dae:   jmp    0x0000000122f18d99
  0x0000000122f18db0:   movabs r10,0x122f18d9e              ;   {internal_word}
  0x0000000122f18dba:   mov    QWORD PTR [r15+0x350],r10
  0x0000000122f18dc1:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x0000000122f18dc6:   hlt
  0x0000000122f18dc7:   hlt
  0x0000000122f18dc8:   hlt
  0x0000000122f18dc9:   hlt
  0x0000000122f18dca:   hlt
  0x0000000122f18dcb:   hlt
  0x0000000122f18dcc:   hlt
  0x0000000122f18dcd:   hlt
  0x0000000122f18dce:   hlt
  0x0000000122f18dcf:   hlt
  0x0000000122f18dd0:   hlt
  0x0000000122f18dd1:   hlt
  0x0000000122f18dd2:   hlt
  0x0000000122f18dd3:   hlt
  0x0000000122f18dd4:   hlt
  0x0000000122f18dd5:   hlt
  0x0000000122f18dd6:   hlt
  0x0000000122f18dd7:   hlt
  0x0000000122f18dd8:   hlt
  0x0000000122f18dd9:   hlt
  0x0000000122f18dda:   hlt
  0x0000000122f18ddb:   hlt
  0x0000000122f18ddc:   hlt
  0x0000000122f18ddd:   hlt
  0x0000000122f18dde:   hlt
  0x0000000122f18ddf:   hlt
[Exception Handler]
  0x0000000122f18de0:   jmp    0x000000011b447880           ;   {no_reloc}
[Deopt Handler Code]
  0x0000000122f18de5:   call   0x0000000122f18dea
  0x0000000122f18dea:   sub    QWORD PTR [rsp],0x5
  0x0000000122f18def:   jmp    0x000000011b4333a0           ;   {runtime_call DeoptimizationBlob}
  0x0000000122f18df4:   hlt
  0x0000000122f18df5:   hlt
  0x0000000122f18df6:   hlt
  0x0000000122f18df7:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     662 1034       3       ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteralTheHardWay (14 bytes)
 total in heap  [0x000000011bae5910,0x000000011bae5f48] = 1592
 relocation     [0x000000011bae5a70,0x000000011bae5ae0] = 112
 main code      [0x000000011bae5ae0,0x000000011bae5dc0] = 736
 stub code      [0x000000011bae5dc0,0x000000011bae5e20] = 96
 oops           [0x000000011bae5e20,0x000000011bae5e28] = 8
 metadata       [0x000000011bae5e28,0x000000011bae5e40] = 24
 scopes data    [0x000000011bae5e40,0x000000011bae5e90] = 80
 scopes pcs     [0x000000011bae5e90,0x000000011bae5f30] = 160
 dependencies   [0x000000011bae5f30,0x000000011bae5f38] = 8
 nul chk table  [0x000000011bae5f38,0x000000011bae5f48] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013a844488} 'parseRestOfDecimalFloatLiteralTheHardWay' '([CII)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray'
  # parm0:    rsi:rsi   = '[C'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x80]  (sp of caller)
  0x000000011bae5ae0:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011bae5ae7:   push   rbp
  0x000000011bae5ae8:   sub    rsp,0x70
  0x000000011bae5aec:   mov    r8,rsi
  0x000000011bae5aef:   mov    rbx,rdx
  0x000000011bae5af2:   mov    r9,rcx
  0x000000011bae5af5:   movabs rdx,0x13a8465e0              ;   {metadata(method data for {method} {0x000000013a844488} 'parseRestOfDecimalFloatLiteralTheHardWay' '([CII)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011bae5aff:   mov    esi,DWORD PTR [rdx+0xac]
  0x000000011bae5b05:   add    esi,0x2
  0x000000011bae5b08:   mov    DWORD PTR [rdx+0xac],esi
  0x000000011bae5b0e:   and    esi,0x7fe
  0x000000011bae5b14:   cmp    esi,0x0
  0x000000011bae5b17:   je     0x000000011bae5cef
  0x000000011bae5b1d:   movabs rdx,0x800008340              ;   {metadata('java/lang/String')}
  0x000000011bae5b27:   mov    rax,QWORD PTR [r15+0xf0]
  0x000000011bae5b2e:   lea    rdi,[rax+0x18]
  0x000000011bae5b32:   cmp    rdi,QWORD PTR [r15+0x100]
  0x000000011bae5b39:   ja     0x000000011bae5d10
  0x000000011bae5b3f:   mov    QWORD PTR [r15+0xf0],rdi
  0x000000011bae5b46:   mov    QWORD PTR [rax],0x1
  0x000000011bae5b4d:   mov    rcx,rdx
  0x000000011bae5b50:   movabs r10,0x800000000
  0x000000011bae5b5a:   sub    rcx,r10
  0x000000011bae5b5d:   mov    DWORD PTR [rax+0x8],ecx
  0x000000011bae5b60:   xor    rcx,rcx
  0x000000011bae5b63:   mov    DWORD PTR [rax+0xc],ecx
  0x000000011bae5b66:   xor    rcx,rcx
  0x000000011bae5b69:   mov    QWORD PTR [rax+0x10],rcx
  0x000000011bae5b6d:   mov    rdx,rax
  0x000000011bae5b70:   movabs rcx,0x13a8465e0              ;   {metadata(method data for {method} {0x000000013a844488} 'parseRestOfDecimalFloatLiteralTheHardWay' '([CII)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011bae5b7a:   add    QWORD PTR [rcx+0xf0],0x1
  0x000000011bae5b82:   mov    rdx,r8
  0x000000011bae5b85:   mov    rcx,rbx
  0x000000011bae5b88:   mov    r8,r9
  0x000000011bae5b8b:   mov    rsi,rax
  0x000000011bae5b8e:   mov    QWORD PTR [rsp+0x60],rax
  0x000000011bae5b93:   nop    DWORD PTR [rax+0x0]
  0x000000011bae5b97:   call   0x0000000122ecc9c0           ; ImmutableOopMap {[96]=Oop }
                                                            ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteralTheHardWay@7 (line 449)
                                                            ;   {optimized virtual_call}
  0x000000011bae5b9c:   movabs rsi,0x13a8465e0              ;   {metadata(method data for {method} {0x000000013a844488} 'parseRestOfDecimalFloatLiteralTheHardWay' '([CII)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011bae5ba6:   add    QWORD PTR [rsi+0x100],0x1
  0x000000011bae5bae:   movabs rsi,0x13a6a1fb8              ;   {metadata(method data for {method} {0x0000000800031508} 'parseDouble' '(Ljava/lang/String;)D' in 'java/lang/Double')}
  0x000000011bae5bb8:   mov    edi,DWORD PTR [rsi+0xac]
  0x000000011bae5bbe:   add    edi,0x2
  0x000000011bae5bc1:   mov    DWORD PTR [rsi+0xac],edi
  0x000000011bae5bc7:   and    edi,0x1ffffe
  0x000000011bae5bcd:   cmp    edi,0x0
  0x000000011bae5bd0:   je     0x000000011bae5d1d
  0x000000011bae5bd6:   movabs rsi,0x13a6a1fb8              ;   {metadata(method data for {method} {0x0000000800031508} 'parseDouble' '(Ljava/lang/String;)D' in 'java/lang/Double')}
  0x000000011bae5be0:   add    QWORD PTR [rsi+0xf0],0x1
  0x000000011bae5be8:   movabs rsi,0x13a6a20f8              ;   {metadata(method data for {method} {0x000000080015a5a8} 'parseDouble' '(Ljava/lang/String;)D' in 'jdk/internal/math/FloatingDecimal')}
  0x000000011bae5bf2:   mov    edi,DWORD PTR [rsi+0xac]
  0x000000011bae5bf8:   add    edi,0x2
  0x000000011bae5bfb:   mov    DWORD PTR [rsi+0xac],edi
  0x000000011bae5c01:   and    edi,0x1ffffe
  0x000000011bae5c07:   cmp    edi,0x0
  0x000000011bae5c0a:   je     0x000000011bae5d3e
  0x000000011bae5c10:   movabs rsi,0x13a6a20f8              ;   {metadata(method data for {method} {0x000000080015a5a8} 'parseDouble' '(Ljava/lang/String;)D' in 'jdk/internal/math/FloatingDecimal')}
  0x000000011bae5c1a:   add    QWORD PTR [rsi+0xf0],0x1
  0x000000011bae5c22:   mov    rsi,QWORD PTR [rsp+0x60]
  0x000000011bae5c27:   call   0x0000000122ede1c0           ; ImmutableOopMap {}
                                                            ;*invokestatic readJavaFormatString {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.math.FloatingDecimal::parseDouble@1 (line 110)
                                                            ; - java.lang.Double::parseDouble@1 (line 651)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteralTheHardWay@10 (line 449)
                                                            ;   {static_call}
  0x000000011bae5c2c:   cmp    rax,QWORD PTR [rax]          ; implicit exception: dispatches to 0x000000011bae5d5f
  0x000000011bae5c2f:   mov    rsi,rax
  0x000000011bae5c32:   movabs rdi,0x13a6a20f8              ;   {metadata(method data for {method} {0x000000080015a5a8} 'parseDouble' '(Ljava/lang/String;)D' in 'jdk/internal/math/FloatingDecimal')}
  0x000000011bae5c3c:   mov    esi,DWORD PTR [rsi+0x8]
  0x000000011bae5c3f:   movabs r10,0x800000000
  0x000000011bae5c49:   add    rsi,r10
  0x000000011bae5c4c:   cmp    rsi,QWORD PTR [rdi+0x110]
  0x000000011bae5c53:   jne    0x000000011bae5c62
  0x000000011bae5c55:   add    QWORD PTR [rdi+0x118],0x1
  0x000000011bae5c5d:   jmp    0x000000011bae5cc8
  0x000000011bae5c62:   cmp    rsi,QWORD PTR [rdi+0x120]
  0x000000011bae5c69:   jne    0x000000011bae5c78
  0x000000011bae5c6b:   add    QWORD PTR [rdi+0x128],0x1
  0x000000011bae5c73:   jmp    0x000000011bae5cc8
  0x000000011bae5c78:   cmp    QWORD PTR [rdi+0x110],0x0
  0x000000011bae5c83:   jne    0x000000011bae5c9c
  0x000000011bae5c85:   mov    QWORD PTR [rdi+0x110],rsi
  0x000000011bae5c8c:   mov    QWORD PTR [rdi+0x118],0x1
  0x000000011bae5c97:   jmp    0x000000011bae5cc8
  0x000000011bae5c9c:   cmp    QWORD PTR [rdi+0x120],0x0
  0x000000011bae5ca7:   jne    0x000000011bae5cc0
  0x000000011bae5ca9:   mov    QWORD PTR [rdi+0x120],rsi
  0x000000011bae5cb0:   mov    QWORD PTR [rdi+0x128],0x1
  0x000000011bae5cbb:   jmp    0x000000011bae5cc8
  0x000000011bae5cc0:   add    QWORD PTR [rdi+0x100],0x1
  0x000000011bae5cc8:   mov    rsi,rax
  0x000000011bae5ccb:   xchg   ax,ax
  0x000000011bae5ccd:   movabs rax,0x800c70b80
  0x000000011bae5cd7:   call   0x0000000122eebc40           ; ImmutableOopMap {}
                                                            ;*invokeinterface doubleValue {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.math.FloatingDecimal::parseDouble@4 (line 110)
                                                            ; - java.lang.Double::parseDouble@1 (line 651)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteralTheHardWay@10 (line 449)
                                                            ;   {virtual_call}
  0x000000011bae5cdc:   add    rsp,0x70
  0x000000011bae5ce0:   pop    rbp
  0x000000011bae5ce1:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x000000011bae5ce8:   ja     0x000000011bae5d64
  0x000000011bae5cee:   ret
  0x000000011bae5cef:   movabs r10,0x13a844488              ;   {metadata({method} {0x000000013a844488} 'parseRestOfDecimalFloatLiteralTheHardWay' '([CII)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray')}
  0x000000011bae5cf9:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011bae5cfe:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011bae5d06:   call   0x000000011b4db500           ; ImmutableOopMap {r8=Oop }
                                                            ;*synchronization entry
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteralTheHardWay@-1 (line 449)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011bae5d0b:   jmp    0x000000011bae5b1d
  0x000000011bae5d10:   mov    rdx,rdx
  0x000000011bae5d13:   call   0x000000011b4d6400           ; ImmutableOopMap {r8=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteralTheHardWay@0 (line 449)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000000011bae5d18:   jmp    0x000000011bae5b6d
  0x000000011bae5d1d:   movabs r10,0x800031508              ;   {metadata({method} {0x0000000800031508} 'parseDouble' '(Ljava/lang/String;)D' in 'java/lang/Double')}
  0x000000011bae5d27:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011bae5d2c:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011bae5d34:   call   0x000000011b4db500           ; ImmutableOopMap {[96]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Double::parseDouble@-1 (line 651)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteralTheHardWay@10 (line 449)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011bae5d39:   jmp    0x000000011bae5bd6
  0x000000011bae5d3e:   movabs r10,0x80015a5a8              ;   {metadata({method} {0x000000080015a5a8} 'parseDouble' '(Ljava/lang/String;)D' in 'jdk/internal/math/FloatingDecimal')}
  0x000000011bae5d48:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011bae5d4d:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011bae5d55:   call   0x000000011b4db500           ; ImmutableOopMap {[96]=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.internal.math.FloatingDecimal::parseDouble@-1 (line 110)
                                                            ; - java.lang.Double::parseDouble@1 (line 651)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteralTheHardWay@10 (line 449)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011bae5d5a:   jmp    0x000000011bae5c10
  0x000000011bae5d5f:   call   0x000000011b4d5b20           ; ImmutableOopMap {rax=Oop }
                                                            ;*invokeinterface doubleValue {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.math.FloatingDecimal::parseDouble@4 (line 110)
                                                            ; - java.lang.Double::parseDouble@1 (line 651)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteralTheHardWay@10 (line 449)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011bae5d64:   movabs r10,0x11bae5ce1              ;   {internal_word}
  0x000000011bae5d6e:   mov    QWORD PTR [r15+0x350],r10
  0x000000011bae5d75:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x000000011bae5d7a:   nop
  0x000000011bae5d7b:   nop
  0x000000011bae5d7c:   mov    rax,QWORD PTR [r15+0x3c8]
  0x000000011bae5d83:   mov    QWORD PTR [r15+0x3c8],0x0
  0x000000011bae5d8e:   mov    QWORD PTR [r15+0x3d0],0x0
  0x000000011bae5d99:   add    rsp,0x70
  0x000000011bae5d9d:   pop    rbp
  0x000000011bae5d9e:   jmp    0x000000011b446f00           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011bae5da3:   hlt
  0x000000011bae5da4:   hlt
  0x000000011bae5da5:   hlt
  0x000000011bae5da6:   hlt
  0x000000011bae5da7:   hlt
  0x000000011bae5da8:   hlt
  0x000000011bae5da9:   hlt
  0x000000011bae5daa:   hlt
  0x000000011bae5dab:   hlt
  0x000000011bae5dac:   hlt
  0x000000011bae5dad:   hlt
  0x000000011bae5dae:   hlt
  0x000000011bae5daf:   hlt
  0x000000011bae5db0:   hlt
  0x000000011bae5db1:   hlt
  0x000000011bae5db2:   hlt
  0x000000011bae5db3:   hlt
  0x000000011bae5db4:   hlt
  0x000000011bae5db5:   hlt
  0x000000011bae5db6:   hlt
  0x000000011bae5db7:   hlt
  0x000000011bae5db8:   hlt
  0x000000011bae5db9:   hlt
  0x000000011bae5dba:   hlt
  0x000000011bae5dbb:   hlt
  0x000000011bae5dbc:   hlt
  0x000000011bae5dbd:   hlt
  0x000000011bae5dbe:   hlt
  0x000000011bae5dbf:   hlt
[Stub Code]
  0x000000011bae5dc0:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x000000011bae5dc5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011bae5dcf:   jmp    0x000000011bae5dcf           ;   {runtime_call}
  0x000000011bae5dd4:   nop
  0x000000011bae5dd5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011bae5ddf:   jmp    0x000000011bae5ddf           ;   {runtime_call}
  0x000000011bae5de4:   nop
  0x000000011bae5de5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011bae5def:   jmp    0x000000011bae5def           ;   {runtime_call}
[Exception Handler]
  0x000000011bae5df4:   call   0x000000011b4d7900           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011bae5df9:   movabs rdi,0x10db45fc1              ;   {external_word}
  0x000000011bae5e03:   and    rsp,0xfffffffffffffff0
  0x000000011bae5e07:   call   0x000000010d7f0290           ;   {runtime_call _ZN14MacroAssembler7debug64EPcxPx}
  0x000000011bae5e0c:   hlt
[Deopt Handler Code]
  0x000000011bae5e0d:   movabs r10,0x11bae5e0d              ;   {section_word}
  0x000000011bae5e17:   push   r10
  0x000000011bae5e19:   jmp    0x000000011b4333a0           ;   {runtime_call DeoptimizationBlob}
  0x000000011bae5e1e:   hlt
  0x000000011bae5e1f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     885 1038       4       ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteralTheHardWay (14 bytes)
 total in heap  [0x0000000122f19610,0x0000000122f19fa0] = 2448
 relocation     [0x0000000122f19770,0x0000000122f197c0] = 80
 main code      [0x0000000122f197c0,0x0000000122f19c20] = 1120
 stub code      [0x0000000122f19c20,0x0000000122f19c58] = 56
 oops           [0x0000000122f19c58,0x0000000122f19c68] = 16
 metadata       [0x0000000122f19c68,0x0000000122f19cc8] = 96
 scopes data    [0x0000000122f19cc8,0x0000000122f19e40] = 376
 scopes pcs     [0x0000000122f19e40,0x0000000122f19f20] = 224
 dependencies   [0x0000000122f19f20,0x0000000122f19f28] = 8
 handler table  [0x0000000122f19f28,0x0000000122f19f88] = 96
 nul chk table  [0x0000000122f19f88,0x0000000122f19fa0] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013a844488} 'parseRestOfDecimalFloatLiteralTheHardWay' '([CII)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromCharArray'
  # parm0:    rsi:rsi   = '[C'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x60]  (sp of caller)
  0x0000000122f197c0:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000122f197c7:   push   rbp
  0x0000000122f197c8:   sub    rsp,0x50
  0x0000000122f197cc:   mov    DWORD PTR [rsp+0x24],ecx
  0x0000000122f197d0:   mov    DWORD PTR [rsp+0x20],edx
  0x0000000122f197d4:   mov    QWORD PTR [rsp+0x18],rsi
  0x0000000122f197d9:   mov    rbx,QWORD PTR [r15+0xf0]
  0x0000000122f197e0:   mov    r10,rbx
  0x0000000122f197e3:   add    r10,0x18
  0x0000000122f197e7:   cmp    r10,QWORD PTR [r15+0x100]
  0x0000000122f197ee:   jae    0x0000000122f19aa5
  0x0000000122f197f4:   mov    QWORD PTR [r15+0xf0],r10
  0x0000000122f197fb:   prefetchw BYTE PTR [r10+0xc0]
  0x0000000122f19803:   mov    QWORD PTR [rbx],0x1
  0x0000000122f1980a:   mov    DWORD PTR [rbx+0x8],0x8340   ;   {metadata('java/lang/String')}
  0x0000000122f19811:   mov    DWORD PTR [rbx+0xc],r12d
  0x0000000122f19815:   mov    QWORD PTR [rbx+0x10],r12
  0x0000000122f19819:   mov    r10,QWORD PTR [rsp+0x18]
  0x0000000122f1981e:   xchg   ax,ax
  0x0000000122f19820:   mov    r10d,DWORD PTR [r10+0xc]     ; implicit exception: dispatches to 0x0000000122f19bcc
  0x0000000122f19824:   mov    DWORD PTR [rsp+0x2c],r10d
  0x0000000122f19829:   mov    ebp,r10d
  0x0000000122f1982c:   or     ebp,DWORD PTR [rsp+0x20]
  0x0000000122f19830:   or     ebp,DWORD PTR [rsp+0x24]
  0x0000000122f19834:   test   ebp,ebp
  0x0000000122f19836:   jl     0x0000000122f19b38
  0x0000000122f1983c:   mov    ebp,r10d
  0x0000000122f1983f:   sub    ebp,DWORD PTR [rsp+0x20]
  0x0000000122f19843:   mov    r11d,DWORD PTR [rsp+0x24]
  0x0000000122f19848:   cmp    r11d,ebp
  0x0000000122f1984b:   jg     0x0000000122f19b90
  0x0000000122f19851:   test   r11d,r11d
  0x0000000122f19854:   je     0x0000000122f19bac
  0x0000000122f1985a:   nop    WORD PTR [rax+rax*1+0x0]
  0x0000000122f19860:   cmp    r11d,0x100000
  0x0000000122f19867:   ja     0x0000000122f19af0
  0x0000000122f1986d:   movsxd r10,r11d
  0x0000000122f19870:   cmp    r11d,0x100000
  0x0000000122f19877:   ja     0x0000000122f19ac5
  0x0000000122f1987d:   mov    r11,QWORD PTR [r15+0xf0]
  0x0000000122f19884:   add    r10,0x17
  0x0000000122f19888:   and    r10,0xfffffffffffffff8
  0x0000000122f1988c:   mov    r8,r11
  0x0000000122f1988f:   add    r8,r10
  0x0000000122f19892:   data16 nop WORD PTR [rax+rax*1+0x0]
  0x0000000122f1989c:   data16 data16 xchg ax,ax
  0x0000000122f198a0:   cmp    r8,QWORD PTR [r15+0x100]
  0x0000000122f198a7:   jae    0x0000000122f19ac5
  0x0000000122f198ad:   mov    QWORD PTR [r15+0xf0],r8
  0x0000000122f198b4:   prefetchw BYTE PTR [r8+0xc0]
  0x0000000122f198bc:   mov    QWORD PTR [r11],0x1
  0x0000000122f198c3:   prefetchw BYTE PTR [r8+0x100]
  0x0000000122f198cb:   mov    DWORD PTR [r11+0x8],0x1ea0   ;   {metadata({type array byte})}
  0x0000000122f198d3:   mov    r9d,DWORD PTR [rsp+0x24]
  0x0000000122f198d8:   mov    DWORD PTR [r11+0xc],r9d
  0x0000000122f198dc:   prefetchw BYTE PTR [r8+0x140]
  0x0000000122f198e4:   prefetchw BYTE PTR [r8+0x180]
  0x0000000122f198ec:   mov    r10d,DWORD PTR [rsp+0x24]
  0x0000000122f198f1:   mov    r8d,DWORD PTR [rsp+0x20]
  0x0000000122f198f6:   test   r8d,r8d
  0x0000000122f198f9:   jl     0x0000000122f19af8
  0x0000000122f198ff:   mov    r9d,r8d
  0x0000000122f19902:   add    r9d,r10d
  0x0000000122f19905:   mov    ecx,DWORD PTR [rsp+0x2c]
  0x0000000122f19909:   cmp    ecx,r9d
  0x0000000122f1990c:   jb     0x0000000122f19af8
  0x0000000122f19912:   mov    r9,QWORD PTR [rsp+0x18]
  0x0000000122f19917:   lea    rsi,[r9+r8*2+0x10]
  0x0000000122f1991c:   mov    rdi,r11
  0x0000000122f1991f:   add    rdi,0x10
  0x0000000122f19923:   mov    edx,r10d
  0x0000000122f19926:   push   rdx
  0x0000000122f19927:   mov    eax,edx
  0x0000000122f19929:   mov    ecx,0xff00ff00
  0x0000000122f1992e:   and    edx,0xfffffff0
  0x0000000122f19931:   and    eax,0xf
  0x0000000122f19934:   test   edx,edx
  0x0000000122f19936:   je     0x0000000122f19981
  0x0000000122f1993c:   vmovd  xmm1,ecx
  0x0000000122f19940:   vpshufd xmm1,xmm1,0x0
  0x0000000122f19945:   vpxor  xmm0,xmm0,xmm0
  0x0000000122f19949:   lea    rsi,[rsi+rdx*2]
  0x0000000122f1994d:   lea    rdi,[rdi+rdx*1]
  0x0000000122f19951:   neg    rdx
  0x0000000122f19954:   vmovdqu xmm2,XMMWORD PTR [rsi+rdx*2]
  0x0000000122f19959:   vpor   xmm0,xmm0,xmm2
  0x0000000122f1995d:   vmovdqu xmm3,XMMWORD PTR [rsi+rdx*2+0x10]
  0x0000000122f19963:   vpor   xmm0,xmm0,xmm3
  0x0000000122f19967:   vptest xmm0,xmm1
  0x0000000122f1996c:   jne    0x0000000122f199dd
  0x0000000122f19972:   vpackuswb xmm2,xmm2,xmm3
  0x0000000122f19976:   vmovdqu XMMWORD PTR [rdi+rdx*1],xmm2
  0x0000000122f1997b:   add    rdx,0x10
  0x0000000122f1997f:   jne    0x0000000122f19954
  0x0000000122f19981:   mov    edx,eax
  0x0000000122f19983:   and    edx,0xfffffff8
  0x0000000122f19986:   and    eax,0x7
  0x0000000122f19989:   test   edx,edx
  0x0000000122f1998b:   je     0x0000000122f199b5
  0x0000000122f1998d:   vmovd  xmm1,ecx
  0x0000000122f19991:   vpshufd xmm1,xmm1,0x0
  0x0000000122f19996:   vpxor  xmm3,xmm3,xmm3
  0x0000000122f1999a:   vmovdqu xmm2,XMMWORD PTR [rsi]
  0x0000000122f1999e:   vptest xmm2,xmm1
  0x0000000122f199a3:   jne    0x0000000122f199dd
  0x0000000122f199a5:   vpackuswb xmm2,xmm2,xmm3
  0x0000000122f199a9:   vmovq  QWORD PTR [rdi],xmm2
  0x0000000122f199ad:   add    rsi,0x10
  0x0000000122f199b1:   add    rdi,0x8
  0x0000000122f199b5:   mov    edx,eax
  0x0000000122f199b7:   test   edx,edx
  0x0000000122f199b9:   je     0x0000000122f199da
  0x0000000122f199bb:   lea    rsi,[rsi+rdx*2]
  0x0000000122f199bf:   lea    rdi,[rdi+rdx*1]
  0x0000000122f199c3:   neg    rdx
  0x0000000122f199c6:   movzx  eax,WORD PTR [rsi+rdx*2]
  0x0000000122f199ca:   test   eax,0xff00
  0x0000000122f199d0:   jne    0x0000000122f199dd
  0x0000000122f199d2:   mov    BYTE PTR [rdi+rdx*1],al
  0x0000000122f199d5:   inc    rdx
  0x0000000122f199d8:   jne    0x0000000122f199c6
  0x0000000122f199da:   pop    rax
  0x0000000122f199db:   jmp    0x0000000122f199e3
  0x0000000122f199dd:   xor    eax,eax
  0x0000000122f199df:   add    rsp,0x8
  0x0000000122f199e3:   cmp    eax,r10d
  0x0000000122f199e6:   jne    0x0000000122f19b54
  0x0000000122f199ec:   mov    r10,r11
  0x0000000122f199ef:   shr    r11,0x3
  0x0000000122f199f3:   mov    DWORD PTR [rbx+0x14],r11d
  0x0000000122f199f7:   mov    r11,rbx
  0x0000000122f199fa:   xor    r10,r11
  0x0000000122f199fd:   shr    r10,0x16
  0x0000000122f19a01:   test   r10,r10
  0x0000000122f19a04:   je     0x0000000122f19a1c
  0x0000000122f19a06:   shr    r11,0x9
  0x0000000122f19a0a:   movabs rdi,0x113958000
  0x0000000122f19a14:   add    rdi,r11
  0x0000000122f19a17:   cmp    BYTE PTR [rdi],0x4
  0x0000000122f19a1a:   jne    0x0000000122f19a5e
  0x0000000122f19a1c:   mov    BYTE PTR [rbx+0x10],r12b
  0x0000000122f19a20:   mov    rsi,rbx
  0x0000000122f19a23:   nop
  0x0000000122f19a24:   vzeroupper
  0x0000000122f19a27:   call   0x0000000122ede1c0           ; ImmutableOopMap {}
                                                            ;*invokestatic readJavaFormatString {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - jdk.internal.math.FloatingDecimal::parseDouble@1 (line 110)
                                                            ; - java.lang.Double::parseDouble@1 (line 651)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteralTheHardWay@10 (line 449)
                                                            ;   {static_call}
  0x0000000122f19a2c:   mov    r10d,DWORD PTR [rax+0x8]     ; implicit exception: dispatches to 0x0000000122f19bdc
  0x0000000122f19a30:   cmp    r10d,0xc70b80                ;   {metadata('jdk/internal/math/FloatingDecimal$ASCIIToBinaryBuffer')}
  0x0000000122f19a37:   jne    0x0000000122f19b28
  0x0000000122f19a3d:   mov    rsi,rax
  0x0000000122f19a40:   vzeroupper
  0x0000000122f19a43:   call   0x0000000122eebc60           ; ImmutableOopMap {}
                                                            ;*invokeinterface doubleValue {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.math.FloatingDecimal::parseDouble@4 (line 110)
                                                            ; - java.lang.Double::parseDouble@1 (line 651)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteralTheHardWay@10 (line 449)
                                                            ;   {optimized virtual_call}
  0x0000000122f19a48:   vzeroupper
  0x0000000122f19a4b:   add    rsp,0x50
  0x0000000122f19a4f:   pop    rbp
  0x0000000122f19a50:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x0000000122f19a57:   ja     0x0000000122f19c08
  0x0000000122f19a5d:   ret
  0x0000000122f19a5e:   mov    r10,QWORD PTR [r15+0x40]
  0x0000000122f19a62:   mov    r11,QWORD PTR [r15+0x50]
  0x0000000122f19a66:   lock add DWORD PTR [rsp-0x40],0x0
  0x0000000122f19a6c:   cmp    BYTE PTR [rdi],0x0
  0x0000000122f19a6f:   je     0x0000000122f19a1c
  0x0000000122f19a71:   mov    BYTE PTR [rdi],r12b
  0x0000000122f19a74:   test   r10,r10
  0x0000000122f19a77:   jne    0x0000000122f19a92
  0x0000000122f19a79:   mov    rsi,r15
  0x0000000122f19a7c:   nop    DWORD PTR [rax+0x0]
  0x0000000122f19a80:   vzeroupper
  0x0000000122f19a83:   movabs r10,0x10d4712b0
  0x0000000122f19a8d:   call   r10
  0x0000000122f19a90:   jmp    0x0000000122f19a1c
  0x0000000122f19a92:   mov    QWORD PTR [r11+r10*1-0x8],rdi
  0x0000000122f19a97:   add    r10,0xfffffffffffffff8
  0x0000000122f19a9b:   mov    QWORD PTR [r15+0x40],r10
  0x0000000122f19a9f:   nop
  0x0000000122f19aa0:   jmp    0x0000000122f19a1c
  0x0000000122f19aa5:   movabs rsi,0x800008340              ;   {metadata('java/lang/String')}
  0x0000000122f19aaf:   mov    rbp,QWORD PTR [rsp+0x18]
  0x0000000122f19ab4:   vzeroupper
  0x0000000122f19ab7:   call   0x000000011b4e1580           ; ImmutableOopMap {rbp=Oop [24]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteralTheHardWay@0 (line 449)
                                                            ;   {runtime_call _new_instance_Java}
  0x0000000122f19abc:   mov    rbx,rax
  0x0000000122f19abf:   nop
  0x0000000122f19ac0:   jmp    0x0000000122f19819
  0x0000000122f19ac5:   movabs rsi,0x800001ea0              ;   {metadata({type array byte})}
  0x0000000122f19acf:   mov    edx,DWORD PTR [rsp+0x24]
  0x0000000122f19ad3:   mov    QWORD PTR [rsp],rbx
  0x0000000122f19ad7:   mov    QWORD PTR [rsp+0x30],rbx
  0x0000000122f19adc:   vzeroupper
  0x0000000122f19adf:   call   0x000000011b4ded80           ; ImmutableOopMap {[0]=Oop [24]=Oop [48]=Oop }
                                                            ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - java.lang.StringUTF16::compress@1 (line 161)
                                                            ; - java.lang.String::<init>@36 (line 4491)
                                                            ; - java.lang.String::<init>@10 (line 302)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteralTheHardWay@7 (line 449)
                                                            ;   {runtime_call _new_array_nozero_Java}
  0x0000000122f19ae4:   mov    r11,rax
  0x0000000122f19ae7:   mov    rbx,QWORD PTR [rsp]
  0x0000000122f19aeb:   jmp    0x0000000122f198ec
  0x0000000122f19af0:   movsxd r10,r11d
  0x0000000122f19af3:   jmp    0x0000000122f19870
  0x0000000122f19af8:   mov    esi,0xffffffce
  0x0000000122f19afd:   mov    QWORD PTR [rsp],rbx
  0x0000000122f19b01:   mov    QWORD PTR [rsp-0x8],rax
  0x0000000122f19b06:   mov    eax,DWORD PTR [rsp+0x24]
  0x0000000122f19b0a:   mov    DWORD PTR [rsp+0x14],eax
  0x0000000122f19b0e:   mov    rax,QWORD PTR [rsp-0x8]
  0x0000000122f19b13:   mov    QWORD PTR [rsp+0x30],r11
  0x0000000122f19b18:   mov    DWORD PTR [rsp+0x38],r10d
  0x0000000122f19b1d:   data16 xchg ax,ax
  0x0000000122f19b20:   vzeroupper
  0x0000000122f19b23:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop [24]=Oop [48]=Oop }
                                                            ;*invokestatic compress {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringUTF16::compress@9 (line 162)
                                                            ; - java.lang.String::<init>@36 (line 4491)
                                                            ; - java.lang.String::<init>@10 (line 302)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteralTheHardWay@7 (line 449)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f19b28:   mov    esi,0xffffffde
  0x0000000122f19b2d:   mov    rbp,rax
  0x0000000122f19b30:   vzeroupper
  0x0000000122f19b33:   call   0x000000011b433000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*invokeinterface doubleValue {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.math.FloatingDecimal::parseDouble@4 (line 110)
                                                            ; - java.lang.Double::parseDouble@1 (line 651)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteralTheHardWay@10 (line 449)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f19b38:   mov    esi,0xffffff45
  0x0000000122f19b3d:   mov    QWORD PTR [rsp+0x8],rbx
  0x0000000122f19b42:   rex.W push QWORD PTR [rsp+0x18]
  0x0000000122f19b47:   rex.W pop QWORD PTR [rsp+0x10]
  0x0000000122f19b4c:   vzeroupper
  0x0000000122f19b4f:   call   0x000000011b433000           ; ImmutableOopMap {[8]=Oop [16]=Oop }
                                                            ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.internal.util.Preconditions::checkFromIndexSize@5 (line 396)
                                                            ; - java.lang.String::checkBoundsOffCount@6 (line 4574)
                                                            ; - java.lang.String::rangeCheck@4 (line 306)
                                                            ; - java.lang.String::<init>@7 (line 302)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteralTheHardWay@7 (line 449)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f19b54:   mov    esi,0xffffff45
  0x0000000122f19b59:   mov    QWORD PTR [rsp],rbx
  0x0000000122f19b5d:   mov    QWORD PTR [rsp+0x8],r9
  0x0000000122f19b62:   mov    DWORD PTR [rsp+0x10],r8d
  0x0000000122f19b67:   mov    QWORD PTR [rsp-0x8],rax
  0x0000000122f19b6c:   mov    eax,DWORD PTR [rsp+0x24]
  0x0000000122f19b70:   mov    DWORD PTR [rsp+0x14],eax
  0x0000000122f19b74:   mov    rax,QWORD PTR [rsp-0x8]
  0x0000000122f19b79:   mov    QWORD PTR [rsp+0x18],r11
  0x0000000122f19b7e:   mov    DWORD PTR [rsp+0x20],eax
  0x0000000122f19b82:   mov    DWORD PTR [rsp+0x24],r10d
  0x0000000122f19b87:   nop
  0x0000000122f19b88:   vzeroupper
  0x0000000122f19b8b:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop [8]=Oop [24]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.StringUTF16::compress@13 (line 162)
                                                            ; - java.lang.String::<init>@36 (line 4491)
                                                            ; - java.lang.String::<init>@10 (line 302)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteralTheHardWay@7 (line 449)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f19b90:   mov    esi,0xffffff45
  0x0000000122f19b95:   mov    QWORD PTR [rsp+0x8],rbx
  0x0000000122f19b9a:   rex.W push QWORD PTR [rsp+0x18]
  0x0000000122f19b9f:   rex.W pop QWORD PTR [rsp+0x10]
  0x0000000122f19ba4:   vzeroupper
  0x0000000122f19ba7:   call   0x000000011b433000           ; ImmutableOopMap {[8]=Oop [16]=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.internal.util.Preconditions::checkFromIndexSize@12 (line 396)
                                                            ; - java.lang.String::checkBoundsOffCount@6 (line 4574)
                                                            ; - java.lang.String::rangeCheck@4 (line 306)
                                                            ; - java.lang.String::<init>@7 (line 302)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteralTheHardWay@7 (line 449)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f19bac:   mov    esi,0xffffff45
  0x0000000122f19bb1:   mov    QWORD PTR [rsp],rbx
  0x0000000122f19bb5:   rex.W push QWORD PTR [rsp+0x18]
  0x0000000122f19bba:   rex.W pop QWORD PTR [rsp+0x8]
  0x0000000122f19bbf:   mov    DWORD PTR [rsp+0x18],r11d
  0x0000000122f19bc4:   vzeroupper
  0x0000000122f19bc7:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop [8]=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.String::<init>@5 (line 4485)
                                                            ; - java.lang.String::<init>@10 (line 302)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteralTheHardWay@7 (line 449)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f19bcc:   mov    esi,0xfffffff6
  0x0000000122f19bd1:   data16 xchg ax,ax
  0x0000000122f19bd4:   vzeroupper
  0x0000000122f19bd7:   call   0x000000011b433000           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::rangeCheck@3 (line 306)
                                                            ; - java.lang.String::<init>@7 (line 302)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteralTheHardWay@7 (line 449)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f19bdc:   mov    esi,0xfffffff6
  0x0000000122f19be1:   data16 xchg ax,ax
  0x0000000122f19be4:   vzeroupper
  0x0000000122f19be7:   call   0x000000011b433000           ; ImmutableOopMap {}
                                                            ;*invokeinterface doubleValue {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.math.FloatingDecimal::parseDouble@4 (line 110)
                                                            ; - java.lang.Double::parseDouble@1 (line 651)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromCharArray::parseRestOfDecimalFloatLiteralTheHardWay@10 (line 449)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f19bec:   mov    rsi,rax
  0x0000000122f19bef:   jmp    0x0000000122f19bfb
  0x0000000122f19bf1:   mov    rsi,rax
  0x0000000122f19bf4:   jmp    0x0000000122f19bfb
  0x0000000122f19bf6:   jmp    0x0000000122f19bf8
  0x0000000122f19bf8:   mov    rsi,rax
  0x0000000122f19bfb:   vzeroupper
  0x0000000122f19bfe:   add    rsp,0x50
  0x0000000122f19c02:   pop    rbp
  0x0000000122f19c03:   jmp    0x000000011b4e2700           ;   {runtime_call _rethrow_Java}
  0x0000000122f19c08:   movabs r10,0x122f19a50              ;   {internal_word}
  0x0000000122f19c12:   mov    QWORD PTR [r15+0x350],r10
  0x0000000122f19c19:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x0000000122f19c1e:   hlt
  0x0000000122f19c1f:   hlt
[Stub Code]
  0x0000000122f19c20:   movabs rbx,0x0                      ;   {no_reloc}
  0x0000000122f19c2a:   jmp    0x0000000122f19c2a           ;   {runtime_call}
  0x0000000122f19c2f:   movabs rbx,0x0                      ;   {static_stub}
  0x0000000122f19c39:   jmp    0x0000000122f19c39           ;   {runtime_call}
[Exception Handler]
  0x0000000122f19c3e:   jmp    0x000000011b447880           ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000122f19c43:   call   0x0000000122f19c48
  0x0000000122f19c48:   sub    QWORD PTR [rsp],0x5
  0x0000000122f19c4d:   jmp    0x000000011b4333a0           ;   {runtime_call DeoptimizationBlob}
  0x0000000122f19c52:   hlt
  0x0000000122f19c53:   hlt
  0x0000000122f19c54:   hlt
  0x0000000122f19c55:   hlt
  0x0000000122f19c56:   hlt
  0x0000000122f19c57:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    2535 1109       3       ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteralTheHardWay (17 bytes)
 total in heap  [0x000000011bb01e10,0x000000011bb02448] = 1592
 relocation     [0x000000011bb01f70,0x000000011bb01fe0] = 112
 main code      [0x000000011bb01fe0,0x000000011bb022c0] = 736
 stub code      [0x000000011bb022c0,0x000000011bb02320] = 96
 oops           [0x000000011bb02320,0x000000011bb02328] = 8
 metadata       [0x000000011bb02328,0x000000011bb02340] = 24
 scopes data    [0x000000011bb02340,0x000000011bb02390] = 80
 scopes pcs     [0x000000011bb02390,0x000000011bb02430] = 160
 dependencies   [0x000000011bb02430,0x000000011bb02438] = 8
 nul chk table  [0x000000011bb02438,0x000000011bb02448] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013a82f198} 'parseRestOfDecimalFloatLiteralTheHardWay' '([BII)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x90]  (sp of caller)
  0x000000011bb01fe0:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011bb01fe7:   push   rbp
  0x000000011bb01fe8:   sub    rsp,0x80
  0x000000011bb01fef:   mov    r8,rsi
  0x000000011bb01ff2:   mov    r9,rdx
  0x000000011bb01ff5:   mov    rbx,rcx
  0x000000011bb01ff8:   movabs rdx,0x13a837e70              ;   {metadata(method data for {method} {0x000000013a82f198} 'parseRestOfDecimalFloatLiteralTheHardWay' '([BII)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011bb02002:   mov    esi,DWORD PTR [rdx+0xac]
  0x000000011bb02008:   add    esi,0x2
  0x000000011bb0200b:   mov    DWORD PTR [rdx+0xac],esi
  0x000000011bb02011:   and    esi,0x7fe
  0x000000011bb02017:   cmp    esi,0x0
  0x000000011bb0201a:   je     0x000000011bb02202
  0x000000011bb02020:   movabs rdx,0x800008340              ;   {metadata('java/lang/String')}
  0x000000011bb0202a:   mov    rax,QWORD PTR [r15+0xf0]
  0x000000011bb02031:   lea    rdi,[rax+0x18]
  0x000000011bb02035:   cmp    rdi,QWORD PTR [r15+0x100]
  0x000000011bb0203c:   ja     0x000000011bb02223
  0x000000011bb02042:   mov    QWORD PTR [r15+0xf0],rdi
  0x000000011bb02049:   mov    QWORD PTR [rax],0x1
  0x000000011bb02050:   mov    rcx,rdx
  0x000000011bb02053:   movabs r10,0x800000000
  0x000000011bb0205d:   sub    rcx,r10
  0x000000011bb02060:   mov    DWORD PTR [rax+0x8],ecx
  0x000000011bb02063:   xor    rcx,rcx
  0x000000011bb02066:   mov    DWORD PTR [rax+0xc],ecx
  0x000000011bb02069:   xor    rcx,rcx
  0x000000011bb0206c:   mov    QWORD PTR [rax+0x10],rcx
  0x000000011bb02070:   mov    rdx,rax
  0x000000011bb02073:   movabs rcx,0x13a837e70              ;   {metadata(method data for {method} {0x000000013a82f198} 'parseRestOfDecimalFloatLiteralTheHardWay' '([BII)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011bb0207d:   add    QWORD PTR [rcx+0xf0],0x1
  0x000000011bb02085:   mov    rdx,r8
  0x000000011bb02088:   mov    rcx,r9
  0x000000011bb0208b:   mov    r8,rbx
  0x000000011bb0208e:   movabs r9,0x600400018               ;   {oop(a 'sun/nio/cs/ISO_8859_1'{0x0000000600400018})}
  0x000000011bb02098:   mov    rsi,rax
  0x000000011bb0209b:   mov    QWORD PTR [rsp+0x68],rax
  0x000000011bb020a0:   nop    DWORD PTR [rax+0x0]
  0x000000011bb020a7:   call   0x000000011bafdf60           ; ImmutableOopMap {[104]=Oop }
                                                            ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteralTheHardWay@10 (line 453)
                                                            ;   {optimized virtual_call}
  0x000000011bb020ac:   movabs rsi,0x13a837e70              ;   {metadata(method data for {method} {0x000000013a82f198} 'parseRestOfDecimalFloatLiteralTheHardWay' '([BII)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011bb020b6:   add    QWORD PTR [rsi+0x100],0x1
  0x000000011bb020be:   movabs rsi,0x13a6a1fb8              ;   {metadata(method data for {method} {0x0000000800031508} 'parseDouble' '(Ljava/lang/String;)D' in 'java/lang/Double')}
  0x000000011bb020c8:   mov    edi,DWORD PTR [rsi+0xac]
  0x000000011bb020ce:   add    edi,0x2
  0x000000011bb020d1:   mov    DWORD PTR [rsi+0xac],edi
  0x000000011bb020d7:   and    edi,0x1ffffe
  0x000000011bb020dd:   cmp    edi,0x0
  0x000000011bb020e0:   je     0x000000011bb02230
  0x000000011bb020e6:   movabs rsi,0x13a6a1fb8              ;   {metadata(method data for {method} {0x0000000800031508} 'parseDouble' '(Ljava/lang/String;)D' in 'java/lang/Double')}
  0x000000011bb020f0:   add    QWORD PTR [rsi+0xf0],0x1
  0x000000011bb020f8:   movabs rsi,0x13a6a20f8              ;   {metadata(method data for {method} {0x000000080015a5a8} 'parseDouble' '(Ljava/lang/String;)D' in 'jdk/internal/math/FloatingDecimal')}
  0x000000011bb02102:   mov    edi,DWORD PTR [rsi+0xac]
  0x000000011bb02108:   add    edi,0x2
  0x000000011bb0210b:   mov    DWORD PTR [rsi+0xac],edi
  0x000000011bb02111:   and    edi,0x1ffffe
  0x000000011bb02117:   cmp    edi,0x0
  0x000000011bb0211a:   je     0x000000011bb02251
  0x000000011bb02120:   movabs rsi,0x13a6a20f8              ;   {metadata(method data for {method} {0x000000080015a5a8} 'parseDouble' '(Ljava/lang/String;)D' in 'jdk/internal/math/FloatingDecimal')}
  0x000000011bb0212a:   add    QWORD PTR [rsi+0xf0],0x1
  0x000000011bb02132:   mov    rsi,QWORD PTR [rsp+0x68]
  0x000000011bb02137:   call   0x0000000122ede1c0           ; ImmutableOopMap {}
                                                            ;*invokestatic readJavaFormatString {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.math.FloatingDecimal::parseDouble@1 (line 110)
                                                            ; - java.lang.Double::parseDouble@1 (line 651)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteralTheHardWay@13 (line 453)
                                                            ;   {static_call}
  0x000000011bb0213c:   cmp    rax,QWORD PTR [rax]          ; implicit exception: dispatches to 0x000000011bb02272
  0x000000011bb0213f:   mov    rsi,rax
  0x000000011bb02142:   movabs rdi,0x13a6a20f8              ;   {metadata(method data for {method} {0x000000080015a5a8} 'parseDouble' '(Ljava/lang/String;)D' in 'jdk/internal/math/FloatingDecimal')}
  0x000000011bb0214c:   mov    esi,DWORD PTR [rsi+0x8]
  0x000000011bb0214f:   movabs r10,0x800000000
  0x000000011bb02159:   add    rsi,r10
  0x000000011bb0215c:   cmp    rsi,QWORD PTR [rdi+0x110]
  0x000000011bb02163:   jne    0x000000011bb02172
  0x000000011bb02165:   add    QWORD PTR [rdi+0x118],0x1
  0x000000011bb0216d:   jmp    0x000000011bb021d8
  0x000000011bb02172:   cmp    rsi,QWORD PTR [rdi+0x120]
  0x000000011bb02179:   jne    0x000000011bb02188
  0x000000011bb0217b:   add    QWORD PTR [rdi+0x128],0x1
  0x000000011bb02183:   jmp    0x000000011bb021d8
  0x000000011bb02188:   cmp    QWORD PTR [rdi+0x110],0x0
  0x000000011bb02193:   jne    0x000000011bb021ac
  0x000000011bb02195:   mov    QWORD PTR [rdi+0x110],rsi
  0x000000011bb0219c:   mov    QWORD PTR [rdi+0x118],0x1
  0x000000011bb021a7:   jmp    0x000000011bb021d8
  0x000000011bb021ac:   cmp    QWORD PTR [rdi+0x120],0x0
  0x000000011bb021b7:   jne    0x000000011bb021d0
  0x000000011bb021b9:   mov    QWORD PTR [rdi+0x120],rsi
  0x000000011bb021c0:   mov    QWORD PTR [rdi+0x128],0x1
  0x000000011bb021cb:   jmp    0x000000011bb021d8
  0x000000011bb021d0:   add    QWORD PTR [rdi+0x100],0x1
  0x000000011bb021d8:   mov    rsi,rax
  0x000000011bb021db:   xchg   ax,ax
  0x000000011bb021dd:   movabs rax,0x800c70b80
  0x000000011bb021e7:   call   0x0000000122eebc40           ; ImmutableOopMap {}
                                                            ;*invokeinterface doubleValue {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.math.FloatingDecimal::parseDouble@4 (line 110)
                                                            ; - java.lang.Double::parseDouble@1 (line 651)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteralTheHardWay@13 (line 453)
                                                            ;   {virtual_call}
  0x000000011bb021ec:   add    rsp,0x80
  0x000000011bb021f3:   pop    rbp
  0x000000011bb021f4:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x000000011bb021fb:   ja     0x000000011bb02277
  0x000000011bb02201:   ret
  0x000000011bb02202:   movabs r10,0x13a82f198              ;   {metadata({method} {0x000000013a82f198} 'parseRestOfDecimalFloatLiteralTheHardWay' '([BII)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray')}
  0x000000011bb0220c:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011bb02211:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011bb02219:   call   0x000000011b4db500           ; ImmutableOopMap {r8=Oop }
                                                            ;*synchronization entry
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteralTheHardWay@-1 (line 453)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011bb0221e:   jmp    0x000000011bb02020
  0x000000011bb02223:   mov    rdx,rdx
  0x000000011bb02226:   call   0x000000011b4d6400           ; ImmutableOopMap {r8=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteralTheHardWay@0 (line 453)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000000011bb0222b:   jmp    0x000000011bb02070
  0x000000011bb02230:   movabs r10,0x800031508              ;   {metadata({method} {0x0000000800031508} 'parseDouble' '(Ljava/lang/String;)D' in 'java/lang/Double')}
  0x000000011bb0223a:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011bb0223f:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011bb02247:   call   0x000000011b4db500           ; ImmutableOopMap {[104]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Double::parseDouble@-1 (line 651)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteralTheHardWay@13 (line 453)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011bb0224c:   jmp    0x000000011bb020e6
  0x000000011bb02251:   movabs r10,0x80015a5a8              ;   {metadata({method} {0x000000080015a5a8} 'parseDouble' '(Ljava/lang/String;)D' in 'jdk/internal/math/FloatingDecimal')}
  0x000000011bb0225b:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011bb02260:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011bb02268:   call   0x000000011b4db500           ; ImmutableOopMap {[104]=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.internal.math.FloatingDecimal::parseDouble@-1 (line 110)
                                                            ; - java.lang.Double::parseDouble@1 (line 651)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteralTheHardWay@13 (line 453)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011bb0226d:   jmp    0x000000011bb02120
  0x000000011bb02272:   call   0x000000011b4d5b20           ; ImmutableOopMap {rax=Oop }
                                                            ;*invokeinterface doubleValue {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.math.FloatingDecimal::parseDouble@4 (line 110)
                                                            ; - java.lang.Double::parseDouble@1 (line 651)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteralTheHardWay@13 (line 453)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011bb02277:   movabs r10,0x11bb021f4              ;   {internal_word}
  0x000000011bb02281:   mov    QWORD PTR [r15+0x350],r10
  0x000000011bb02288:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x000000011bb0228d:   nop
  0x000000011bb0228e:   nop
  0x000000011bb0228f:   mov    rax,QWORD PTR [r15+0x3c8]
  0x000000011bb02296:   mov    QWORD PTR [r15+0x3c8],0x0
  0x000000011bb022a1:   mov    QWORD PTR [r15+0x3d0],0x0
  0x000000011bb022ac:   add    rsp,0x80
  0x000000011bb022b3:   pop    rbp
  0x000000011bb022b4:   jmp    0x000000011b446f00           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011bb022b9:   hlt
  0x000000011bb022ba:   hlt
  0x000000011bb022bb:   hlt
  0x000000011bb022bc:   hlt
  0x000000011bb022bd:   hlt
  0x000000011bb022be:   hlt
  0x000000011bb022bf:   hlt
[Stub Code]
  0x000000011bb022c0:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x000000011bb022c5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011bb022cf:   jmp    0x000000011bb022cf           ;   {runtime_call}
  0x000000011bb022d4:   nop
  0x000000011bb022d5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011bb022df:   jmp    0x000000011bb022df           ;   {runtime_call}
  0x000000011bb022e4:   nop
  0x000000011bb022e5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011bb022ef:   jmp    0x000000011bb022ef           ;   {runtime_call}
[Exception Handler]
  0x000000011bb022f4:   call   0x000000011b4d7900           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011bb022f9:   movabs rdi,0x10db45fc1              ;   {external_word}
  0x000000011bb02303:   and    rsp,0xfffffffffffffff0
  0x000000011bb02307:   call   0x000000010d7f0290           ;   {runtime_call _ZN14MacroAssembler7debug64EPcxPx}
  0x000000011bb0230c:   hlt
[Deopt Handler Code]
  0x000000011bb0230d:   movabs r10,0x11bb0230d              ;   {section_word}
  0x000000011bb02317:   push   r10
  0x000000011bb02319:   jmp    0x000000011b4333a0           ;   {runtime_call DeoptimizationBlob}
  0x000000011bb0231e:   hlt
  0x000000011bb0231f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)    2711 1110       4       ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteralTheHardWay (17 bytes)
 total in heap  [0x0000000122f23010,0x0000000122f234a0] = 1168
 relocation     [0x0000000122f23170,0x0000000122f231b8] = 72
 main code      [0x0000000122f231c0,0x0000000122f232e0] = 288
 stub code      [0x0000000122f232e0,0x0000000122f23328] = 72
 oops           [0x0000000122f23328,0x0000000122f23330] = 8
 metadata       [0x0000000122f23330,0x0000000122f23358] = 40
 scopes data    [0x0000000122f23358,0x0000000122f233a8] = 80
 scopes pcs     [0x0000000122f233a8,0x0000000122f23428] = 128
 dependencies   [0x0000000122f23428,0x0000000122f23430] = 8
 handler table  [0x0000000122f23430,0x0000000122f23490] = 96
 nul chk table  [0x0000000122f23490,0x0000000122f234a0] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013a82f198} 'parseRestOfDecimalFloatLiteralTheHardWay' '([BII)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParserFromByteArray'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x30]  (sp of caller)
  0x0000000122f231c0:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000122f231c7:   push   rbp
  0x0000000122f231c8:   sub    rsp,0x20
  0x0000000122f231cc:   mov    DWORD PTR [rsp+0xc],ecx
  0x0000000122f231d0:   mov    DWORD PTR [rsp+0x8],edx
  0x0000000122f231d4:   mov    QWORD PTR [rsp],rsi
  0x0000000122f231d8:   mov    rax,QWORD PTR [r15+0xf0]
  0x0000000122f231df:   mov    r10,rax
  0x0000000122f231e2:   add    r10,0x18
  0x0000000122f231e6:   cmp    r10,QWORD PTR [r15+0x100]
  0x0000000122f231ed:   jae    0x0000000122f2326f
  0x0000000122f231f3:   mov    QWORD PTR [r15+0xf0],r10
  0x0000000122f231fa:   prefetchw BYTE PTR [r10+0xc0]
  0x0000000122f23202:   mov    QWORD PTR [rax],0x1
  0x0000000122f23209:   mov    DWORD PTR [rax+0x8],0x8340   ;   {metadata('java/lang/String')}
  0x0000000122f23210:   mov    DWORD PTR [rax+0xc],r12d
  0x0000000122f23214:   mov    QWORD PTR [rax+0x10],r12
  0x0000000122f23218:   mov    rbp,rax
  0x0000000122f2321b:   movabs r9,0x600400018               ;   {oop(a 'sun/nio/cs/ISO_8859_1'{0x0000000600400018})}
  0x0000000122f23225:   mov    rsi,rbp
  0x0000000122f23228:   mov    rdx,QWORD PTR [rsp]
  0x0000000122f2322c:   mov    ecx,DWORD PTR [rsp+0x8]
  0x0000000122f23230:   mov    r8d,DWORD PTR [rsp+0xc]
  0x0000000122f23235:   xchg   ax,ax
  0x0000000122f23237:   call   0x000000011bafdf60           ; ImmutableOopMap {rbp=Oop }
                                                            ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteralTheHardWay@10 (line 453)
                                                            ;   {optimized virtual_call}
  0x0000000122f2323c:   mov    rsi,rbp
  0x0000000122f2323f:   call   0x0000000122ede1c0           ; ImmutableOopMap {}
                                                            ;*invokestatic readJavaFormatString {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - jdk.internal.math.FloatingDecimal::parseDouble@1 (line 110)
                                                            ; - java.lang.Double::parseDouble@1 (line 651)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteralTheHardWay@13 (line 453)
                                                            ;   {static_call}
  0x0000000122f23244:   mov    r10d,DWORD PTR [rax+0x8]     ; implicit exception: dispatches to 0x0000000122f23294
  0x0000000122f23248:   cmp    r10d,0xc70b80                ;   {metadata('jdk/internal/math/FloatingDecimal$ASCIIToBinaryBuffer')}
  0x0000000122f2324f:   jne    0x0000000122f23286
  0x0000000122f23251:   mov    rsi,rax
  0x0000000122f23254:   data16 xchg ax,ax
  0x0000000122f23257:   call   0x0000000122eebc60           ; ImmutableOopMap {}
                                                            ;*invokeinterface doubleValue {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.math.FloatingDecimal::parseDouble@4 (line 110)
                                                            ; - java.lang.Double::parseDouble@1 (line 651)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteralTheHardWay@13 (line 453)
                                                            ;   {optimized virtual_call}
  0x0000000122f2325c:   add    rsp,0x20
  0x0000000122f23260:   pop    rbp
  0x0000000122f23261:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x0000000122f23268:   ja     0x0000000122f232b9
  0x0000000122f2326e:   ret
  0x0000000122f2326f:   movabs rsi,0x800008340              ;   {metadata('java/lang/String')}
  0x0000000122f23279:   mov    rbp,QWORD PTR [rsp]
  0x0000000122f2327d:   xchg   ax,ax
  0x0000000122f2327f:   call   0x000000011b4e1580           ; ImmutableOopMap {rbp=Oop [0]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteralTheHardWay@0 (line 453)
                                                            ;   {runtime_call _new_instance_Java}
  0x0000000122f23284:   jmp    0x0000000122f23218
  0x0000000122f23286:   mov    esi,0xffffffde
  0x0000000122f2328b:   mov    rbp,rax
  0x0000000122f2328e:   nop
  0x0000000122f2328f:   call   0x000000011b433000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*invokeinterface doubleValue {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.math.FloatingDecimal::parseDouble@4 (line 110)
                                                            ; - java.lang.Double::parseDouble@1 (line 651)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteralTheHardWay@13 (line 453)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f23294:   mov    esi,0xfffffff6
  0x0000000122f23299:   xchg   ax,ax
  0x0000000122f2329b:   call   0x000000011b433000           ; ImmutableOopMap {}
                                                            ;*invokeinterface doubleValue {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.math.FloatingDecimal::parseDouble@4 (line 110)
                                                            ; - java.lang.Double::parseDouble@1 (line 651)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParserFromByteArray::parseRestOfDecimalFloatLiteralTheHardWay@13 (line 453)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f232a0:   mov    rsi,rax
  0x0000000122f232a3:   jmp    0x0000000122f232af
  0x0000000122f232a5:   jmp    0x0000000122f232a7
  0x0000000122f232a7:   mov    rsi,rax
  0x0000000122f232aa:   jmp    0x0000000122f232af
  0x0000000122f232ac:   mov    rsi,rax
  0x0000000122f232af:   add    rsp,0x20
  0x0000000122f232b3:   pop    rbp
  0x0000000122f232b4:   jmp    0x000000011b4e2700           ;   {runtime_call _rethrow_Java}
  0x0000000122f232b9:   movabs r10,0x122f23261              ;   {internal_word}
  0x0000000122f232c3:   mov    QWORD PTR [r15+0x350],r10
  0x0000000122f232ca:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x0000000122f232cf:   hlt
  0x0000000122f232d0:   hlt
  0x0000000122f232d1:   hlt
  0x0000000122f232d2:   hlt
  0x0000000122f232d3:   hlt
  0x0000000122f232d4:   hlt
  0x0000000122f232d5:   hlt
  0x0000000122f232d6:   hlt
  0x0000000122f232d7:   hlt
  0x0000000122f232d8:   hlt
  0x0000000122f232d9:   hlt
  0x0000000122f232da:   hlt
  0x0000000122f232db:   hlt
  0x0000000122f232dc:   hlt
  0x0000000122f232dd:   hlt
  0x0000000122f232de:   hlt
  0x0000000122f232df:   hlt
[Stub Code]
  0x0000000122f232e0:   movabs rbx,0x0                      ;   {no_reloc}
  0x0000000122f232ea:   jmp    0x0000000122f232ea           ;   {runtime_call}
  0x0000000122f232ef:   movabs rbx,0x0                      ;   {static_stub}
  0x0000000122f232f9:   jmp    0x0000000122f232f9           ;   {runtime_call}
  0x0000000122f232fe:   movabs rbx,0x0                      ;   {static_stub}
  0x0000000122f23308:   jmp    0x0000000122f23308           ;   {runtime_call}
[Exception Handler]
  0x0000000122f2330d:   jmp    0x000000011b447880           ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000122f23312:   call   0x0000000122f23317
  0x0000000122f23317:   sub    QWORD PTR [rsp],0x5
  0x0000000122f2331c:   jmp    0x000000011b4333a0           ;   {runtime_call DeoptimizationBlob}
  0x0000000122f23321:   hlt
  0x0000000122f23322:   hlt
  0x0000000122f23323:   hlt
  0x0000000122f23324:   hlt
  0x0000000122f23325:   hlt
  0x0000000122f23326:   hlt
  0x0000000122f23327:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    4201 1118       3       ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteralTheHardWay (17 bytes)
 total in heap  [0x000000011bb04790,0x000000011bb04ee8] = 1880
 relocation     [0x000000011bb048f0,0x000000011bb04970] = 128
 main code      [0x000000011bb04980,0x000000011bb04d20] = 928
 stub code      [0x000000011bb04d20,0x000000011bb04d90] = 112
 oops           [0x000000011bb04d90,0x000000011bb04d98] = 8
 metadata       [0x000000011bb04d98,0x000000011bb04db0] = 24
 scopes data    [0x000000011bb04db0,0x000000011bb04e00] = 80
 scopes pcs     [0x000000011bb04e00,0x000000011bb04ec0] = 192
 dependencies   [0x000000011bb04ec0,0x000000011bb04ec8] = 8
 nul chk table  [0x000000011bb04ec8,0x000000011bb04ee8] = 32

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013a80e8a8} 'parseRestOfDecimalFloatLiteralTheHardWay' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser'
  # parm0:    rsi:rsi   = 'java/lang/CharSequence'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x70]  (sp of caller)
  0x000000011bb04980:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011bb04987:   push   rbp
  0x000000011bb04988:   sub    rsp,0x60
  0x000000011bb0498c:   movabs rdi,0x13a82b5e8              ;   {metadata(method data for {method} {0x000000013a80e8a8} 'parseRestOfDecimalFloatLiteralTheHardWay' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011bb04996:   mov    ebx,DWORD PTR [rdi+0xac]
  0x000000011bb0499c:   add    ebx,0x2
  0x000000011bb0499f:   mov    DWORD PTR [rdi+0xac],ebx
  0x000000011bb049a5:   and    ebx,0x7fe
  0x000000011bb049ab:   cmp    ebx,0x0
  0x000000011bb049ae:   je     0x000000011bb04c67
  0x000000011bb049b4:   cmp    rax,QWORD PTR [rsi]          ; implicit exception: dispatches to 0x000000011bb04c88
  0x000000011bb049b7:   mov    rdi,rsi
  0x000000011bb049ba:   movabs rbx,0x13a82b5e8              ;   {metadata(method data for {method} {0x000000013a80e8a8} 'parseRestOfDecimalFloatLiteralTheHardWay' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011bb049c4:   mov    edi,DWORD PTR [rdi+0x8]
  0x000000011bb049c7:   movabs r10,0x800000000
  0x000000011bb049d1:   add    rdi,r10
  0x000000011bb049d4:   cmp    rdi,QWORD PTR [rbx+0x100]
  0x000000011bb049db:   jne    0x000000011bb049ea
  0x000000011bb049dd:   add    QWORD PTR [rbx+0x108],0x1
  0x000000011bb049e5:   jmp    0x000000011bb04a50
  0x000000011bb049ea:   cmp    rdi,QWORD PTR [rbx+0x110]
  0x000000011bb049f1:   jne    0x000000011bb04a00
  0x000000011bb049f3:   add    QWORD PTR [rbx+0x118],0x1
  0x000000011bb049fb:   jmp    0x000000011bb04a50
  0x000000011bb04a00:   cmp    QWORD PTR [rbx+0x100],0x0
  0x000000011bb04a0b:   jne    0x000000011bb04a24
  0x000000011bb04a0d:   mov    QWORD PTR [rbx+0x100],rdi
  0x000000011bb04a14:   mov    QWORD PTR [rbx+0x108],0x1
  0x000000011bb04a1f:   jmp    0x000000011bb04a50
  0x000000011bb04a24:   cmp    QWORD PTR [rbx+0x110],0x0
  0x000000011bb04a2f:   jne    0x000000011bb04a48
  0x000000011bb04a31:   mov    QWORD PTR [rbx+0x110],rdi
  0x000000011bb04a38:   mov    QWORD PTR [rbx+0x118],0x1
  0x000000011bb04a43:   jmp    0x000000011bb04a50
  0x000000011bb04a48:   add    QWORD PTR [rbx+0xf0],0x1
  0x000000011bb04a50:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011bb04a55:   movabs rax,0x800008340
  0x000000011bb04a5f:   call   0x000000011bb045c0           ; ImmutableOopMap {}
                                                            ;*invokeinterface subSequence {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteralTheHardWay@3 (line 423)
                                                            ;   {virtual_call}
  0x000000011bb04a64:   cmp    rax,QWORD PTR [rax]          ; implicit exception: dispatches to 0x000000011bb04c8d
  0x000000011bb04a67:   mov    rsi,rax
  0x000000011bb04a6a:   movabs rdi,0x13a82b5e8              ;   {metadata(method data for {method} {0x000000013a80e8a8} 'parseRestOfDecimalFloatLiteralTheHardWay' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011bb04a74:   mov    esi,DWORD PTR [rsi+0x8]
  0x000000011bb04a77:   movabs r10,0x800000000
  0x000000011bb04a81:   add    rsi,r10
  0x000000011bb04a84:   cmp    rsi,QWORD PTR [rdi+0x138]
  0x000000011bb04a8b:   jne    0x000000011bb04a9a
  0x000000011bb04a8d:   add    QWORD PTR [rdi+0x140],0x1
  0x000000011bb04a95:   jmp    0x000000011bb04b00
  0x000000011bb04a9a:   cmp    rsi,QWORD PTR [rdi+0x148]
  0x000000011bb04aa1:   jne    0x000000011bb04ab0
  0x000000011bb04aa3:   add    QWORD PTR [rdi+0x150],0x1
  0x000000011bb04aab:   jmp    0x000000011bb04b00
  0x000000011bb04ab0:   cmp    QWORD PTR [rdi+0x138],0x0
  0x000000011bb04abb:   jne    0x000000011bb04ad4
  0x000000011bb04abd:   mov    QWORD PTR [rdi+0x138],rsi
  0x000000011bb04ac4:   mov    QWORD PTR [rdi+0x140],0x1
  0x000000011bb04acf:   jmp    0x000000011bb04b00
  0x000000011bb04ad4:   cmp    QWORD PTR [rdi+0x148],0x0
  0x000000011bb04adf:   jne    0x000000011bb04af8
  0x000000011bb04ae1:   mov    QWORD PTR [rdi+0x148],rsi
  0x000000011bb04ae8:   mov    QWORD PTR [rdi+0x150],0x1
  0x000000011bb04af3:   jmp    0x000000011bb04b00
  0x000000011bb04af8:   add    QWORD PTR [rdi+0x128],0x1
  0x000000011bb04b00:   mov    rsi,rax
  0x000000011bb04b03:   xchg   ax,ax
  0x000000011bb04b05:   movabs rax,0x800008340
  0x000000011bb04b0f:   call   0x000000011ba2b520           ; ImmutableOopMap {}
                                                            ;*invokeinterface toString {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteralTheHardWay@8 (line 423)
                                                            ;   {virtual_call}
  0x000000011bb04b14:   movabs rsi,0x13a82b5e8              ;   {metadata(method data for {method} {0x000000013a80e8a8} 'parseRestOfDecimalFloatLiteralTheHardWay' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011bb04b1e:   add    QWORD PTR [rsi+0x160],0x1
  0x000000011bb04b26:   movabs rsi,0x13a6a1fb8              ;   {metadata(method data for {method} {0x0000000800031508} 'parseDouble' '(Ljava/lang/String;)D' in 'java/lang/Double')}
  0x000000011bb04b30:   mov    edi,DWORD PTR [rsi+0xac]
  0x000000011bb04b36:   add    edi,0x2
  0x000000011bb04b39:   mov    DWORD PTR [rsi+0xac],edi
  0x000000011bb04b3f:   and    edi,0x1ffffe
  0x000000011bb04b45:   cmp    edi,0x0
  0x000000011bb04b48:   je     0x000000011bb04c92
  0x000000011bb04b4e:   movabs rsi,0x13a6a1fb8              ;   {metadata(method data for {method} {0x0000000800031508} 'parseDouble' '(Ljava/lang/String;)D' in 'java/lang/Double')}
  0x000000011bb04b58:   add    QWORD PTR [rsi+0xf0],0x1
  0x000000011bb04b60:   movabs rsi,0x13a6a20f8              ;   {metadata(method data for {method} {0x000000080015a5a8} 'parseDouble' '(Ljava/lang/String;)D' in 'jdk/internal/math/FloatingDecimal')}
  0x000000011bb04b6a:   mov    edi,DWORD PTR [rsi+0xac]
  0x000000011bb04b70:   add    edi,0x2
  0x000000011bb04b73:   mov    DWORD PTR [rsi+0xac],edi
  0x000000011bb04b79:   and    edi,0x1ffffe
  0x000000011bb04b7f:   cmp    edi,0x0
  0x000000011bb04b82:   je     0x000000011bb04cb3
  0x000000011bb04b88:   movabs rsi,0x13a6a20f8              ;   {metadata(method data for {method} {0x000000080015a5a8} 'parseDouble' '(Ljava/lang/String;)D' in 'jdk/internal/math/FloatingDecimal')}
  0x000000011bb04b92:   add    QWORD PTR [rsi+0xf0],0x1
  0x000000011bb04b9a:   mov    rsi,rax
  0x000000011bb04b9d:   xchg   ax,ax
  0x000000011bb04b9f:   call   0x0000000122ede1c0           ; ImmutableOopMap {}
                                                            ;*invokestatic readJavaFormatString {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.math.FloatingDecimal::parseDouble@1 (line 110)
                                                            ; - java.lang.Double::parseDouble@1 (line 651)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteralTheHardWay@13 (line 423)
                                                            ;   {static_call}
  0x000000011bb04ba4:   cmp    rax,QWORD PTR [rax]          ; implicit exception: dispatches to 0x000000011bb04cd4
  0x000000011bb04ba7:   mov    rsi,rax
  0x000000011bb04baa:   movabs rdi,0x13a6a20f8              ;   {metadata(method data for {method} {0x000000080015a5a8} 'parseDouble' '(Ljava/lang/String;)D' in 'jdk/internal/math/FloatingDecimal')}
  0x000000011bb04bb4:   mov    esi,DWORD PTR [rsi+0x8]
  0x000000011bb04bb7:   movabs r10,0x800000000
  0x000000011bb04bc1:   add    rsi,r10
  0x000000011bb04bc4:   cmp    rsi,QWORD PTR [rdi+0x110]
  0x000000011bb04bcb:   jne    0x000000011bb04bda
  0x000000011bb04bcd:   add    QWORD PTR [rdi+0x118],0x1
  0x000000011bb04bd5:   jmp    0x000000011bb04c40
  0x000000011bb04bda:   cmp    rsi,QWORD PTR [rdi+0x120]
  0x000000011bb04be1:   jne    0x000000011bb04bf0
  0x000000011bb04be3:   add    QWORD PTR [rdi+0x128],0x1
  0x000000011bb04beb:   jmp    0x000000011bb04c40
  0x000000011bb04bf0:   cmp    QWORD PTR [rdi+0x110],0x0
  0x000000011bb04bfb:   jne    0x000000011bb04c14
  0x000000011bb04bfd:   mov    QWORD PTR [rdi+0x110],rsi
  0x000000011bb04c04:   mov    QWORD PTR [rdi+0x118],0x1
  0x000000011bb04c0f:   jmp    0x000000011bb04c40
  0x000000011bb04c14:   cmp    QWORD PTR [rdi+0x120],0x0
  0x000000011bb04c1f:   jne    0x000000011bb04c38
  0x000000011bb04c21:   mov    QWORD PTR [rdi+0x120],rsi
  0x000000011bb04c28:   mov    QWORD PTR [rdi+0x128],0x1
  0x000000011bb04c33:   jmp    0x000000011bb04c40
  0x000000011bb04c38:   add    QWORD PTR [rdi+0x100],0x1
  0x000000011bb04c40:   mov    rsi,rax
  0x000000011bb04c43:   xchg   ax,ax
  0x000000011bb04c45:   movabs rax,0x800c70b80
  0x000000011bb04c4f:   call   0x0000000122eebc40           ; ImmutableOopMap {}
                                                            ;*invokeinterface doubleValue {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.math.FloatingDecimal::parseDouble@4 (line 110)
                                                            ; - java.lang.Double::parseDouble@1 (line 651)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteralTheHardWay@13 (line 423)
                                                            ;   {virtual_call}
  0x000000011bb04c54:   add    rsp,0x60
  0x000000011bb04c58:   pop    rbp
  0x000000011bb04c59:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x000000011bb04c60:   ja     0x000000011bb04cd9
  0x000000011bb04c66:   ret
  0x000000011bb04c67:   movabs r10,0x13a80e8a8              ;   {metadata({method} {0x000000013a80e8a8} 'parseRestOfDecimalFloatLiteralTheHardWay' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011bb04c71:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011bb04c76:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011bb04c7e:   call   0x000000011b4db500           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteralTheHardWay@-1 (line 423)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011bb04c83:   jmp    0x000000011bb049b4
  0x000000011bb04c88:   call   0x000000011b4d5b20           ; ImmutableOopMap {rsi=Oop }
                                                            ;*invokeinterface subSequence {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteralTheHardWay@3 (line 423)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011bb04c8d:   call   0x000000011b4d5b20           ; ImmutableOopMap {rax=Oop }
                                                            ;*invokeinterface toString {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteralTheHardWay@8 (line 423)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011bb04c92:   movabs r10,0x800031508              ;   {metadata({method} {0x0000000800031508} 'parseDouble' '(Ljava/lang/String;)D' in 'java/lang/Double')}
  0x000000011bb04c9c:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011bb04ca1:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011bb04ca9:   call   0x000000011b4db500           ; ImmutableOopMap {rax=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Double::parseDouble@-1 (line 651)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteralTheHardWay@13 (line 423)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011bb04cae:   jmp    0x000000011bb04b4e
  0x000000011bb04cb3:   movabs r10,0x80015a5a8              ;   {metadata({method} {0x000000080015a5a8} 'parseDouble' '(Ljava/lang/String;)D' in 'jdk/internal/math/FloatingDecimal')}
  0x000000011bb04cbd:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011bb04cc2:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011bb04cca:   call   0x000000011b4db500           ; ImmutableOopMap {rax=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.internal.math.FloatingDecimal::parseDouble@-1 (line 110)
                                                            ; - java.lang.Double::parseDouble@1 (line 651)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteralTheHardWay@13 (line 423)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011bb04ccf:   jmp    0x000000011bb04b88
  0x000000011bb04cd4:   call   0x000000011b4d5b20           ; ImmutableOopMap {rax=Oop }
                                                            ;*invokeinterface doubleValue {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.math.FloatingDecimal::parseDouble@4 (line 110)
                                                            ; - java.lang.Double::parseDouble@1 (line 651)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteralTheHardWay@13 (line 423)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011bb04cd9:   movabs r10,0x11bb04c59              ;   {internal_word}
  0x000000011bb04ce3:   mov    QWORD PTR [r15+0x350],r10
  0x000000011bb04cea:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x000000011bb04cef:   nop
  0x000000011bb04cf0:   nop
  0x000000011bb04cf1:   mov    rax,QWORD PTR [r15+0x3c8]
  0x000000011bb04cf8:   mov    QWORD PTR [r15+0x3c8],0x0
  0x000000011bb04d03:   mov    QWORD PTR [r15+0x3d0],0x0
  0x000000011bb04d0e:   add    rsp,0x60
  0x000000011bb04d12:   pop    rbp
  0x000000011bb04d13:   jmp    0x000000011b446f00           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011bb04d18:   hlt
  0x000000011bb04d19:   hlt
  0x000000011bb04d1a:   hlt
  0x000000011bb04d1b:   hlt
  0x000000011bb04d1c:   hlt
  0x000000011bb04d1d:   hlt
  0x000000011bb04d1e:   hlt
  0x000000011bb04d1f:   hlt
[Stub Code]
  0x000000011bb04d20:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x000000011bb04d25:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011bb04d2f:   jmp    0x000000011bb04d2f           ;   {runtime_call}
  0x000000011bb04d34:   nop
  0x000000011bb04d35:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011bb04d3f:   jmp    0x000000011bb04d3f           ;   {runtime_call}
  0x000000011bb04d44:   nop
  0x000000011bb04d45:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011bb04d4f:   jmp    0x000000011bb04d4f           ;   {runtime_call}
  0x000000011bb04d54:   nop
  0x000000011bb04d55:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011bb04d5f:   jmp    0x000000011bb04d5f           ;   {runtime_call}
[Exception Handler]
  0x000000011bb04d64:   call   0x000000011b4d7900           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011bb04d69:   movabs rdi,0x10db45fc1              ;   {external_word}
  0x000000011bb04d73:   and    rsp,0xfffffffffffffff0
  0x000000011bb04d77:   call   0x000000010d7f0290           ;   {runtime_call _ZN14MacroAssembler7debug64EPcxPx}
  0x000000011bb04d7c:   hlt
[Deopt Handler Code]
  0x000000011bb04d7d:   movabs r10,0x11bb04d7d              ;   {section_word}
  0x000000011bb04d87:   push   r10
  0x000000011bb04d89:   jmp    0x000000011b4333a0           ;   {runtime_call DeoptimizationBlob}
  0x000000011bb04d8e:   hlt
  0x000000011bb04d8f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)    4402 1122       4       ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteralTheHardWay (17 bytes)
 total in heap  [0x0000000122f27710,0x0000000122f28268] = 2904
 relocation     [0x0000000122f27870,0x0000000122f278d0] = 96
 main code      [0x0000000122f278e0,0x0000000122f27ec0] = 1504
 stub code      [0x0000000122f27ec0,0x0000000122f27ef8] = 56
 oops           [0x0000000122f27ef8,0x0000000122f27f08] = 16
 metadata       [0x0000000122f27f08,0x0000000122f27f70] = 104
 scopes data    [0x0000000122f27f70,0x0000000122f280c0] = 336
 scopes pcs     [0x0000000122f280c0,0x0000000122f281e0] = 288
 dependencies   [0x0000000122f281e0,0x0000000122f281e8] = 8
 handler table  [0x0000000122f281e8,0x0000000122f28248] = 96
 nul chk table  [0x0000000122f28248,0x0000000122f28268] = 32

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013a80e8a8} 'parseRestOfDecimalFloatLiteralTheHardWay' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser'
  # parm0:    rsi:rsi   = 'java/lang/CharSequence'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x50]  (sp of caller)
  0x0000000122f278e0:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000122f278e7:   push   rbp
  0x0000000122f278e8:   sub    rsp,0x40
  0x0000000122f278ec:   mov    r8d,ecx
  0x0000000122f278ef:   mov    rbx,rsi
  0x0000000122f278f2:   mov    r10d,DWORD PTR [rsi+0x8]     ; implicit exception: dispatches to 0x0000000122f27e48
  0x0000000122f278f6:   data16 nop WORD PTR [rax+rax*1+0x0]
  0x0000000122f27900:   cmp    r10d,0x8340                  ;   {metadata('java/lang/String')}
  0x0000000122f27907:   jne    0x0000000122f27cc5
  0x0000000122f2790d:   mov    r9d,DWORD PTR [rbx+0x14]
  0x0000000122f27911:   mov    esi,DWORD PTR [r12+r9*8+0xc] ; implicit exception: dispatches to 0x0000000122f27e5c
  0x0000000122f27916:   movsx  ecx,BYTE PTR [rbx+0x10]
  0x0000000122f2791a:   mov    ebp,esi
  0x0000000122f2791c:   sar    ebp,cl
  0x0000000122f2791e:   mov    r10d,edx
  0x0000000122f27921:   test   edx,edx
  0x0000000122f27923:   jl     0x0000000122f27d94
  0x0000000122f27929:   cmp    edx,r8d
  0x0000000122f2792c:   jg     0x0000000122f27db4
  0x0000000122f27932:   cmp    r8d,ebp
  0x0000000122f27935:   jg     0x0000000122f27dd8
  0x0000000122f2793b:   test   edx,edx
  0x0000000122f2793d:   jne    0x0000000122f27951
  0x0000000122f2793f:   nop
  0x0000000122f27940:   cmp    r8d,ebp
  0x0000000122f27943:   je     0x0000000122f27afb
  0x0000000122f27949:   xor    r10d,r10d
  0x0000000122f2794c:   mov    r11d,r8d
  0x0000000122f2794f:   jmp    0x0000000122f27957
  0x0000000122f27951:   mov    r11d,r8d
  0x0000000122f27954:   sub    r11d,edx
  0x0000000122f27957:   test   ecx,ecx
  0x0000000122f27959:   jne    0x0000000122f27df8
  0x0000000122f2795f:   nop
  0x0000000122f27960:   cmp    r8d,r10d
  0x0000000122f27963:   je     0x0000000122f27b52
  0x0000000122f27969:   mov    rbx,QWORD PTR [r15+0xf0]
  0x0000000122f27970:   mov    rcx,rbx
  0x0000000122f27973:   add    rcx,0x18
  0x0000000122f27977:   nop    WORD PTR [rax+rax*1+0x0]
  0x0000000122f27980:   cmp    rcx,QWORD PTR [r15+0x100]
  0x0000000122f27987:   jae    0x0000000122f27c2f
  0x0000000122f2798d:   mov    QWORD PTR [r15+0xf0],rcx
  0x0000000122f27994:   prefetchw BYTE PTR [rcx+0xc0]
  0x0000000122f2799b:   mov    QWORD PTR [rbx],0x1
  0x0000000122f279a2:   mov    DWORD PTR [rbx+0x8],0x8340   ;   {metadata('java/lang/String')}
  0x0000000122f279a9:   mov    DWORD PTR [rbx+0xc],r12d
  0x0000000122f279ad:   mov    QWORD PTR [rbx+0x10],r12
  0x0000000122f279b1:   test   r11d,r11d
  0x0000000122f279b4:   jl     0x0000000122f27e20
  0x0000000122f279ba:   nop    WORD PTR [rax+rax*1+0x0]
  0x0000000122f279c0:   cmp    r11d,0x100000
  0x0000000122f279c7:   ja     0x0000000122f27cfc
  0x0000000122f279cd:   movsxd r8,r11d
  0x0000000122f279d0:   test   r10d,r10d
  0x0000000122f279d3:   jl     0x0000000122f27d71
  0x0000000122f279d9:   mov    ecx,esi
  0x0000000122f279db:   sub    ecx,r10d
  0x0000000122f279de:   cmp    ecx,r11d
  0x0000000122f279e1:   mov    ebp,r11d
  0x0000000122f279e4:   cmovl  ebp,ecx
  0x0000000122f279e7:   mov    edi,r10d
  0x0000000122f279ea:   add    edi,ebp
  0x0000000122f279ec:   cmp    esi,edi
  0x0000000122f279ee:   jb     0x0000000122f27d71
  0x0000000122f279f4:   cmp    r11d,ebp
  0x0000000122f279f7:   jb     0x0000000122f27d71
  0x0000000122f279fd:   data16 xchg ax,ax
  0x0000000122f27a00:   test   ebp,ebp
  0x0000000122f27a02:   jl     0x0000000122f27d71
  0x0000000122f27a08:   add    r8,0x17
  0x0000000122f27a0c:   cmp    r11d,0x100000
  0x0000000122f27a13:   ja     0x0000000122f27c75
  0x0000000122f27a19:   mov    r13,QWORD PTR [r15+0xf0]
  0x0000000122f27a20:   mov    rcx,r8
  0x0000000122f27a23:   and    rcx,0xfffffffffffffff8
  0x0000000122f27a27:   mov    rdi,r13
  0x0000000122f27a2a:   add    rdi,rcx
  0x0000000122f27a2d:   cmp    rdi,QWORD PTR [r15+0x100]
  0x0000000122f27a34:   jae    0x0000000122f27c75
  0x0000000122f27a3a:   mov    QWORD PTR [r15+0xf0],rdi
  0x0000000122f27a41:   prefetchw BYTE PTR [rdi+0xc0]
  0x0000000122f27a48:   mov    QWORD PTR [r13+0x0],0x1
  0x0000000122f27a50:   prefetchw BYTE PTR [rdi+0x100]
  0x0000000122f27a57:   mov    DWORD PTR [r13+0x8],0x1ea0   ;   {metadata({type array byte})}
  0x0000000122f27a5f:   mov    DWORD PTR [r13+0xc],r11d
  0x0000000122f27a63:   prefetchw BYTE PTR [rdi+0x140]
  0x0000000122f27a6a:   prefetchw BYTE PTR [rdi+0x180]
  0x0000000122f27a71:   mov    rsi,r13
  0x0000000122f27a74:   add    rsi,0x10
  0x0000000122f27a78:   shr    r8,0x3
  0x0000000122f27a7c:   mov    r14,r13
  0x0000000122f27a7f:   shr    r14,0x3
  0x0000000122f27a83:   test   ebp,ebp
  0x0000000122f27a85:   je     0x0000000122f27d05
  0x0000000122f27a8b:   movsxd rdx,ebp
  0x0000000122f27a8e:   shl    r9,0x3
  0x0000000122f27a92:   lea    r10,[r9+r10*1+0x10]
  0x0000000122f27a97:   cmp    ebp,r11d
  0x0000000122f27a9a:   nop    WORD PTR [rax+rax*1+0x0]
  0x0000000122f27aa0:   jl     0x0000000122f27b62
  0x0000000122f27aa6:   mov    rdi,r10
  0x0000000122f27aa9:   vzeroupper
  0x0000000122f27aac:   movabs r10,0x11b412060
  0x0000000122f27ab6:   call   r10
  0x0000000122f27ab9:   nop    DWORD PTR [rax+0x0]
  0x0000000122f27ac0:   cmp    BYTE PTR [r15+0x38],0x0
  0x0000000122f27ac5:   je     0x0000000122f27ac7
  0x0000000122f27ac7:   mov    DWORD PTR [rbx+0x14],r14d
  0x0000000122f27acb:   mov    r10,r13
  0x0000000122f27ace:   mov    r11,rbx
  0x0000000122f27ad1:   xor    r10,r11
  0x0000000122f27ad4:   shr    r10,0x16
  0x0000000122f27ad8:   test   r10,r10
  0x0000000122f27adb:   je     0x0000000122f27af7
  0x0000000122f27add:   shr    r11,0x9
  0x0000000122f27ae1:   movabs rdi,0x113958000
  0x0000000122f27aeb:   add    rdi,r11
  0x0000000122f27aee:   cmp    BYTE PTR [rdi],0x4
  0x0000000122f27af1:   jne    0x0000000122f27be5
  0x0000000122f27af7:   mov    BYTE PTR [rbx+0x10],r12b
  0x0000000122f27afb:   mov    r10d,DWORD PTR [rbx+0x8]
  0x0000000122f27aff:   nop
  0x0000000122f27b00:   cmp    r10d,0x8340                  ;   {metadata('java/lang/String')}
  0x0000000122f27b07:   jne    0x0000000122f27cdc
  0x0000000122f27b0d:   mov    rsi,rbx
  0x0000000122f27b10:   vzeroupper
  0x0000000122f27b13:   call   0x0000000122ede1c0           ; ImmutableOopMap {}
                                                            ;*invokestatic readJavaFormatString {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - jdk.internal.math.FloatingDecimal::parseDouble@1 (line 110)
                                                            ; - java.lang.Double::parseDouble@1 (line 651)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteralTheHardWay@13 (line 423)
                                                            ;   {static_call}
  0x0000000122f27b18:   nop    DWORD PTR [rax+rax*1+0x0]
  0x0000000122f27b20:   mov    r10d,DWORD PTR [rax+0x8]     ; implicit exception: dispatches to 0x0000000122f27e6c
  0x0000000122f27b24:   cmp    r10d,0xc70b80                ;   {metadata('jdk/internal/math/FloatingDecimal$ASCIIToBinaryBuffer')}
  0x0000000122f27b2b:   jne    0x0000000122f27cec
  0x0000000122f27b31:   mov    rsi,rax
  0x0000000122f27b34:   vzeroupper
  0x0000000122f27b37:   call   0x0000000122eebc60           ; ImmutableOopMap {}
                                                            ;*invokeinterface doubleValue {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.math.FloatingDecimal::parseDouble@4 (line 110)
                                                            ; - java.lang.Double::parseDouble@1 (line 651)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteralTheHardWay@13 (line 423)
                                                            ;   {optimized virtual_call}
  0x0000000122f27b3c:   vzeroupper
  0x0000000122f27b3f:   add    rsp,0x40
  0x0000000122f27b43:   pop    rbp
  0x0000000122f27b44:   cmp    rsp,QWORD PTR [r15+0x338]    ;   {poll_return}
  0x0000000122f27b4b:   ja     0x0000000122f27e99
  0x0000000122f27b51:   ret
  0x0000000122f27b52:   movabs rbx,0x7ffc00010              ;   {oop(""{0x00000007ffc00010})}
  0x0000000122f27b5c:   nop    DWORD PTR [rax+0x0]
  0x0000000122f27b60:   jmp    0x0000000122f27afb
  0x0000000122f27b62:   mov    r11,rdx
  0x0000000122f27b65:   add    r11,0x10
  0x0000000122f27b69:   mov    r9,r11
  0x0000000122f27b6c:   and    r9,0xfffffffffffffff8
  0x0000000122f27b70:   mov    rdi,r13
  0x0000000122f27b73:   add    rdi,r9
  0x0000000122f27b76:   shr    r11,0x3
  0x0000000122f27b7a:   sub    r8,r11
  0x0000000122f27b7d:   mov    rcx,r8
  0x0000000122f27b80:   xor    rax,rax
  0x0000000122f27b83:   cmp    rcx,0x8
  0x0000000122f27b87:   jg     0x0000000122f27b99
  0x0000000122f27b89:   dec    rcx
  0x0000000122f27b8c:   js     0x0000000122f27bdd
  0x0000000122f27b8e:   mov    QWORD PTR [rdi+rcx*8],rax
  0x0000000122f27b92:   dec    rcx
  0x0000000122f27b95:   jge    0x0000000122f27b8e
  0x0000000122f27b97:   jmp    0x0000000122f27bdd
  0x0000000122f27b99:   vpxor  ymm0,ymm0,ymm0
  0x0000000122f27b9d:   jmp    0x0000000122f27baf
  0x0000000122f27ba2:   vmovdqu YMMWORD PTR [rdi],ymm0
  0x0000000122f27ba6:   vmovdqu YMMWORD PTR [rdi+0x20],ymm0
  0x0000000122f27bab:   add    rdi,0x40
  0x0000000122f27baf:   sub    rcx,0x8
  0x0000000122f27bb3:   jge    0x0000000122f27ba2
  0x0000000122f27bb5:   add    rcx,0x4
  0x0000000122f27bb9:   jl     0x0000000122f27bc7
  0x0000000122f27bbb:   vmovdqu YMMWORD PTR [rdi],ymm0
  0x0000000122f27bbf:   add    rdi,0x20
  0x0000000122f27bc3:   sub    rcx,0x4
  0x0000000122f27bc7:   add    rcx,0x4
  0x0000000122f27bcb:   jle    0x0000000122f27bdd
  0x0000000122f27bcd:   dec    rcx
  0x0000000122f27bd0:   vmovq  QWORD PTR [rdi],xmm0
  0x0000000122f27bd4:   add    rdi,0x8
  0x0000000122f27bd8:   dec    rcx
  0x0000000122f27bdb:   jge    0x0000000122f27bd0
  0x0000000122f27bdd:   data16 xchg ax,ax
  0x0000000122f27be0:   jmp    0x0000000122f27aa6
  0x0000000122f27be5:   mov    r10,QWORD PTR [r15+0x40]
  0x0000000122f27be9:   mov    r11,QWORD PTR [r15+0x50]
  0x0000000122f27bed:   lock add DWORD PTR [rsp-0x40],0x0
  0x0000000122f27bf3:   cmp    BYTE PTR [rdi],0x0
  0x0000000122f27bf6:   je     0x0000000122f27af7
  0x0000000122f27bfc:   mov    BYTE PTR [rdi],r12b
  0x0000000122f27bff:   nop
  0x0000000122f27c00:   test   r10,r10
  0x0000000122f27c03:   jne    0x0000000122f27c1d
  0x0000000122f27c05:   mov    rsi,r15
  0x0000000122f27c08:   vzeroupper
  0x0000000122f27c0b:   movabs r10,0x10d4712b0
  0x0000000122f27c15:   call   r10
  0x0000000122f27c18:   jmp    0x0000000122f27af7
  0x0000000122f27c1d:   mov    QWORD PTR [r11+r10*1-0x8],rdi
  0x0000000122f27c22:   add    r10,0xfffffffffffffff8
  0x0000000122f27c26:   mov    QWORD PTR [r15+0x40],r10
  0x0000000122f27c2a:   jmp    0x0000000122f27af7
  0x0000000122f27c2f:   mov    DWORD PTR [rsp+0xc],r11d
  0x0000000122f27c34:   mov    DWORD PTR [rsp+0x8],esi
  0x0000000122f27c38:   mov    DWORD PTR [rsp+0x4],r9d
  0x0000000122f27c3d:   mov    DWORD PTR [rsp],r8d
  0x0000000122f27c41:   mov    ebp,r10d
  0x0000000122f27c44:   movabs rsi,0x800008340              ;   {metadata('java/lang/String')}
  0x0000000122f27c4e:   xchg   ax,ax
  0x0000000122f27c50:   vzeroupper
  0x0000000122f27c53:   call   0x000000011b4e1580           ; ImmutableOopMap {[4]=NarrowOop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - java.lang.StringLatin1::newString@7 (line 766)
                                                            ; - java.lang.String::substring@41 (line 2705)
                                                            ; - java.lang.String::subSequence@3 (line 2738)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteralTheHardWay@3 (line 423)
                                                            ;   {runtime_call _new_instance_Java}
  0x0000000122f27c58:   mov    rbx,rax
  0x0000000122f27c5b:   mov    r10d,ebp
  0x0000000122f27c5e:   mov    r8d,DWORD PTR [rsp]
  0x0000000122f27c62:   mov    r9d,DWORD PTR [rsp+0x4]
  0x0000000122f27c67:   mov    esi,DWORD PTR [rsp+0x8]
  0x0000000122f27c6b:   mov    r11d,DWORD PTR [rsp+0xc]
  0x0000000122f27c70:   jmp    0x0000000122f279b1
  0x0000000122f27c75:   mov    QWORD PTR [rsp+0x18],r8
  0x0000000122f27c7a:   mov    DWORD PTR [rsp+0x10],r11d
  0x0000000122f27c7f:   mov    DWORD PTR [rsp+0xc],r9d
  0x0000000122f27c84:   mov    DWORD PTR [rsp+0x8],r10d
  0x0000000122f27c89:   mov    QWORD PTR [rsp],rbx
  0x0000000122f27c8d:   movabs rsi,0x800001ea0              ;   {metadata({type array byte})}
  0x0000000122f27c97:   mov    edx,r11d
  0x0000000122f27c9a:   xchg   ax,ax
  0x0000000122f27c9c:   vzeroupper
  0x0000000122f27c9f:   call   0x000000011b4ded80           ; ImmutableOopMap {[0]=Oop [12]=NarrowOop }
                                                            ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - java.util.Arrays::copyOfRange@41 (line 3822)
                                                            ; - java.lang.StringLatin1::newString@16 (line 766)
                                                            ; - java.lang.String::substring@41 (line 2705)
                                                            ; - java.lang.String::subSequence@3 (line 2738)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteralTheHardWay@3 (line 423)
                                                            ;   {runtime_call _new_array_nozero_Java}
  0x0000000122f27ca4:   mov    rbx,QWORD PTR [rsp]
  0x0000000122f27ca8:   mov    r10d,DWORD PTR [rsp+0x8]
  0x0000000122f27cad:   mov    r9d,DWORD PTR [rsp+0xc]
  0x0000000122f27cb2:   mov    r11d,DWORD PTR [rsp+0x10]
  0x0000000122f27cb7:   mov    r8,QWORD PTR [rsp+0x18]
  0x0000000122f27cbc:   mov    r13,rax
  0x0000000122f27cbf:   nop
  0x0000000122f27cc0:   jmp    0x0000000122f27a71
  0x0000000122f27cc5:   mov    esi,0xffffffde
  0x0000000122f27cca:   mov    rbp,rbx
  0x0000000122f27ccd:   mov    DWORD PTR [rsp],edx
  0x0000000122f27cd0:   mov    DWORD PTR [rsp+0x4],ecx
  0x0000000122f27cd4:   vzeroupper
  0x0000000122f27cd7:   call   0x000000011b433000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*invokeinterface subSequence {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteralTheHardWay@3 (line 423)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f27cdc:   mov    esi,0xffffffde
  0x0000000122f27ce1:   mov    rbp,rbx
  0x0000000122f27ce4:   vzeroupper
  0x0000000122f27ce7:   call   0x000000011b433000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*invokeinterface toString {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteralTheHardWay@8 (line 423)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f27cec:   mov    esi,0xffffffde
  0x0000000122f27cf1:   mov    rbp,rax
  0x0000000122f27cf4:   vzeroupper
  0x0000000122f27cf7:   call   0x000000011b433000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*invokeinterface doubleValue {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.math.FloatingDecimal::parseDouble@4 (line 110)
                                                            ; - java.lang.Double::parseDouble@1 (line 651)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteralTheHardWay@13 (line 423)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f27cfc:   movsxd r8,r11d
  0x0000000122f27cff:   nop
  0x0000000122f27d00:   jmp    0x0000000122f279d0
  0x0000000122f27d05:   add    r8,0xfffffffffffffffe
  0x0000000122f27d09:   mov    rcx,r8
  0x0000000122f27d0c:   mov    rdi,rsi
  0x0000000122f27d0f:   xor    rax,rax
  0x0000000122f27d12:   cmp    rcx,0x8
  0x0000000122f27d16:   jg     0x0000000122f27d28
  0x0000000122f27d18:   dec    rcx
  0x0000000122f27d1b:   js     0x0000000122f27d6c
  0x0000000122f27d1d:   mov    QWORD PTR [rdi+rcx*8],rax
  0x0000000122f27d21:   dec    rcx
  0x0000000122f27d24:   jge    0x0000000122f27d1d
  0x0000000122f27d26:   jmp    0x0000000122f27d6c
  0x0000000122f27d28:   vpxor  ymm0,ymm0,ymm0
  0x0000000122f27d2c:   jmp    0x0000000122f27d3e
  0x0000000122f27d31:   vmovdqu YMMWORD PTR [rdi],ymm0
  0x0000000122f27d35:   vmovdqu YMMWORD PTR [rdi+0x20],ymm0
  0x0000000122f27d3a:   add    rdi,0x40
  0x0000000122f27d3e:   sub    rcx,0x8
  0x0000000122f27d42:   jge    0x0000000122f27d31
  0x0000000122f27d44:   add    rcx,0x4
  0x0000000122f27d48:   jl     0x0000000122f27d56
  0x0000000122f27d4a:   vmovdqu YMMWORD PTR [rdi],ymm0
  0x0000000122f27d4e:   add    rdi,0x20
  0x0000000122f27d52:   sub    rcx,0x4
  0x0000000122f27d56:   add    rcx,0x4
  0x0000000122f27d5a:   jle    0x0000000122f27d6c
  0x0000000122f27d5c:   dec    rcx
  0x0000000122f27d5f:   vmovq  QWORD PTR [rdi],xmm0
  0x0000000122f27d63:   add    rdi,0x8
  0x0000000122f27d67:   dec    rcx
  0x0000000122f27d6a:   jge    0x0000000122f27d5f
  0x0000000122f27d6c:   jmp    0x0000000122f27ab9
  0x0000000122f27d71:   mov    esi,0xffffffcc
  0x0000000122f27d76:   mov    QWORD PTR [rsp],rbx
  0x0000000122f27d7a:   mov    DWORD PTR [rsp+0x8],r10d
  0x0000000122f27d7f:   mov    DWORD PTR [rsp+0xc],r9d
  0x0000000122f27d84:   mov    DWORD PTR [rsp+0x14],r11d
  0x0000000122f27d89:   data16 xchg ax,ax
  0x0000000122f27d8c:   vzeroupper
  0x0000000122f27d8f:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop [12]=NarrowOop }
                                                            ;*newarray {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Arrays::copyOfRange@41 (line 3822)
                                                            ; - java.lang.StringLatin1::newString@16 (line 766)
                                                            ; - java.lang.String::substring@41 (line 2705)
                                                            ; - java.lang.String::subSequence@3 (line 2738)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteralTheHardWay@3 (line 423)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f27d94:   mov    esi,0xffffff45
  0x0000000122f27d99:   mov    QWORD PTR [rsp],rbx
  0x0000000122f27d9d:   mov    DWORD PTR [rsp+0x10],edx
  0x0000000122f27da1:   mov    DWORD PTR [rsp+0x14],r8d
  0x0000000122f27da6:   mov    DWORD PTR [rsp+0x18],edx
  0x0000000122f27daa:   xchg   ax,ax
  0x0000000122f27dac:   vzeroupper
  0x0000000122f27daf:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.internal.util.Preconditions::checkFromToIndex@1 (line 348)
                                                            ; - java.lang.String::checkBoundsBeginEnd@6 (line 4586)
                                                            ; - java.lang.String::substring@8 (line 2700)
                                                            ; - java.lang.String::subSequence@3 (line 2738)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteralTheHardWay@3 (line 423)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f27db4:   mov    esi,0xffffff45
  0x0000000122f27db9:   mov    QWORD PTR [rsp],rbx
  0x0000000122f27dbd:   mov    DWORD PTR [rsp+0x10],edx
  0x0000000122f27dc1:   mov    DWORD PTR [rsp+0x14],r8d
  0x0000000122f27dc6:   mov    DWORD PTR [rsp+0x18],edx
  0x0000000122f27dca:   mov    DWORD PTR [rsp+0x1c],r8d
  0x0000000122f27dcf:   nop
  0x0000000122f27dd0:   vzeroupper
  0x0000000122f27dd3:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpgt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.internal.util.Preconditions::checkFromToIndex@6 (line 348)
                                                            ; - java.lang.String::checkBoundsBeginEnd@6 (line 4586)
                                                            ; - java.lang.String::substring@8 (line 2700)
                                                            ; - java.lang.String::subSequence@3 (line 2738)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteralTheHardWay@3 (line 423)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f27dd8:   mov    esi,0xffffff45
  0x0000000122f27ddd:   mov    QWORD PTR [rsp],rbx
  0x0000000122f27de1:   mov    DWORD PTR [rsp+0x10],edx
  0x0000000122f27de5:   mov    DWORD PTR [rsp+0x14],r8d
  0x0000000122f27dea:   mov    DWORD PTR [rsp+0x18],r8d
  0x0000000122f27def:   nop
  0x0000000122f27df0:   vzeroupper
  0x0000000122f27df3:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.internal.util.Preconditions::checkFromToIndex@11 (line 348)
                                                            ; - java.lang.String::checkBoundsBeginEnd@6 (line 4586)
                                                            ; - java.lang.String::substring@8 (line 2700)
                                                            ; - java.lang.String::subSequence@3 (line 2738)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteralTheHardWay@3 (line 423)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f27df8:   test   ecx,ecx
  0x0000000122f27dfa:   setne  bpl
  0x0000000122f27dfe:   movzx  ebp,bpl
  0x0000000122f27e02:   xor    ebp,0x1
  0x0000000122f27e05:   mov    esi,0xffffff45
  0x0000000122f27e0a:   mov    QWORD PTR [rsp],rbx
  0x0000000122f27e0e:   mov    DWORD PTR [rsp+0x8],r10d
  0x0000000122f27e13:   mov    DWORD PTR [rsp+0xc],r11d
  0x0000000122f27e18:   vzeroupper
  0x0000000122f27e1b:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.String::substring@31 (line 2705)
                                                            ; - java.lang.String::subSequence@3 (line 2738)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteralTheHardWay@3 (line 423)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f27e20:   mov    esi,0xffffff45
  0x0000000122f27e25:   mov    QWORD PTR [rsp],rbx
  0x0000000122f27e29:   mov    DWORD PTR [rsp+0x8],r10d
  0x0000000122f27e2e:   mov    DWORD PTR [rsp+0xc],r8d
  0x0000000122f27e33:   mov    DWORD PTR [rsp+0x10],r9d
  0x0000000122f27e38:   mov    DWORD PTR [rsp+0x18],r11d
  0x0000000122f27e3d:   data16 xchg ax,ax
  0x0000000122f27e40:   vzeroupper
  0x0000000122f27e43:   call   0x000000011b433000           ; ImmutableOopMap {[0]=Oop [16]=NarrowOop }
                                                            ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Arrays::copyOfRange@5 (line 3820)
                                                            ; - java.lang.StringLatin1::newString@16 (line 766)
                                                            ; - java.lang.String::substring@41 (line 2705)
                                                            ; - java.lang.String::subSequence@3 (line 2738)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteralTheHardWay@3 (line 423)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f27e48:   mov    esi,0xfffffff6
  0x0000000122f27e4d:   mov    ebp,edx
  0x0000000122f27e4f:   mov    DWORD PTR [rsp],ecx
  0x0000000122f27e52:   xchg   ax,ax
  0x0000000122f27e54:   vzeroupper
  0x0000000122f27e57:   call   0x000000011b433000           ; ImmutableOopMap {}
                                                            ;*invokeinterface subSequence {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteralTheHardWay@3 (line 423)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f27e5c:   mov    esi,0xfffffff6
  0x0000000122f27e61:   data16 xchg ax,ax
  0x0000000122f27e64:   vzeroupper
  0x0000000122f27e67:   call   0x000000011b433000           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::length@4 (line 1476)
                                                            ; - java.lang.String::substring@1 (line 2699)
                                                            ; - java.lang.String::subSequence@3 (line 2738)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteralTheHardWay@3 (line 423)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f27e6c:   mov    esi,0xfffffff6
  0x0000000122f27e71:   data16 xchg ax,ax
  0x0000000122f27e74:   vzeroupper
  0x0000000122f27e77:   call   0x000000011b433000           ; ImmutableOopMap {}
                                                            ;*invokeinterface doubleValue {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.math.FloatingDecimal::parseDouble@4 (line 110)
                                                            ; - java.lang.Double::parseDouble@1 (line 651)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteralTheHardWay@13 (line 423)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000122f27e7c:   mov    rsi,rax
  0x0000000122f27e7f:   nop
  0x0000000122f27e80:   jmp    0x0000000122f27e8c
  0x0000000122f27e82:   mov    rsi,rax
  0x0000000122f27e85:   jmp    0x0000000122f27e8c
  0x0000000122f27e87:   jmp    0x0000000122f27e89
  0x0000000122f27e89:   mov    rsi,rax
  0x0000000122f27e8c:   vzeroupper
  0x0000000122f27e8f:   add    rsp,0x40
  0x0000000122f27e93:   pop    rbp
  0x0000000122f27e94:   jmp    0x000000011b4e2700           ;   {runtime_call _rethrow_Java}
  0x0000000122f27e99:   movabs r10,0x122f27b44              ;   {internal_word}
  0x0000000122f27ea3:   mov    QWORD PTR [r15+0x350],r10
  0x0000000122f27eaa:   jmp    0x000000011b434100           ;   {runtime_call SafepointBlob}
  0x0000000122f27eaf:   hlt
  0x0000000122f27eb0:   hlt
  0x0000000122f27eb1:   hlt
  0x0000000122f27eb2:   hlt
  0x0000000122f27eb3:   hlt
  0x0000000122f27eb4:   hlt
  0x0000000122f27eb5:   hlt
  0x0000000122f27eb6:   hlt
  0x0000000122f27eb7:   hlt
  0x0000000122f27eb8:   hlt
  0x0000000122f27eb9:   hlt
  0x0000000122f27eba:   hlt
  0x0000000122f27ebb:   hlt
  0x0000000122f27ebc:   hlt
  0x0000000122f27ebd:   hlt
  0x0000000122f27ebe:   hlt
  0x0000000122f27ebf:   hlt
[Stub Code]
  0x0000000122f27ec0:   movabs rbx,0x0                      ;   {no_reloc}
  0x0000000122f27eca:   jmp    0x0000000122f27eca           ;   {runtime_call}
  0x0000000122f27ecf:   movabs rbx,0x0                      ;   {static_stub}
  0x0000000122f27ed9:   jmp    0x0000000122f27ed9           ;   {runtime_call}
[Exception Handler]
  0x0000000122f27ede:   jmp    0x000000011b447880           ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000122f27ee3:   call   0x0000000122f27ee8
  0x0000000122f27ee8:   sub    QWORD PTR [rsp],0x5
  0x0000000122f27eed:   jmp    0x000000011b4333a0           ;   {runtime_call DeoptimizationBlob}
  0x0000000122f27ef2:   hlt
  0x0000000122f27ef3:   hlt
  0x0000000122f27ef4:   hlt
  0x0000000122f27ef5:   hlt
  0x0000000122f27ef6:   hlt
  0x0000000122f27ef7:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

FastDoubleParser               :    475.84 MB/s (+/-11.0 %)    26.86 Mfloat/s      37.24 ns/f
FastDoubleParserFromCharArray  :    555.18 MB/s (+/- 6.0 %)    31.73 Mfloat/s      31.52 ns/f
FastDoubleParserFromByteArray  :    540.23 MB/s (+/- 5.6 %)    30.89 Mfloat/s      32.37 ns/f
Double                         :     87.60 MB/s (+/- 4.0 %)     5.02 Mfloat/s     199.21 ns/f

Speedup FastDoubleParser              vs Double: 5.43
Speedup FastDoubleParserFromCharArray vs Double: 6.34
Speedup FastDoubleParserFromByteArray vs Double: 6.17


You can also provide a filename: it should contain one string per line corresponding to a number.

Process finished with exit code 0

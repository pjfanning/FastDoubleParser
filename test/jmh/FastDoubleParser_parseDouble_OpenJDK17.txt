/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/bin/java -Dvisualvm.id=25694191945081 -javaagent:/Applications/IntelliJ IDEA CE.app/Contents/lib/idea_rt.jar=50375:/Applications/IntelliJ IDEA CE.app/Contents/bin -Dfile.encoding=UTF-8 -classpath /Users/Shared/Developer/Java/FastDoubleParser/github/FastDoubleParser/out/test/FastDoubleParser:/Users/Shared/Developer/Java/FastDoubleParser/github/FastDoubleParser/out/production/FastDoubleParser:/Users/Shared/Developer/Java/FastDoubleParser/github/FastDoubleParser/lib/jmh-core-1.28.jar:/Users/Shared/Developer/Java/FastDoubleParser/github/FastDoubleParser/lib/jopt-simple-4.6.jar:/Users/Shared/Developer/Java/FastDoubleParser/github/FastDoubleParser/lib/commons-math3-3.2.jar:/Users/Shared/Developer/Java/FastDoubleParser/github/FastDoubleParser/lib/jmh-generator-annprocess-1.28.jar:/Users/Shared/Developer/Java/FastDoubleParser/github/FastDoubleParser/lib/junit-jupiter-5.7.1.jar:/Users/Shared/Developer/Java/FastDoubleParser/github/FastDoubleParser/lib/junit-jupiter-api-5.7.1.jar:/Users/Shared/Developer/Java/FastDoubleParser/github/FastDoubleParser/lib/apiguardian-api-1.1.0.jar:/Users/Shared/Developer/Java/FastDoubleParser/github/FastDoubleParser/lib/opentest4j-1.2.0.jar:/Users/Shared/Developer/Java/FastDoubleParser/github/FastDoubleParser/lib/junit-platform-commons-1.7.1.jar:/Users/Shared/Developer/Java/FastDoubleParser/github/FastDoubleParser/lib/junit-jupiter-params-5.7.1.jar:/Users/Shared/Developer/Java/FastDoubleParser/github/FastDoubleParser/lib/junit-jupiter-engine-5.7.1.jar:/Users/Shared/Developer/Java/FastDoubleParser/github/FastDoubleParser/lib/junit-platform-engine-1.7.1.jar org.openjdk.jmh.Main ch.randelshofer.fastdoubleparser.FastDoubleParserJmhBenchmark.*
# JMH version: 1.28
# VM version: JDK 17, OpenJDK 64-Bit Server VM, 17+35-2724
# VM invoker: /Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/bin/java
# VM options: -Dvisualvm.id=25694191945081 -javaagent:/Applications/IntelliJ IDEA CE.app/Contents/lib/idea_rt.jar=50375:/Applications/IntelliJ IDEA CE.app/Contents/bin -Dfile.encoding=UTF-8 -XX:+UnlockExperimentalVMOptions --add-modules jdk.incubator.vector -XX:+UnlockDiagnosticVMOptions -XX:PrintAssemblyOptions=intel -XX:CompileCommand=print,ch/randelshofer/fastdoubleparser/FastDoubleParser.*
# Blackhole mode: full + dont-inline hint
# Warmup: 2 iterations, 10 s each
# Measurement: 2 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ch.randelshofer.fastdoubleparser.FastDoubleParserJmhBenchmark.m05From17DigitsWith3DigitExp

# Run progress: 0.00% complete, ETA 00:01:20
# Fork: 1 of 2
CompileCommand: print ch/randelshofer/fastdoubleparser/FastDoubleParser.* bool print = true
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 
============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     408  581       3       ch.randelshofer.fastdoubleparser.FastDoubleParser::isDigit (18 bytes)
 total in heap  [0x000000011a4d0e90,0x000000011a4d11e8] = 856
 relocation     [0x000000011a4d0ff0,0x000000011a4d1020] = 48
 main code      [0x000000011a4d1020,0x000000011a4d1160] = 320
 stub code      [0x000000011a4d1160,0x000000011a4d1190] = 48
 oops           [0x000000011a4d1190,0x000000011a4d1198] = 8
 metadata       [0x000000011a4d1198,0x000000011a4d11a0] = 8
 scopes data    [0x000000011a4d11a0,0x000000011a4d11b0] = 16
 scopes pcs     [0x000000011a4d11b0,0x000000011a4d11e0] = 48
 dependencies   [0x000000011a4d11e0,0x000000011a4d11e8] = 8

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013d4a8958} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser'
  # parm0:    rsi       = char
  #           [sp+0x40]  (sp of caller)
  0x000000011a4d1020:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011a4d1027:   push   rbp
  0x000000011a4d1028:   sub    rsp,0x30
  0x000000011a4d102c:   movabs rax,0x13d4ab7e0              ;   {metadata(method data for {method} {0x000000013d4a8958} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011a4d1036:   mov    edi,DWORD PTR [rax+0xac]
  0x000000011a4d103c:   add    edi,0x2
  0x000000011a4d103f:   mov    DWORD PTR [rax+0xac],edi
  0x000000011a4d1045:   and    edi,0x7fe
  0x000000011a4d104b:   cmp    edi,0x0
  0x000000011a4d104e:   je     0x000000011a4d10fb
  0x000000011a4d1054:   cmp    esi,0x30
  0x000000011a4d1057:   movabs rax,0x13d4ab7e0              ;   {metadata(method data for {method} {0x000000013d4a8958} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011a4d1061:   movabs rdi,0xf0
  0x000000011a4d106b:   jl     0x000000011a4d107b
  0x000000011a4d1071:   movabs rdi,0x100
  0x000000011a4d107b:   mov    rbx,QWORD PTR [rax+rdi*1]
  0x000000011a4d107f:   lea    rbx,[rbx+0x1]
  0x000000011a4d1083:   mov    QWORD PTR [rax+rdi*1],rbx
  0x000000011a4d1087:   jl     0x000000011a4d10c6
  0x000000011a4d108d:   cmp    esi,0x39
  0x000000011a4d1090:   movabs rax,0x13d4ab7e0              ;   {metadata(method data for {method} {0x000000013d4a8958} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011a4d109a:   movabs rsi,0x120
  0x000000011a4d10a4:   jle    0x000000011a4d10b4
  0x000000011a4d10aa:   movabs rsi,0x110
  0x000000011a4d10b4:   mov    rdi,QWORD PTR [rax+rsi*1]
  0x000000011a4d10b8:   lea    rdi,[rdi+0x1]
  0x000000011a4d10bc:   mov    QWORD PTR [rax+rsi*1],rdi
  0x000000011a4d10c0:   jle    0x000000011a4d10d0
  0x000000011a4d10c6:   mov    eax,0x0
  0x000000011a4d10cb:   jmp    0x000000011a4d10e5
  0x000000011a4d10d0:   movabs rax,0x13d4ab7e0              ;   {metadata(method data for {method} {0x000000013d4a8958} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011a4d10da:   inc    DWORD PTR [rax+0x130]
  0x000000011a4d10e0:   mov    eax,0x1
  0x000000011a4d10e5:   and    eax,0x1
  0x000000011a4d10e8:   add    rsp,0x30
  0x000000011a4d10ec:   pop    rbp
  0x000000011a4d10ed:   cmp    rsp,QWORD PTR [r15+0x340]    ;   {poll_return}
  0x000000011a4d10f4:   ja     0x000000011a4d111c
  0x000000011a4d10fa:   ret    
  0x000000011a4d10fb:   movabs r10,0x13d4a8958              ;   {metadata({method} {0x000000013d4a8958} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011a4d1105:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011a4d110a:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011a4d1112:   call   0x0000000119f5e180           ; ImmutableOopMap {}
                                                            ;*synchronization entry
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::isDigit@-1 (line 79)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011a4d1117:   jmp    0x000000011a4d1054
  0x000000011a4d111c:   movabs r10,0x11a4d10ed              ;   {internal_word}
  0x000000011a4d1126:   mov    QWORD PTR [r15+0x358],r10
  0x000000011a4d112d:   jmp    0x0000000119eb9100           ;   {runtime_call SafepointBlob}
  0x000000011a4d1132:   nop
  0x000000011a4d1133:   nop
  0x000000011a4d1134:   mov    rax,QWORD PTR [r15+0x3d0]
  0x000000011a4d113b:   mov    QWORD PTR [r15+0x3d0],0x0
  0x000000011a4d1146:   mov    QWORD PTR [r15+0x3d8],0x0
  0x000000011a4d1151:   add    rsp,0x30
  0x000000011a4d1155:   pop    rbp
  0x000000011a4d1156:   jmp    0x0000000119f57280           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011a4d115b:   hlt    
  0x000000011a4d115c:   hlt    
  0x000000011a4d115d:   hlt    
  0x000000011a4d115e:   hlt    
  0x000000011a4d115f:   hlt    
[Exception Handler]
  0x000000011a4d1160:   call   0x0000000119f5ab80           ;   {no_reloc}
  0x000000011a4d1165:   movabs rdi,0x1121cbe43              ;   {external_word}
  0x000000011a4d116f:   and    rsp,0xfffffffffffffff0
  0x000000011a4d1173:   call   0x0000000111e6ec50           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011a4d1178:   hlt    
[Deopt Handler Code]
  0x000000011a4d1179:   movabs r10,0x11a4d1179              ;   {section_word}
  0x000000011a4d1183:   push   r10
  0x000000011a4d1185:   jmp    0x0000000119eb83a0           ;   {runtime_call DeoptimizationBlob}
  0x000000011a4d118a:   hlt    
  0x000000011a4d118b:   hlt    
  0x000000011a4d118c:   hlt    
  0x000000011a4d118d:   hlt    
  0x000000011a4d118e:   hlt    
  0x000000011a4d118f:   hlt    
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     414  595       4       ch.randelshofer.fastdoubleparser.FastDoubleParser::isDigit (18 bytes)
 total in heap  [0x0000000121961290,0x00000001219614b0] = 544
 relocation     [0x00000001219613f0,0x0000000121961400] = 16
 main code      [0x0000000121961400,0x0000000121961460] = 96
 stub code      [0x0000000121961460,0x0000000121961478] = 24
 oops           [0x0000000121961478,0x0000000121961480] = 8
 scopes data    [0x0000000121961480,0x0000000121961488] = 8
 scopes pcs     [0x0000000121961488,0x00000001219614a8] = 32
 dependencies   [0x00000001219614a8,0x00000001219614b0] = 8

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013d4a8958} 'isDigit' '(C)Z' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser'
  # parm0:    rsi       = char
  #           [sp+0x20]  (sp of caller)
  0x0000000121961400:   sub    rsp,0x18
  0x0000000121961407:   mov    QWORD PTR [rsp+0x10],rbp
  0x000000012196140c:   add    esi,0xffffffd0
  0x000000012196140f:   cmp    esi,0xa
  0x0000000121961412:   jae    0x000000012196142c
  0x0000000121961414:   mov    eax,0x1
  0x0000000121961419:   add    rsp,0x10
  0x000000012196141d:   pop    rbp
  0x000000012196141e:   cmp    rsp,QWORD PTR [r15+0x340]    ;   {poll_return}
  0x0000000121961425:   ja     0x0000000121961430
  0x000000012196142b:   ret    
  0x000000012196142c:   xor    eax,eax
  0x000000012196142e:   jmp    0x0000000121961419
  0x0000000121961430:   movabs r10,0x12196141e              ;   {internal_word}
  0x000000012196143a:   mov    QWORD PTR [r15+0x358],r10
  0x0000000121961441:   jmp    0x0000000119eb9100           ;   {runtime_call SafepointBlob}
  0x0000000121961446:   hlt    
  0x0000000121961447:   hlt    
  0x0000000121961448:   hlt    
  0x0000000121961449:   hlt    
  0x000000012196144a:   hlt    
  0x000000012196144b:   hlt    
  0x000000012196144c:   hlt    
  0x000000012196144d:   hlt    
  0x000000012196144e:   hlt    
  0x000000012196144f:   hlt    
  0x0000000121961450:   hlt    
  0x0000000121961451:   hlt    
  0x0000000121961452:   hlt    
  0x0000000121961453:   hlt    
  0x0000000121961454:   hlt    
  0x0000000121961455:   hlt    
  0x0000000121961456:   hlt    
  0x0000000121961457:   hlt    
  0x0000000121961458:   hlt    
  0x0000000121961459:   hlt    
  0x000000012196145a:   hlt    
  0x000000012196145b:   hlt    
  0x000000012196145c:   hlt    
  0x000000012196145d:   hlt    
  0x000000012196145e:   hlt    
  0x000000012196145f:   hlt    
[Exception Handler]
  0x0000000121961460:   jmp    0x0000000119f57880           ;   {no_reloc}
[Deopt Handler Code]
  0x0000000121961465:   call   0x000000012196146a
  0x000000012196146a:   sub    QWORD PTR [rsp],0x5
  0x000000012196146f:   jmp    0x0000000119eb83a0           ;   {runtime_call DeoptimizationBlob}
  0x0000000121961474:   hlt    
  0x0000000121961475:   hlt    
  0x0000000121961476:   hlt    
  0x0000000121961477:   hlt    
--------------------------------------------------------------------------------

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     415  582       2       ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral (488 bytes)
 total in heap  [0x000000011a4d1210,0x000000011a4d2648] = 5176
 relocation     [0x000000011a4d1370,0x000000011a4d1488] = 280
 main code      [0x000000011a4d14a0,0x000000011a4d1f00] = 2656
 stub code      [0x000000011a4d1f00,0x000000011a4d2030] = 304
 oops           [0x000000011a4d2030,0x000000011a4d2038] = 8
 metadata       [0x000000011a4d2038,0x000000011a4d2060] = 40
 scopes data    [0x000000011a4d2060,0x000000011a4d2440] = 992
 scopes pcs     [0x000000011a4d2440,0x000000011a4d2620] = 480
 dependencies   [0x000000011a4d2620,0x000000011a4d2628] = 8
 nul chk table  [0x000000011a4d2628,0x000000011a4d2648] = 32

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013d4a9358} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser'
  # parm0:    rsi:rsi   = 'java/lang/CharSequence'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  # parm3:    r8        = int
  # parm4:    r9        = boolean
  # parm5:    rdi       = boolean
  #           [sp+0x140]  (sp of caller)
  0x000000011a4d14a0:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011a4d14a7:   push   rbp
  0x000000011a4d14a8:   sub    rsp,0x130
  0x000000011a4d14af:   mov    QWORD PTR [rsp+0xb8],rsi
  0x000000011a4d14b7:   mov    DWORD PTR [rsp+0xc4],edx
  0x000000011a4d14be:   mov    DWORD PTR [rsp+0xd0],ecx
  0x000000011a4d14c5:   mov    DWORD PTR [rsp+0xc0],r8d
  0x000000011a4d14cd:   mov    DWORD PTR [rsp+0xcc],r9d
  0x000000011a4d14d5:   mov    DWORD PTR [rsp+0xc8],edi
  0x000000011a4d14dc:   movabs rbx,0x13d4aa1e8
  0x000000011a4d14e6:   mov    eax,DWORD PTR [rbx+0x8]
  0x000000011a4d14e9:   add    eax,0x2
  0x000000011a4d14ec:   mov    DWORD PTR [rbx+0x8],eax
  0x000000011a4d14ef:   and    eax,0xffe
  0x000000011a4d14f5:   cmp    eax,0x0
  0x000000011a4d14f8:   je     0x000000011a4d1df4
  0x000000011a4d14fe:   mov    rbx,rdx
  0x000000011a4d1501:   mov    eax,0x0
  0x000000011a4d1506:   mov    r11d,0xffffffff
  0x000000011a4d150c:   movabs r13,0x0
  0x000000011a4d1516:   mov    DWORD PTR [rsp+0xb0],r11d
  0x000000011a4d151e:   mov    QWORD PTR [rsp+0xa8],r13
  0x000000011a4d1526:   xchg   ax,ax
  0x000000011a4d1528:   cmp    ebx,r8d
  0x000000011a4d152b:   jge    0x000000011a4d1664
  0x000000011a4d1531:   mov    rdx,rbx
  0x000000011a4d1534:   mov    r14,rsi
  0x000000011a4d1537:   mov    rsi,r14
  0x000000011a4d153a:   mov    DWORD PTR [rsp+0xb4],ebx
  0x000000011a4d1541:   nop    DWORD PTR [rax+0x0]
  0x000000011a4d1545:   movabs rax,0x80000e4a0
  0x000000011a4d154f:   call   0x000000012193cfa0           ; ImmutableOopMap {[184]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@22 (line 326)
                                                            ;   {virtual_call}
  0x000000011a4d1554:   mov    rdx,rax
  0x000000011a4d1557:   cmp    edx,0x30
  0x000000011a4d155a:   jl     0x000000011a4d1578
  0x000000011a4d1560:   cmp    edx,0x39
  0x000000011a4d1563:   mov    eax,0x0
  0x000000011a4d1568:   jg     0x000000011a4d1573
  0x000000011a4d156e:   mov    eax,0x1
  0x000000011a4d1573:   jmp    0x000000011a4d157d
  0x000000011a4d1578:   mov    eax,0x0
  0x000000011a4d157d:   and    eax,0x1
  0x000000011a4d1580:   cmp    eax,0x0
  0x000000011a4d1583:   je     0x000000011a4d15c5
  0x000000011a4d1589:   movabs rax,0xa
  0x000000011a4d1593:   mov    rsi,rax
  0x000000011a4d1596:   mov    rax,QWORD PTR [rsp+0xa8]
  0x000000011a4d159e:   imul   rax,rsi
  0x000000011a4d15a2:   movsxd rsi,edx
  0x000000011a4d15a5:   add    rax,rsi
  0x000000011a4d15a8:   movabs r10,0x30
  0x000000011a4d15b2:   sub    rax,r10
  0x000000011a4d15b5:   mov    r11d,DWORD PTR [rsp+0xb0]
  0x000000011a4d15bd:   mov    rsi,rax
  0x000000011a4d15c0:   jmp    0x000000011a4d15f0
  0x000000011a4d15c5:   cmp    edx,0x2e
  0x000000011a4d15c8:   mov    r11d,DWORD PTR [rsp+0xb0]
  0x000000011a4d15d0:   jne    0x000000011a4d1650
  0x000000011a4d15d6:   cmp    r11d,0xffffffff
  0x000000011a4d15da:   jne    0x000000011a4d1dc4
  0x000000011a4d15e0:   mov    r11d,DWORD PTR [rsp+0xb4]
  0x000000011a4d15e8:   mov    rsi,QWORD PTR [rsp+0xa8]
  0x000000011a4d15f0:   mov    ebx,DWORD PTR [rsp+0xb4]
  0x000000011a4d15f7:   inc    ebx
  0x000000011a4d15f9:   movabs rdi,0x13d4aa1e8
  0x000000011a4d1603:   mov    eax,DWORD PTR [rdi+0xc]
  0x000000011a4d1606:   add    eax,0x2
  0x000000011a4d1609:   mov    DWORD PTR [rdi+0xc],eax
  0x000000011a4d160c:   and    eax,0x7ffe
  0x000000011a4d1612:   cmp    eax,0x0
  0x000000011a4d1615:   je     0x000000011a4d1e15
  0x000000011a4d161b:   mov    r10,QWORD PTR [r15+0x348]    ; ImmutableOopMap {[184]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@82 (line 325)
  0x000000011a4d1622:   test   DWORD PTR [r10],eax          ;   {poll}
  0x000000011a4d1625:   mov    rax,rdx
  0x000000011a4d1628:   mov    r13,rsi
  0x000000011a4d162b:   mov    DWORD PTR [rsp+0xb0],r11d
  0x000000011a4d1633:   mov    QWORD PTR [rsp+0xa8],r13
  0x000000011a4d163b:   mov    r8d,DWORD PTR [rsp+0xc0]
  0x000000011a4d1643:   mov    rsi,QWORD PTR [rsp+0xb8]
  0x000000011a4d164b:   jmp    0x000000011a4d1528
  0x000000011a4d1650:   mov    r13,QWORD PTR [rsp+0xa8]
  0x000000011a4d1658:   mov    ebx,DWORD PTR [rsp+0xb4]
  0x000000011a4d165f:   jmp    0x000000011a4d1677
  0x000000011a4d1664:   mov    r11d,DWORD PTR [rsp+0xb0]
  0x000000011a4d166c:   mov    r13,QWORD PTR [rsp+0xa8]
  0x000000011a4d1674:   mov    rdx,rax
  0x000000011a4d1677:   cmp    r11d,0xffffffff
  0x000000011a4d167b:   mov    rsi,rbx
  0x000000011a4d167e:   jne    0x000000011a4d1698
  0x000000011a4d1684:   sub    esi,DWORD PTR [rsp+0xc4]
  0x000000011a4d168b:   mov    rdi,rbx
  0x000000011a4d168e:   mov    eax,0x0
  0x000000011a4d1693:   jmp    0x000000011a4d16ae
  0x000000011a4d1698:   sub    esi,DWORD PTR [rsp+0xc4]
  0x000000011a4d169f:   dec    esi
  0x000000011a4d16a1:   mov    rdi,r11
  0x000000011a4d16a4:   sub    edi,ebx
  0x000000011a4d16a6:   mov    rax,rdi
  0x000000011a4d16a9:   inc    eax
  0x000000011a4d16ab:   mov    rdi,r11
  0x000000011a4d16ae:   cmp    edx,0x65
  0x000000011a4d16b1:   je     0x000000011a4d16cf
  0x000000011a4d16b7:   cmp    edx,0x45
  0x000000011a4d16ba:   mov    edx,0x0
  0x000000011a4d16bf:   jne    0x000000011a4d16ca
  0x000000011a4d16c5:   mov    edx,0x1
  0x000000011a4d16ca:   jmp    0x000000011a4d16d4
  0x000000011a4d16cf:   mov    edx,0x1
  0x000000011a4d16d4:   cmp    edx,0x0
  0x000000011a4d16d7:   jne    0x000000011a4d170c
  0x000000011a4d16dd:   mov    rdx,rbx
  0x000000011a4d16e0:   movabs rcx,0x0
  0x000000011a4d16ea:   mov    DWORD PTR [rsp+0xdc],esi
  0x000000011a4d16f1:   mov    DWORD PTR [rsp+0xe0],edi
  0x000000011a4d16f8:   mov    QWORD PTR [rsp+0xa8],r13
  0x000000011a4d1700:   mov    DWORD PTR [rsp+0xb4],ebx
  0x000000011a4d1707:   jmp    0x000000011a4d19dc
  0x000000011a4d170c:   mov    rcx,rbx
  0x000000011a4d170f:   inc    ecx
  0x000000011a4d1711:   cmp    ecx,DWORD PTR [rsp+0xc0]
  0x000000011a4d1718:   jge    0x000000011a4d1769
  0x000000011a4d171e:   mov    DWORD PTR [rsp+0xdc],esi
  0x000000011a4d1725:   mov    DWORD PTR [rsp+0xe0],edi
  0x000000011a4d172c:   mov    DWORD PTR [rsp+0xd8],eax
  0x000000011a4d1733:   mov    QWORD PTR [rsp+0xa8],r13
  0x000000011a4d173b:   mov    DWORD PTR [rsp+0xb4],ebx
  0x000000011a4d1742:   mov    rdx,rcx
  0x000000011a4d1745:   mov    rsi,QWORD PTR [rsp+0xb8]
  0x000000011a4d174d:   mov    DWORD PTR [rsp+0xd4],ecx
  0x000000011a4d1754:   nop
  0x000000011a4d1755:   movabs rax,0x80000e4a0
  0x000000011a4d175f:   call   0x000000012193cfa0           ; ImmutableOopMap {[184]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@164 (line 353)
                                                            ;   {virtual_call}
  0x000000011a4d1764:   jmp    0x000000011a4d1799
  0x000000011a4d1769:   mov    DWORD PTR [rsp+0xd4],ecx
  0x000000011a4d1770:   mov    DWORD PTR [rsp+0xdc],esi
  0x000000011a4d1777:   mov    DWORD PTR [rsp+0xe0],edi
  0x000000011a4d177e:   mov    DWORD PTR [rsp+0xd8],eax
  0x000000011a4d1785:   mov    QWORD PTR [rsp+0xa8],r13
  0x000000011a4d178d:   mov    DWORD PTR [rsp+0xb4],ebx
  0x000000011a4d1794:   mov    eax,0x0
  0x000000011a4d1799:   cmp    eax,0x2d
  0x000000011a4d179c:   mov    edi,0x0
  0x000000011a4d17a1:   jne    0x000000011a4d17ac
  0x000000011a4d17a7:   mov    edi,0x1
  0x000000011a4d17ac:   cmp    eax,0x2d
  0x000000011a4d17af:   je     0x000000011a4d17d1
  0x000000011a4d17b5:   cmp    eax,0x2b
  0x000000011a4d17b8:   je     0x000000011a4d17d1
  0x000000011a4d17be:   mov    ecx,DWORD PTR [rsp+0xd4]
  0x000000011a4d17c5:   mov    DWORD PTR [rsp+0xe8],edi
  0x000000011a4d17cc:   jmp    0x000000011a4d1833
  0x000000011a4d17d1:   mov    ecx,DWORD PTR [rsp+0xd4]
  0x000000011a4d17d8:   inc    ecx
  0x000000011a4d17da:   cmp    ecx,DWORD PTR [rsp+0xc0]
  0x000000011a4d17e1:   jge    0x000000011a4d1819
  0x000000011a4d17e7:   mov    DWORD PTR [rsp+0xe8],edi
  0x000000011a4d17ee:   mov    rdx,rcx
  0x000000011a4d17f1:   mov    rsi,QWORD PTR [rsp+0xb8]
  0x000000011a4d17f9:   mov    DWORD PTR [rsp+0xe4],ecx
  0x000000011a4d1800:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011a4d1805:   movabs rax,0xffffffffffffffff
  0x000000011a4d180f:   call   0x0000000119eb2d80           ; ImmutableOopMap {[184]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@211 (line 356)
                                                            ;   {virtual_call}
  0x000000011a4d1814:   jmp    0x000000011a4d182c
  0x000000011a4d1819:   mov    DWORD PTR [rsp+0xe4],ecx
  0x000000011a4d1820:   mov    DWORD PTR [rsp+0xe8],edi
  0x000000011a4d1827:   mov    eax,0x0
  0x000000011a4d182c:   mov    ecx,DWORD PTR [rsp+0xe4]
  0x000000011a4d1833:   cmp    eax,0x30
  0x000000011a4d1836:   jl     0x000000011a4d1854
  0x000000011a4d183c:   cmp    eax,0x39
  0x000000011a4d183f:   mov    edx,0x0
  0x000000011a4d1844:   jg     0x000000011a4d184f
  0x000000011a4d184a:   mov    edx,0x1
  0x000000011a4d184f:   jmp    0x000000011a4d1859
  0x000000011a4d1854:   mov    edx,0x0
  0x000000011a4d1859:   and    edx,0x1
  0x000000011a4d185c:   cmp    edx,0x0
  0x000000011a4d185f:   je     0x000000011a4d1d9c
  0x000000011a4d1865:   mov    rsi,rax
  0x000000011a4d1868:   movabs rdi,0x0
  0x000000011a4d1872:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011a4d1878:   movabs rax,0x989680
  0x000000011a4d1882:   mov    rdx,rdi
  0x000000011a4d1885:   cmp    rdx,rax
  0x000000011a4d1888:   jge    0x000000011a4d18b8
  0x000000011a4d188e:   movabs rax,0xa
  0x000000011a4d1898:   mov    rdx,rax
  0x000000011a4d189b:   mov    rax,rdi
  0x000000011a4d189e:   imul   rax,rdx
  0x000000011a4d18a2:   movsxd rsi,esi
  0x000000011a4d18a5:   add    rax,rsi
  0x000000011a4d18a8:   movabs r10,0x30
  0x000000011a4d18b2:   sub    rax,r10
  0x000000011a4d18b5:   mov    rdi,rax
  0x000000011a4d18b8:   inc    ecx
  0x000000011a4d18ba:   cmp    ecx,DWORD PTR [rsp+0xc0]
  0x000000011a4d18c1:   jge    0x000000011a4d18f9
  0x000000011a4d18c7:   mov    QWORD PTR [rsp+0xf0],rdi
  0x000000011a4d18cf:   mov    rdx,rcx
  0x000000011a4d18d2:   mov    rsi,QWORD PTR [rsp+0xb8]
  0x000000011a4d18da:   mov    DWORD PTR [rsp+0xec],ecx
  0x000000011a4d18e1:   nop    DWORD PTR [rax+0x0]
  0x000000011a4d18e5:   movabs rax,0x80000e4a0
  0x000000011a4d18ef:   call   0x000000012193cfa0           ; ImmutableOopMap {[184]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@272 (line 366)
                                                            ;   {virtual_call}
  0x000000011a4d18f4:   jmp    0x000000011a4d190d
  0x000000011a4d18f9:   mov    DWORD PTR [rsp+0xec],ecx
  0x000000011a4d1900:   mov    QWORD PTR [rsp+0xf0],rdi
  0x000000011a4d1908:   mov    eax,0x0
  0x000000011a4d190d:   cmp    eax,0x30
  0x000000011a4d1910:   jl     0x000000011a4d192e
  0x000000011a4d1916:   cmp    eax,0x39
  0x000000011a4d1919:   mov    edx,0x0
  0x000000011a4d191e:   jg     0x000000011a4d1929
  0x000000011a4d1924:   mov    edx,0x1
  0x000000011a4d1929:   jmp    0x000000011a4d1933
  0x000000011a4d192e:   mov    edx,0x0
  0x000000011a4d1933:   and    edx,0x1
  0x000000011a4d1936:   cmp    edx,0x0
  0x000000011a4d1939:   mov    esi,0x2
  0x000000011a4d193e:   jne    0x000000011a4d1949
  0x000000011a4d1944:   mov    esi,0x0
  0x000000011a4d1949:   movabs rdi,0x13d4aa1e8
  0x000000011a4d1953:   mov    ebx,DWORD PTR [rdi+0xc]
  0x000000011a4d1956:   add    ebx,esi
  0x000000011a4d1958:   mov    DWORD PTR [rdi+0xc],ebx
  0x000000011a4d195b:   cmp    esi,0x0
  0x000000011a4d195e:   jne    0x000000011a4d1969
  0x000000011a4d1964:   mov    ebx,0x2
  0x000000011a4d1969:   and    ebx,0x7ffe
  0x000000011a4d196f:   cmp    ebx,0x0
  0x000000011a4d1972:   je     0x000000011a4d1e36
  0x000000011a4d1978:   mov    r10,QWORD PTR [r15+0x348]    ; ImmutableOopMap {[184]=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@288 (line 367)
  0x000000011a4d197f:   test   DWORD PTR [r10],eax          ;   {poll}
  0x000000011a4d1982:   cmp    edx,0x0
  0x000000011a4d1985:   je     0x000000011a4d19a2
  0x000000011a4d198b:   mov    rdi,QWORD PTR [rsp+0xf0]
  0x000000011a4d1993:   mov    rsi,rax
  0x000000011a4d1996:   mov    ecx,DWORD PTR [rsp+0xec]
  0x000000011a4d199d:   jmp    0x000000011a4d1878
  0x000000011a4d19a2:   mov    edi,DWORD PTR [rsp+0xe8]
  0x000000011a4d19a9:   cmp    edi,0x0
  0x000000011a4d19ac:   mov    rdi,QWORD PTR [rsp+0xf0]
  0x000000011a4d19b4:   je     0x000000011a4d19c3
  0x000000011a4d19ba:   mov    rdx,rdi
  0x000000011a4d19bd:   neg    rdx
  0x000000011a4d19c0:   mov    rdi,rdx
  0x000000011a4d19c3:   mov    edx,DWORD PTR [rsp+0xec]
  0x000000011a4d19ca:   mov    eax,DWORD PTR [rsp+0xd8]
  0x000000011a4d19d1:   movsxd rax,eax
  0x000000011a4d19d4:   add    rax,rdi
  0x000000011a4d19d7:   mov    eax,eax
  0x000000011a4d19d9:   mov    rcx,rdi
  0x000000011a4d19dc:   mov    QWORD PTR [rsp+0x100],rcx
  0x000000011a4d19e4:   mov    DWORD PTR [rsp+0xfc],eax
  0x000000011a4d19eb:   jmp    0x000000011a4d1a52
  0x000000011a4d19f0:   mov    rdi,rdx
  0x000000011a4d19f3:   mov    rdx,rdi
  0x000000011a4d19f6:   mov    rsi,QWORD PTR [rsp+0xb8]
  0x000000011a4d19fe:   mov    DWORD PTR [rsp+0xf8],edi
  0x000000011a4d1a05:   movabs rax,0xffffffffffffffff
  0x000000011a4d1a0f:   call   0x0000000119eb2d80           ; ImmutableOopMap {[184]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@9 (line 550)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@313 (line 376)
                                                            ;   {virtual_call}
  0x000000011a4d1a14:   cmp    eax,0x20
  0x000000011a4d1a17:   mov    edx,DWORD PTR [rsp+0xf8]
  0x000000011a4d1a1e:   jg     0x000000011a4d1a5b
  0x000000011a4d1a24:   inc    edx
  0x000000011a4d1a26:   movabs rsi,0x13d4aa1b0
  0x000000011a4d1a30:   mov    edi,DWORD PTR [rsi+0xc]
  0x000000011a4d1a33:   add    edi,0x2
  0x000000011a4d1a36:   mov    DWORD PTR [rsi+0xc],edi
  0x000000011a4d1a39:   and    edi,0x7ffe
  0x000000011a4d1a3f:   cmp    edi,0x0
  0x000000011a4d1a42:   je     0x000000011a4d1e57
  0x000000011a4d1a48:   mov    r10,QWORD PTR [r15+0x348]    ; ImmutableOopMap {[184]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@25 (line 549)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@313 (line 376)
  0x000000011a4d1a4f:   test   DWORD PTR [r10],eax          ;   {poll}
  0x000000011a4d1a52:   cmp    edx,DWORD PTR [rsp+0xc0]
  0x000000011a4d1a59:   jl     0x000000011a4d19f0
  0x000000011a4d1a5b:   cmp    edx,DWORD PTR [rsp+0xc0]
  0x000000011a4d1a62:   jl     0x000000011a4d1d72
  0x000000011a4d1a68:   mov    edi,DWORD PTR [rsp+0xc8]
  0x000000011a4d1a6f:   cmp    edi,0x0
  0x000000011a4d1a72:   je     0x000000011a4d1a8b
  0x000000011a4d1a78:   mov    DWORD PTR [rsp+0xf8],edx
  0x000000011a4d1a7f:   mov    esi,DWORD PTR [rsp+0xdc]
  0x000000011a4d1a86:   jmp    0x000000011a4d1adc
  0x000000011a4d1a8b:   mov    esi,DWORD PTR [rsp+0xdc]
  0x000000011a4d1a92:   cmp    esi,0x0
  0x000000011a4d1a95:   mov    DWORD PTR [rsp+0xf8],edx
  0x000000011a4d1a9c:   jne    0x000000011a4d1adc
  0x000000011a4d1aa2:   mov    DWORD PTR [rsp+0xdc],esi
  0x000000011a4d1aa9:   mov    edx,DWORD PTR [rsp+0xe0]
  0x000000011a4d1ab0:   mov    rsi,QWORD PTR [rsp+0xb8]
  0x000000011a4d1ab8:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011a4d1abd:   movabs rax,0xffffffffffffffff
  0x000000011a4d1ac7:   call   0x0000000119eb2d80           ; ImmutableOopMap {[184]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@335 (line 378)
                                                            ;   {virtual_call}
  0x000000011a4d1acc:   cmp    eax,0x2e
  0x000000011a4d1acf:   jne    0x000000011a4d1d72
  0x000000011a4d1ad5:   mov    esi,DWORD PTR [rsp+0xdc]
  0x000000011a4d1adc:   cmp    esi,0x13
  0x000000011a4d1adf:   jle    0x000000011a4d1c5d
  0x000000011a4d1ae5:   mov    edx,DWORD PTR [rsp+0xc4]
  0x000000011a4d1aec:   mov    edi,0x0
  0x000000011a4d1af1:   movabs rbx,0x0
  0x000000011a4d1afb:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011a4d1b00:   mov    DWORD PTR [rsp+0x108],edi
  0x000000011a4d1b07:   mov    QWORD PTR [rsp+0x110],rbx
  0x000000011a4d1b0f:   mov    ebx,DWORD PTR [rsp+0xb4]
  0x000000011a4d1b16:   cmp    edx,ebx
  0x000000011a4d1b18:   jge    0x000000011a4d1c2e
  0x000000011a4d1b1e:   mov    DWORD PTR [rsp+0xb4],ebx
  0x000000011a4d1b25:   mov    rcx,rdx
  0x000000011a4d1b28:   mov    rdx,rcx
  0x000000011a4d1b2b:   mov    rsi,QWORD PTR [rsp+0xb8]
  0x000000011a4d1b33:   mov    DWORD PTR [rsp+0x10c],ecx
  0x000000011a4d1b3a:   data16 xchg ax,ax
  0x000000011a4d1b3d:   movabs rax,0xffffffffffffffff
  0x000000011a4d1b47:   call   0x0000000119eb2d80           ; ImmutableOopMap {[184]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@376 (line 389)
                                                            ;   {virtual_call}
  0x000000011a4d1b4c:   cmp    eax,0x2e
  0x000000011a4d1b4f:   jne    0x000000011a4d1b6b
  0x000000011a4d1b55:   mov    edi,DWORD PTR [rsp+0x108]
  0x000000011a4d1b5c:   inc    edi
  0x000000011a4d1b5e:   mov    rbx,QWORD PTR [rsp+0x110]
  0x000000011a4d1b66:   jmp    0x000000011a4d1bd2
  0x000000011a4d1b6b:   mov    DWORD PTR [rsp+0x118],eax
  0x000000011a4d1b72:   mov    rsi,QWORD PTR [rsp+0x110]
  0x000000011a4d1b7a:   movabs rdx,0xde0b6b3a7640000
  0x000000011a4d1b84:   data16 xchg ax,ax
  0x000000011a4d1b87:   call   0x0000000119eb3080           ; ImmutableOopMap {[184]=Oop }
                                                            ;*invokestatic compareUnsigned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@401 (line 393)
                                                            ;   {static_call}
  0x000000011a4d1b8c:   cmp    eax,0x0
  0x000000011a4d1b8f:   jge    0x000000011a4d1c0c
  0x000000011a4d1b95:   mov    esi,DWORD PTR [rsp+0x118]
  0x000000011a4d1b9c:   movabs rax,0xa
  0x000000011a4d1ba6:   mov    rdx,rax
  0x000000011a4d1ba9:   mov    rax,QWORD PTR [rsp+0x110]
  0x000000011a4d1bb1:   imul   rax,rdx
  0x000000011a4d1bb5:   movsxd rsi,esi
  0x000000011a4d1bb8:   add    rax,rsi
  0x000000011a4d1bbb:   movabs r10,0x30
  0x000000011a4d1bc5:   sub    rax,r10
  0x000000011a4d1bc8:   mov    edi,DWORD PTR [rsp+0x108]
  0x000000011a4d1bcf:   mov    rbx,rax
  0x000000011a4d1bd2:   mov    edx,DWORD PTR [rsp+0x10c]
  0x000000011a4d1bd9:   inc    edx
  0x000000011a4d1bdb:   movabs rsi,0x13d4aa1e8
  0x000000011a4d1be5:   mov    ecx,DWORD PTR [rsi+0xc]
  0x000000011a4d1be8:   add    ecx,0x2
  0x000000011a4d1beb:   mov    DWORD PTR [rsi+0xc],ecx
  0x000000011a4d1bee:   and    ecx,0x7ffe
  0x000000011a4d1bf4:   cmp    ecx,0x0
  0x000000011a4d1bf7:   je     0x000000011a4d1e78
  0x000000011a4d1bfd:   mov    r10,QWORD PTR [r15+0x348]    ; ImmutableOopMap {[184]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@426 (line 388)
  0x000000011a4d1c04:   test   DWORD PTR [r10],eax          ;   {poll}
  0x000000011a4d1c07:   jmp    0x000000011a4d1b00
  0x000000011a4d1c0c:   mov    edi,DWORD PTR [rsp+0x108]
  0x000000011a4d1c13:   mov    rbx,QWORD PTR [rsp+0x110]
  0x000000011a4d1c1b:   mov    edx,DWORD PTR [rsp+0x10c]
  0x000000011a4d1c22:   mov    esi,DWORD PTR [rsp+0xb4]
  0x000000011a4d1c29:   jmp    0x000000011a4d1c40
  0x000000011a4d1c2e:   mov    edi,DWORD PTR [rsp+0x108]
  0x000000011a4d1c35:   mov    rsi,rbx
  0x000000011a4d1c38:   mov    rbx,QWORD PTR [rsp+0x110]
  0x000000011a4d1c40:   cmp    edx,esi
  0x000000011a4d1c42:   mov    esi,0x0
  0x000000011a4d1c47:   jge    0x000000011a4d1c52
  0x000000011a4d1c4d:   mov    esi,0x1
  0x000000011a4d1c52:   mov    rax,rdi
  0x000000011a4d1c55:   mov    r11,rsi
  0x000000011a4d1c58:   jmp    0x000000011a4d1c7a
  0x000000011a4d1c5d:   mov    edx,DWORD PTR [rsp+0xf8]
  0x000000011a4d1c64:   mov    r13,QWORD PTR [rsp+0xa8]
  0x000000011a4d1c6c:   mov    rbx,r13
  0x000000011a4d1c6f:   mov    eax,0x0
  0x000000011a4d1c74:   mov    r11d,0x0
  0x000000011a4d1c7a:   mov    r13,QWORD PTR [rsp+0x100]
  0x000000011a4d1c82:   mov    r8d,DWORD PTR [rsp+0xfc]
  0x000000011a4d1c8a:   mov    edi,DWORD PTR [rsp+0xe0]
  0x000000011a4d1c91:   mov    r9d,DWORD PTR [rsp+0xcc]
  0x000000011a4d1c99:   mov    rsi,rdx
  0x000000011a4d1c9c:   mov    rdx,r9
  0x000000011a4d1c9f:   mov    rcx,rbx
  0x000000011a4d1ca2:   mov    r9,rdi
  0x000000011a4d1ca5:   mov    rdi,r13
  0x000000011a4d1ca8:   mov    DWORD PTR [rsp],r11d
  0x000000011a4d1cac:   mov    DWORD PTR [rsp+0x8],eax
  0x000000011a4d1cb0:   nop    DWORD PTR [rax+0x0]
  0x000000011a4d1cb7:   call   0x000000011a4d1f85           ; ImmutableOopMap {[184]=Oop }
                                                            ;*invokestatic decFloatLiteralToDouble {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@463 (line 404)
                                                            ;   {static_call}
  0x000000011a4d1cbc:   vucomisd xmm0,xmm0
  0x000000011a4d1cc0:   mov    edx,0xffffffff
  0x000000011a4d1cc5:   jp     0x000000011a4d1cdf
  0x000000011a4d1ccb:   jb     0x000000011a4d1cdf
  0x000000011a4d1cd1:   mov    edx,0x0
  0x000000011a4d1cd6:   je     0x000000011a4d1cdf
  0x000000011a4d1cdc:   inc    rdx
  0x000000011a4d1cdf:   cmp    edx,0x0
  0x000000011a4d1ce2:   mov    edx,0x0
  0x000000011a4d1ce7:   je     0x000000011a4d1cf2
  0x000000011a4d1ced:   mov    edx,0x1
  0x000000011a4d1cf2:   and    edx,0x1
  0x000000011a4d1cf5:   cmp    edx,0x0
  0x000000011a4d1cf8:   je     0x000000011a4d1d5c
  0x000000011a4d1cfe:   mov    edx,DWORD PTR [rsp+0xd0]
  0x000000011a4d1d05:   mov    ecx,DWORD PTR [rsp+0xc0]
  0x000000011a4d1d0c:   mov    rsi,QWORD PTR [rsp+0xb8]
  0x000000011a4d1d14:   nop
  0x000000011a4d1d15:   movabs rax,0xffffffffffffffff
  0x000000011a4d1d1f:   call   0x0000000119eb2d80           ; ImmutableOopMap {}
                                                            ;*invokeinterface subSequence {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteralTheHardWay@3 (line 423)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@479 (line 405)
                                                            ;   {virtual_call}
  0x000000011a4d1d24:   mov    rsi,rax
  0x000000011a4d1d27:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011a4d1d2d:   movabs rax,0xffffffffffffffff
  0x000000011a4d1d37:   call   0x0000000119eb2d80           ; ImmutableOopMap {}
                                                            ;*invokeinterface toString {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteralTheHardWay@8 (line 423)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@479 (line 405)
                                                            ;   {virtual_call}
  0x000000011a4d1d3c:   mov    rsi,rax
  0x000000011a4d1d3f:   call   0x0000000119eb3080           ; ImmutableOopMap {}
                                                            ;*invokestatic readJavaFormatString {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.math.FloatingDecimal::parseDouble@1 (line 110)
                                                            ; - java.lang.Double::parseDouble@1 (line 651)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteralTheHardWay@13 (line 423)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@479 (line 405)
                                                            ;   {static_call}
  0x000000011a4d1d44:   mov    rsi,rax
  0x000000011a4d1d47:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011a4d1d4d:   movabs rax,0xffffffffffffffff
  0x000000011a4d1d57:   call   0x0000000119eb2d80           ; ImmutableOopMap {}
                                                            ;*invokeinterface doubleValue {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.math.FloatingDecimal::parseDouble@4 (line 110)
                                                            ; - java.lang.Double::parseDouble@1 (line 651)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteralTheHardWay@13 (line 423)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@479 (line 405)
                                                            ;   {virtual_call}
  0x000000011a4d1d5c:   add    rsp,0x130
  0x000000011a4d1d63:   pop    rbp
  0x000000011a4d1d64:   cmp    rsp,QWORD PTR [r15+0x340]    ;   {poll_return}
  0x000000011a4d1d6b:   ja     0x000000011a4d1e99
  0x000000011a4d1d71:   ret    
  0x000000011a4d1d72:   mov    rsi,QWORD PTR [rsp+0xb8]
  0x000000011a4d1d7a:   mov    edx,DWORD PTR [rsp+0xd0]
  0x000000011a4d1d81:   mov    ecx,DWORD PTR [rsp+0xc0]
  0x000000011a4d1d88:   nop    DWORD PTR [rax+0x0]
  0x000000011a4d1d8f:   call   0x0000000119eb3080           ; ImmutableOopMap {}
                                                            ;*invokestatic newNumberFormatException {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@348 (line 379)
                                                            ;   {static_call}
  0x000000011a4d1d94:   cmp    rax,QWORD PTR [rax]          ; implicit exception: dispatches to 0x000000011a4d1eaf
  0x000000011a4d1d97:   jmp    0x000000011a4d1edd
  0x000000011a4d1d9c:   mov    rsi,QWORD PTR [rsp+0xb8]
  0x000000011a4d1da4:   mov    edx,DWORD PTR [rsp+0xd0]
  0x000000011a4d1dab:   mov    ecx,DWORD PTR [rsp+0xc0]
  0x000000011a4d1db2:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011a4d1db7:   call   0x0000000119eb3080           ; ImmutableOopMap {}
                                                            ;*invokestatic newNumberFormatException {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@233 (line 359)
                                                            ;   {static_call}
  0x000000011a4d1dbc:   cmp    rax,QWORD PTR [rax]          ; implicit exception: dispatches to 0x000000011a4d1eb4
  0x000000011a4d1dbf:   jmp    0x000000011a4d1edd
  0x000000011a4d1dc4:   mov    r8d,DWORD PTR [rsp+0xc0]
  0x000000011a4d1dcc:   mov    ecx,DWORD PTR [rsp+0xd0]
  0x000000011a4d1dd3:   mov    rsi,QWORD PTR [rsp+0xb8]
  0x000000011a4d1ddb:   mov    rdx,rcx
  0x000000011a4d1dde:   mov    rcx,r8
  0x000000011a4d1de1:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011a4d1de7:   call   0x0000000119eb3080           ; ImmutableOopMap {}
                                                            ;*invokestatic newNumberFormatException {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@72 (line 332)
                                                            ;   {static_call}
  0x000000011a4d1dec:   cmp    rax,QWORD PTR [rax]          ; implicit exception: dispatches to 0x000000011a4d1eb9
  0x000000011a4d1def:   jmp    0x000000011a4d1edd
  0x000000011a4d1df4:   movabs r10,0x13d4a9358              ;   {metadata({method} {0x000000013d4a9358} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011a4d1dfe:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011a4d1e03:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011a4d1e0b:   call   0x0000000119f5e180           ; ImmutableOopMap {rsi=Oop [184]=Oop }
                                                            ;*synchronization entry
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@-1 (line 319)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011a4d1e10:   jmp    0x000000011a4d14fe
  0x000000011a4d1e15:   movabs r10,0x13d4a9358              ;   {metadata({method} {0x000000013d4a9358} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011a4d1e1f:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011a4d1e24:   mov    QWORD PTR [rsp],0x52
  0x000000011a4d1e2c:   call   0x0000000119f5e180           ; ImmutableOopMap {[184]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@82 (line 325)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011a4d1e31:   jmp    0x000000011a4d161b
  0x000000011a4d1e36:   movabs r10,0x13d4a9358              ;   {metadata({method} {0x000000013d4a9358} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011a4d1e40:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011a4d1e45:   mov    QWORD PTR [rsp],0x120
  0x000000011a4d1e4d:   call   0x0000000119f5e180           ; ImmutableOopMap {[184]=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@288 (line 367)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011a4d1e52:   jmp    0x000000011a4d1978
  0x000000011a4d1e57:   movabs r10,0x13d4a9ac0              ;   {metadata({method} {0x000000013d4a9ac0} 'skipWhitespace' '(Ljava/lang/CharSequence;II)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011a4d1e61:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011a4d1e66:   mov    QWORD PTR [rsp],0x19
  0x000000011a4d1e6e:   call   0x0000000119f5e180           ; ImmutableOopMap {[184]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@25 (line 549)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@313 (line 376)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011a4d1e73:   jmp    0x000000011a4d1a48
  0x000000011a4d1e78:   movabs r10,0x13d4a9358              ;   {metadata({method} {0x000000013d4a9358} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011a4d1e82:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011a4d1e87:   mov    QWORD PTR [rsp],0x1aa
  0x000000011a4d1e8f:   call   0x0000000119f5e180           ; ImmutableOopMap {[184]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@426 (line 388)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011a4d1e94:   jmp    0x000000011a4d1bfd
  0x000000011a4d1e99:   movabs r10,0x11a4d1d64              ;   {internal_word}
  0x000000011a4d1ea3:   mov    QWORD PTR [r15+0x358],r10
  0x000000011a4d1eaa:   jmp    0x0000000119eb9100           ;   {runtime_call SafepointBlob}
  0x000000011a4d1eaf:   call   0x0000000119f584a0           ; ImmutableOopMap {rax=Oop }
                                                            ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@351 (line 379)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011a4d1eb4:   call   0x0000000119f584a0           ; ImmutableOopMap {rax=Oop }
                                                            ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@236 (line 359)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011a4d1eb9:   call   0x0000000119f584a0           ; ImmutableOopMap {rax=Oop }
                                                            ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@75 (line 332)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011a4d1ebe:   nop
  0x000000011a4d1ebf:   nop
  0x000000011a4d1ec0:   mov    rax,QWORD PTR [r15+0x3d0]
  0x000000011a4d1ec7:   mov    QWORD PTR [r15+0x3d0],0x0
  0x000000011a4d1ed2:   mov    QWORD PTR [r15+0x3d8],0x0
  0x000000011a4d1edd:   add    rsp,0x130
  0x000000011a4d1ee4:   pop    rbp
  0x000000011a4d1ee5:   jmp    0x0000000119f57280           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011a4d1eea:   hlt    
  0x000000011a4d1eeb:   hlt    
  0x000000011a4d1eec:   hlt    
  0x000000011a4d1eed:   hlt    
  0x000000011a4d1eee:   hlt    
  0x000000011a4d1eef:   hlt    
  0x000000011a4d1ef0:   hlt    
  0x000000011a4d1ef1:   hlt    
  0x000000011a4d1ef2:   hlt    
  0x000000011a4d1ef3:   hlt    
  0x000000011a4d1ef4:   hlt    
  0x000000011a4d1ef5:   hlt    
  0x000000011a4d1ef6:   hlt    
  0x000000011a4d1ef7:   hlt    
  0x000000011a4d1ef8:   hlt    
  0x000000011a4d1ef9:   hlt    
  0x000000011a4d1efa:   hlt    
  0x000000011a4d1efb:   hlt    
  0x000000011a4d1efc:   hlt    
  0x000000011a4d1efd:   hlt    
  0x000000011a4d1efe:   hlt    
  0x000000011a4d1eff:   hlt    
[Stub Code]
  0x000000011a4d1f00:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x000000011a4d1f05:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011a4d1f0f:   jmp    0x000000011a4d1f0f           ;   {runtime_call const_jargs+-267182177}
  0x000000011a4d1f14:   nop
  0x000000011a4d1f15:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011a4d1f1f:   jmp    0x000000011a4d1f1f           ;   {runtime_call const_jargs+-267182177}
  0x000000011a4d1f24:   nop
  0x000000011a4d1f25:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011a4d1f2f:   jmp    0x000000011a4d1f2f           ;   {runtime_call const_jargs+-267182177}
  0x000000011a4d1f34:   nop
  0x000000011a4d1f35:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011a4d1f3f:   jmp    0x000000011a4d1f3f           ;   {runtime_call const_jargs+-267182177}
  0x000000011a4d1f44:   nop
  0x000000011a4d1f45:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011a4d1f4f:   jmp    0x000000011a4d1f4f           ;   {runtime_call const_jargs+-267182177}
  0x000000011a4d1f54:   nop
  0x000000011a4d1f55:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011a4d1f5f:   jmp    0x000000011a4d1f5f           ;   {runtime_call const_jargs+-267182177}
  0x000000011a4d1f64:   nop
  0x000000011a4d1f65:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011a4d1f6f:   jmp    0x000000011a4d1f6f           ;   {runtime_call const_jargs+-267182177}
  0x000000011a4d1f74:   nop
  0x000000011a4d1f75:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011a4d1f7f:   jmp    0x000000011a4d1f7f           ;   {runtime_call const_jargs+-267182177}
  0x000000011a4d1f84:   nop
  0x000000011a4d1f85:   movabs rbx,0x13d4b5670              ;   {static_stub}
  0x000000011a4d1f8f:   jmp    0x0000000119f84a01           ;   {runtime_call I2C/C2I adapters}
  0x000000011a4d1f94:   nop
  0x000000011a4d1f95:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011a4d1f9f:   jmp    0x000000011a4d1f9f           ;   {runtime_call const_jargs+-267182177}
  0x000000011a4d1fa4:   nop
  0x000000011a4d1fa5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011a4d1faf:   jmp    0x000000011a4d1faf           ;   {runtime_call const_jargs+-267182177}
  0x000000011a4d1fb4:   nop
  0x000000011a4d1fb5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011a4d1fbf:   jmp    0x000000011a4d1fbf           ;   {runtime_call const_jargs+-267182177}
  0x000000011a4d1fc4:   nop
  0x000000011a4d1fc5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011a4d1fcf:   jmp    0x000000011a4d1fcf           ;   {runtime_call const_jargs+-267182177}
  0x000000011a4d1fd4:   nop
  0x000000011a4d1fd5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011a4d1fdf:   jmp    0x000000011a4d1fdf           ;   {runtime_call const_jargs+-267182177}
  0x000000011a4d1fe4:   nop
  0x000000011a4d1fe5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011a4d1fef:   jmp    0x000000011a4d1fef           ;   {runtime_call const_jargs+-267182177}
  0x000000011a4d1ff4:   nop
  0x000000011a4d1ff5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011a4d1fff:   jmp    0x000000011a4d1fff           ;   {runtime_call const_jargs+-267182177}
[Exception Handler]
  0x000000011a4d2004:   call   0x0000000119f5ab80           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011a4d2009:   movabs rdi,0x1121cbe43              ;   {external_word}
  0x000000011a4d2013:   and    rsp,0xfffffffffffffff0
  0x000000011a4d2017:   call   0x0000000111e6ec50           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011a4d201c:   hlt    
[Deopt Handler Code]
  0x000000011a4d201d:   movabs r10,0x11a4d201d              ;   {section_word}
  0x000000011a4d2027:   push   r10
  0x000000011a4d2029:   jmp    0x0000000119eb83a0           ;   {runtime_call DeoptimizationBlob}
  0x000000011a4d202e:   hlt    
  0x000000011a4d202f:   hlt    
--------------------------------------------------------------------------------

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     430  583       2       ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace (30 bytes)
 total in heap  [0x000000011a4d2690,0x000000011a4d2a70] = 992
 relocation     [0x000000011a4d27f0,0x000000011a4d2830] = 64
 main code      [0x000000011a4d2840,0x000000011a4d2980] = 320
 stub code      [0x000000011a4d2980,0x000000011a4d29c0] = 64
 oops           [0x000000011a4d29c0,0x000000011a4d29c8] = 8
 metadata       [0x000000011a4d29c8,0x000000011a4d29d0] = 8
 scopes data    [0x000000011a4d29d0,0x000000011a4d2a08] = 56
 scopes pcs     [0x000000011a4d2a08,0x000000011a4d2a68] = 96
 dependencies   [0x000000011a4d2a68,0x000000011a4d2a70] = 8

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013d4a9ac0} 'skipWhitespace' '(Ljava/lang/CharSequence;II)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser'
  # parm0:    rsi:rsi   = 'java/lang/CharSequence'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x50]  (sp of caller)
  0x000000011a4d2840:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011a4d2847:   push   rbp
  0x000000011a4d2848:   sub    rsp,0x40
  0x000000011a4d284c:   mov    QWORD PTR [rsp+0x28],rsi
  0x000000011a4d2851:   mov    DWORD PTR [rsp+0x24],ecx
  0x000000011a4d2855:   movabs rdi,0x13d4aa1b0
  0x000000011a4d285f:   mov    ebx,DWORD PTR [rdi+0x8]
  0x000000011a4d2862:   add    ebx,0x2
  0x000000011a4d2865:   mov    DWORD PTR [rdi+0x8],ebx
  0x000000011a4d2868:   and    ebx,0xffe
  0x000000011a4d286e:   cmp    ebx,0x0
  0x000000011a4d2871:   je     0x000000011a4d2902
  0x000000011a4d2877:   jmp    0x000000011a4d28e8
  0x000000011a4d287c:   nop    DWORD PTR [rax+0x0]
  0x000000011a4d2880:   mov    rdi,rdx
  0x000000011a4d2883:   mov    rdx,rdi
  0x000000011a4d2886:   mov    rbx,rsi
  0x000000011a4d2889:   mov    rsi,rbx
  0x000000011a4d288c:   mov    DWORD PTR [rsp+0x20],edi
  0x000000011a4d2890:   nop    DWORD PTR [rax+rax*1+0x0]
  0x000000011a4d2895:   movabs rax,0x80000e4a0
  0x000000011a4d289f:   call   0x000000012193cfa0           ; ImmutableOopMap {[40]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@9 (line 550)
                                                            ;   {virtual_call}
  0x000000011a4d28a4:   cmp    eax,0x20
  0x000000011a4d28a7:   mov    edx,DWORD PTR [rsp+0x20]
  0x000000011a4d28ab:   jg     0x000000011a4d28ec
  0x000000011a4d28b1:   inc    edx
  0x000000011a4d28b3:   movabs rax,0x13d4aa1b0
  0x000000011a4d28bd:   mov    esi,DWORD PTR [rax+0xc]
  0x000000011a4d28c0:   add    esi,0x2
  0x000000011a4d28c3:   mov    DWORD PTR [rax+0xc],esi
  0x000000011a4d28c6:   and    esi,0x7ffe
  0x000000011a4d28cc:   cmp    esi,0x0
  0x000000011a4d28cf:   je     0x000000011a4d2923
  0x000000011a4d28d5:   mov    r10,QWORD PTR [r15+0x348]    ; ImmutableOopMap {[40]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@25 (line 549)
  0x000000011a4d28dc:   test   DWORD PTR [r10],eax          ;   {poll}
  0x000000011a4d28df:   mov    ecx,DWORD PTR [rsp+0x24]
  0x000000011a4d28e3:   mov    rsi,QWORD PTR [rsp+0x28]
  0x000000011a4d28e8:   cmp    edx,ecx
  0x000000011a4d28ea:   jl     0x000000011a4d2880
  0x000000011a4d28ec:   mov    rax,rdx
  0x000000011a4d28ef:   add    rsp,0x40
  0x000000011a4d28f3:   pop    rbp
  0x000000011a4d28f4:   cmp    rsp,QWORD PTR [r15+0x340]    ;   {poll_return}
  0x000000011a4d28fb:   ja     0x000000011a4d2941
  0x000000011a4d2901:   ret    
  0x000000011a4d2902:   movabs r10,0x13d4a9ac0              ;   {metadata({method} {0x000000013d4a9ac0} 'skipWhitespace' '(Ljava/lang/CharSequence;II)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011a4d290c:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011a4d2911:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011a4d2919:   call   0x0000000119f5e180           ; ImmutableOopMap {rsi=Oop [40]=Oop }
                                                            ;*synchronization entry
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@-1 (line 548)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011a4d291e:   jmp    0x000000011a4d2877
  0x000000011a4d2923:   movabs r10,0x13d4a9ac0              ;   {metadata({method} {0x000000013d4a9ac0} 'skipWhitespace' '(Ljava/lang/CharSequence;II)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011a4d292d:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011a4d2932:   mov    QWORD PTR [rsp],0x19
  0x000000011a4d293a:   call   0x0000000119f5e180           ; ImmutableOopMap {[40]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@25 (line 549)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011a4d293f:   jmp    0x000000011a4d28d5
  0x000000011a4d2941:   movabs r10,0x11a4d28f4              ;   {internal_word}
  0x000000011a4d294b:   mov    QWORD PTR [r15+0x358],r10
  0x000000011a4d2952:   jmp    0x0000000119eb9100           ;   {runtime_call SafepointBlob}
  0x000000011a4d2957:   nop
  0x000000011a4d2958:   nop
  0x000000011a4d2959:   mov    rax,QWORD PTR [r15+0x3d0]
  0x000000011a4d2960:   mov    QWORD PTR [r15+0x3d0],0x0
  0x000000011a4d296b:   mov    QWORD PTR [r15+0x3d8],0x0
  0x000000011a4d2976:   add    rsp,0x40
  0x000000011a4d297a:   pop    rbp
  0x000000011a4d297b:   jmp    0x0000000119f57280           ;   {runtime_call unwind_exception Runtime1 stub}
[Stub Code]
  0x000000011a4d2980:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x000000011a4d2985:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011a4d298f:   jmp    0x000000011a4d298f           ;   {runtime_call const_jargs+-267182177}
[Exception Handler]
  0x000000011a4d2994:   call   0x0000000119f5ab80           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011a4d2999:   movabs rdi,0x1121cbe43              ;   {external_word}
  0x000000011a4d29a3:   and    rsp,0xfffffffffffffff0
  0x000000011a4d29a7:   call   0x0000000111e6ec50           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011a4d29ac:   hlt    
[Deopt Handler Code]
  0x000000011a4d29ad:   movabs r10,0x11a4d29ad              ;   {section_word}
  0x000000011a4d29b7:   push   r10
  0x000000011a4d29b9:   jmp    0x0000000119eb83a0           ;   {runtime_call DeoptimizationBlob}
  0x000000011a4d29be:   hlt    
  0x000000011a4d29bf:   hlt    
--------------------------------------------------------------------------------

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     433  585       2       ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble (12 bytes)
 total in heap  [0x000000011a4d3190,0x000000011a4d34f8] = 872
 relocation     [0x000000011a4d32f0,0x000000011a4d3330] = 64
 main code      [0x000000011a4d3340,0x000000011a4d3420] = 224
 stub code      [0x000000011a4d3420,0x000000011a4d3470] = 80
 oops           [0x000000011a4d3470,0x000000011a4d3478] = 8
 metadata       [0x000000011a4d3478,0x000000011a4d3480] = 8
 scopes data    [0x000000011a4d3480,0x000000011a4d34a0] = 32
 scopes pcs     [0x000000011a4d34a0,0x000000011a4d34f0] = 80
 dependencies   [0x000000011a4d34f0,0x000000011a4d34f8] = 8

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013d4a8b10} 'parseDouble' '(Ljava/lang/CharSequence;)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser'
  # parm0:    rsi:rsi   = 'java/lang/CharSequence'
  #           [sp+0x40]  (sp of caller)
  0x000000011a4d3340:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011a4d3347:   push   rbp
  0x000000011a4d3348:   sub    rsp,0x30
  0x000000011a4d334c:   movabs rdi,0x13d4aa140
  0x000000011a4d3356:   mov    ebx,DWORD PTR [rdi+0x8]
  0x000000011a4d3359:   add    ebx,0x2
  0x000000011a4d335c:   mov    DWORD PTR [rdi+0x8],ebx
  0x000000011a4d335f:   and    ebx,0xffe
  0x000000011a4d3365:   cmp    ebx,0x0
  0x000000011a4d3368:   je     0x000000011a4d33b7
  0x000000011a4d336e:   mov    rdi,rsi
  0x000000011a4d3371:   mov    rsi,rdi
  0x000000011a4d3374:   mov    QWORD PTR [rsp+0x20],rdi
  0x000000011a4d3379:   nop    DWORD PTR [rax+0x0]
  0x000000011a4d337d:   movabs rax,0xffffffffffffffff
  0x000000011a4d3387:   call   0x0000000119eb2d80           ; ImmutableOopMap {[32]=Oop }
                                                            ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@3 (line 99)
                                                            ;   {virtual_call}
  0x000000011a4d338c:   mov    rsi,QWORD PTR [rsp+0x20]
  0x000000011a4d3391:   mov    edx,0x0
  0x000000011a4d3396:   mov    rcx,rax
  0x000000011a4d3399:   nop    WORD PTR [rax+rax*1+0x0]
  0x000000011a4d339f:   call   0x0000000119eb3080           ; ImmutableOopMap {}
                                                            ;*invokestatic parseDouble {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@8 (line 99)
                                                            ;   {static_call}
  0x000000011a4d33a4:   add    rsp,0x30
  0x000000011a4d33a8:   pop    rbp
  0x000000011a4d33a9:   cmp    rsp,QWORD PTR [r15+0x340]    ;   {poll_return}
  0x000000011a4d33b0:   ja     0x000000011a4d33d5
  0x000000011a4d33b6:   ret    
  0x000000011a4d33b7:   movabs r10,0x13d4a8b10              ;   {metadata({method} {0x000000013d4a8b10} 'parseDouble' '(Ljava/lang/CharSequence;)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011a4d33c1:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011a4d33c6:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011a4d33ce:   call   0x0000000119f5e180           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@-1 (line 99)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011a4d33d3:   jmp    0x000000011a4d336e
  0x000000011a4d33d5:   movabs r10,0x11a4d33a9              ;   {internal_word}
  0x000000011a4d33df:   mov    QWORD PTR [r15+0x358],r10
  0x000000011a4d33e6:   jmp    0x0000000119eb9100           ;   {runtime_call SafepointBlob}
  0x000000011a4d33eb:   nop
  0x000000011a4d33ec:   nop
  0x000000011a4d33ed:   mov    rax,QWORD PTR [r15+0x3d0]
  0x000000011a4d33f4:   mov    QWORD PTR [r15+0x3d0],0x0
  0x000000011a4d33ff:   mov    QWORD PTR [r15+0x3d8],0x0
  0x000000011a4d340a:   add    rsp,0x30
  0x000000011a4d340e:   pop    rbp
  0x000000011a4d340f:   jmp    0x0000000119f57280           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011a4d3414:   hlt    
  0x000000011a4d3415:   hlt    
  0x000000011a4d3416:   hlt    
  0x000000011a4d3417:   hlt    
  0x000000011a4d3418:   hlt    
  0x000000011a4d3419:   hlt    
  0x000000011a4d341a:   hlt    
  0x000000011a4d341b:   hlt    
  0x000000011a4d341c:   hlt    
  0x000000011a4d341d:   hlt    
  0x000000011a4d341e:   hlt    
  0x000000011a4d341f:   hlt    
[Stub Code]
  0x000000011a4d3420:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x000000011a4d3425:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011a4d342f:   jmp    0x000000011a4d342f           ;   {runtime_call const_jargs+-267182177}
  0x000000011a4d3434:   nop
  0x000000011a4d3435:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011a4d343f:   jmp    0x000000011a4d343f           ;   {runtime_call const_jargs+-267182177}
[Exception Handler]
  0x000000011a4d3444:   call   0x0000000119f5ab80           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011a4d3449:   movabs rdi,0x1121cbe43              ;   {external_word}
  0x000000011a4d3453:   and    rsp,0xfffffffffffffff0
  0x000000011a4d3457:   call   0x0000000111e6ec50           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011a4d345c:   hlt    
[Deopt Handler Code]
  0x000000011a4d345d:   movabs r10,0x11a4d345d              ;   {section_word}
  0x000000011a4d3467:   push   r10
  0x000000011a4d3469:   jmp    0x0000000119eb83a0           ;   {runtime_call DeoptimizationBlob}
  0x000000011a4d346e:   hlt    
  0x000000011a4d346f:   hlt    
--------------------------------------------------------------------------------

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     437  586       2       ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble (213 bytes)
 total in heap  [0x000000011a4d3510,0x000000011a4d3ed0] = 2496
 relocation     [0x000000011a4d3670,0x000000011a4d3748] = 216
 main code      [0x000000011a4d3760,0x000000011a4d3ba0] = 1088
 stub code      [0x000000011a4d3ba0,0x000000011a4d3c70] = 208
 oops           [0x000000011a4d3c70,0x000000011a4d3c78] = 8
 metadata       [0x000000011a4d3c78,0x000000011a4d3c88] = 16
 scopes data    [0x000000011a4d3c88,0x000000011a4d3d80] = 248
 scopes pcs     [0x000000011a4d3d80,0x000000011a4d3eb0] = 304
 dependencies   [0x000000011a4d3eb0,0x000000011a4d3eb8] = 8
 nul chk table  [0x000000011a4d3eb8,0x000000011a4d3ed0] = 24

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013d4a8cf0} 'parseDouble' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser'
  # parm0:    rsi:rsi   = 'java/lang/CharSequence'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0xa0]  (sp of caller)
  0x000000011a4d3760:   mov    DWORD PTR [rsp-0x14000],eax
  0x000000011a4d3767:   push   rbp
  0x000000011a4d3768:   sub    rsp,0x90
  0x000000011a4d376f:   mov    QWORD PTR [rsp+0x58],rsi
  0x000000011a4d3774:   mov    DWORD PTR [rsp+0x60],edx
  0x000000011a4d3778:   movabs rdi,0x13d4aa178
  0x000000011a4d3782:   mov    ebx,DWORD PTR [rdi+0x8]
  0x000000011a4d3785:   add    ebx,0x2
  0x000000011a4d3788:   mov    DWORD PTR [rdi+0x8],ebx
  0x000000011a4d378b:   and    ebx,0xffe
  0x000000011a4d3791:   cmp    ebx,0x0
  0x000000011a4d3794:   je     0x000000011a4d3aa6
  0x000000011a4d379a:   add    ecx,edx
  0x000000011a4d379c:   mov    DWORD PTR [rsp+0x54],ecx
  0x000000011a4d37a0:   mov    rdi,rdx
  0x000000011a4d37a3:   jmp    0x000000011a4d3808
  0x000000011a4d37a8:   mov    rdx,rdi
  0x000000011a4d37ab:   mov    rax,rsi
  0x000000011a4d37ae:   mov    rsi,rax
  0x000000011a4d37b1:   mov    DWORD PTR [rsp+0x50],edi
  0x000000011a4d37b5:   movabs rax,0x80000e4a0
  0x000000011a4d37bf:   call   0x000000012193cfa0           ; ImmutableOopMap {[88]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@9 (line 550)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@7 (line 221)
                                                            ;   {virtual_call}
  0x000000011a4d37c4:   cmp    eax,0x20
  0x000000011a4d37c7:   mov    edi,DWORD PTR [rsp+0x50]
  0x000000011a4d37cb:   jg     0x000000011a4d380c
  0x000000011a4d37d1:   inc    edi
  0x000000011a4d37d3:   movabs rdx,0x13d4aa1b0
  0x000000011a4d37dd:   mov    esi,DWORD PTR [rdx+0xc]
  0x000000011a4d37e0:   add    esi,0x2
  0x000000011a4d37e3:   mov    DWORD PTR [rdx+0xc],esi
  0x000000011a4d37e6:   and    esi,0x7ffe
  0x000000011a4d37ec:   cmp    esi,0x0
  0x000000011a4d37ef:   je     0x000000011a4d3ac7
  0x000000011a4d37f5:   mov    r10,QWORD PTR [r15+0x348]    ; ImmutableOopMap {[88]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@25 (line 549)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@7 (line 221)
  0x000000011a4d37fc:   test   DWORD PTR [r10],eax          ;   {poll}
  0x000000011a4d37ff:   mov    ecx,DWORD PTR [rsp+0x54]
  0x000000011a4d3803:   mov    rsi,QWORD PTR [rsp+0x58]
  0x000000011a4d3808:   cmp    edi,ecx
  0x000000011a4d380a:   jl     0x000000011a4d37a8
  0x000000011a4d380c:   cmp    edi,DWORD PTR [rsp+0x54]
  0x000000011a4d3810:   je     0x000000011a4d3a1c
  0x000000011a4d3816:   mov    rdx,rdi
  0x000000011a4d3819:   mov    rsi,QWORD PTR [rsp+0x58]
  0x000000011a4d381e:   mov    DWORD PTR [rsp+0x50],edi
  0x000000011a4d3822:   data16 xchg ax,ax
  0x000000011a4d3825:   movabs rax,0x80000e4a0
  0x000000011a4d382f:   call   0x000000012193cfa0           ; ImmutableOopMap {[88]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@31 (line 225)
                                                            ;   {virtual_call}
  0x000000011a4d3834:   cmp    eax,0x2d
  0x000000011a4d3837:   mov    edi,0x0
  0x000000011a4d383c:   jne    0x000000011a4d3847
  0x000000011a4d3842:   mov    edi,0x1
  0x000000011a4d3847:   cmp    eax,0x2d
  0x000000011a4d384a:   je     0x000000011a4d3866
  0x000000011a4d3850:   cmp    eax,0x2b
  0x000000011a4d3853:   je     0x000000011a4d3866
  0x000000011a4d3859:   mov    ebx,DWORD PTR [rsp+0x50]
  0x000000011a4d385d:   mov    DWORD PTR [rsp+0x68],edi
  0x000000011a4d3861:   jmp    0x000000011a4d38bb
  0x000000011a4d3866:   mov    edx,DWORD PTR [rsp+0x50]
  0x000000011a4d386a:   mov    rbx,rdx
  0x000000011a4d386d:   inc    ebx
  0x000000011a4d386f:   cmp    ebx,DWORD PTR [rsp+0x54]
  0x000000011a4d3873:   jge    0x000000011a4d38a1
  0x000000011a4d3879:   mov    DWORD PTR [rsp+0x68],edi
  0x000000011a4d387d:   mov    rdx,rbx
  0x000000011a4d3880:   mov    rsi,QWORD PTR [rsp+0x58]
  0x000000011a4d3885:   mov    DWORD PTR [rsp+0x64],ebx
  0x000000011a4d3889:   nop    DWORD PTR [rax+0x0]
  0x000000011a4d388d:   movabs rax,0xffffffffffffffff
  0x000000011a4d3897:   call   0x0000000119eb2d80           ; ImmutableOopMap {[88]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@76 (line 231)
                                                            ;   {virtual_call}
  0x000000011a4d389c:   jmp    0x000000011a4d38ae
  0x000000011a4d38a1:   mov    DWORD PTR [rsp+0x64],ebx
  0x000000011a4d38a5:   mov    DWORD PTR [rsp+0x68],edi
  0x000000011a4d38a9:   mov    eax,0x0
  0x000000011a4d38ae:   cmp    eax,0x0
  0x000000011a4d38b1:   je     0x000000011a4d3a02
  0x000000011a4d38b7:   mov    ebx,DWORD PTR [rsp+0x64]
  0x000000011a4d38bb:   cmp    eax,0x4e
  0x000000011a4d38be:   je     0x000000011a4d39da
  0x000000011a4d38c4:   cmp    eax,0x49
  0x000000011a4d38c7:   je     0x000000011a4d39aa
  0x000000011a4d38cd:   cmp    eax,0x30
  0x000000011a4d38d0:   mov    edi,0x0
  0x000000011a4d38d5:   jne    0x000000011a4d38e0
  0x000000011a4d38db:   mov    edi,0x1
  0x000000011a4d38e0:   cmp    eax,0x30
  0x000000011a4d38e3:   jne    0x000000011a4d3940
  0x000000011a4d38e9:   inc    ebx
  0x000000011a4d38eb:   cmp    ebx,DWORD PTR [rsp+0x54]
  0x000000011a4d38ef:   jge    0x000000011a4d3919
  0x000000011a4d38f5:   mov    DWORD PTR [rsp+0x70],edi
  0x000000011a4d38f9:   mov    rdx,rbx
  0x000000011a4d38fc:   mov    rsi,QWORD PTR [rsp+0x58]
  0x000000011a4d3901:   mov    DWORD PTR [rsp+0x6c],ebx
  0x000000011a4d3905:   movabs rax,0xffffffffffffffff
  0x000000011a4d390f:   call   0x0000000119eb2d80           ; ImmutableOopMap {[88]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@162 (line 249)
                                                            ;   {virtual_call}
  0x000000011a4d3914:   jmp    0x000000011a4d3926
  0x000000011a4d3919:   mov    DWORD PTR [rsp+0x6c],ebx
  0x000000011a4d391d:   mov    DWORD PTR [rsp+0x70],edi
  0x000000011a4d3921:   mov    eax,0x0
  0x000000011a4d3926:   cmp    eax,0x78
  0x000000011a4d3929:   je     0x000000011a4d3972
  0x000000011a4d392f:   cmp    eax,0x58
  0x000000011a4d3932:   je     0x000000011a4d3972
  0x000000011a4d3938:   mov    ebx,DWORD PTR [rsp+0x6c]
  0x000000011a4d393c:   mov    edi,DWORD PTR [rsp+0x70]
  0x000000011a4d3940:   mov    rsi,QWORD PTR [rsp+0x58]
  0x000000011a4d3945:   mov    rdx,rbx
  0x000000011a4d3948:   mov    ecx,DWORD PTR [rsp+0x60]
  0x000000011a4d394c:   mov    r8d,DWORD PTR [rsp+0x54]
  0x000000011a4d3951:   mov    r9d,DWORD PTR [rsp+0x68]
  0x000000011a4d3956:   nop
  0x000000011a4d3957:   call   0x000000011a4d14a0           ; ImmutableOopMap {}
                                                            ;*invokestatic parseRestOfDecimalFloatLiteral {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@209 (line 255)
                                                            ;   {static_call}
  0x000000011a4d395c:   add    rsp,0x90
  0x000000011a4d3963:   pop    rbp
  0x000000011a4d3964:   cmp    rsp,QWORD PTR [r15+0x340]    ;   {poll_return}
  0x000000011a4d396b:   ja     0x000000011a4d3ae8
  0x000000011a4d3971:   ret    
  0x000000011a4d3972:   mov    ebx,DWORD PTR [rsp+0x6c]
  0x000000011a4d3976:   inc    ebx
  0x000000011a4d3978:   mov    rsi,QWORD PTR [rsp+0x58]
  0x000000011a4d397d:   mov    rdx,rbx
  0x000000011a4d3980:   mov    ecx,DWORD PTR [rsp+0x60]
  0x000000011a4d3984:   mov    r8d,DWORD PTR [rsp+0x54]
  0x000000011a4d3989:   mov    r9d,DWORD PTR [rsp+0x68]
  0x000000011a4d398e:   nop
  0x000000011a4d398f:   call   0x0000000119eb3080           ; ImmutableOopMap {}
                                                            ;*invokestatic parseRestOfHexFloatingPointLiteral {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@196 (line 251)
                                                            ;   {static_call}
  0x000000011a4d3994:   add    rsp,0x90
  0x000000011a4d399b:   pop    rbp
  0x000000011a4d399c:   cmp    rsp,QWORD PTR [r15+0x340]    ;   {poll_return}
  0x000000011a4d39a3:   ja     0x000000011a4d3afe
  0x000000011a4d39a9:   ret    
  0x000000011a4d39aa:   mov    edi,DWORD PTR [rsp+0x68]
  0x000000011a4d39ae:   mov    rsi,QWORD PTR [rsp+0x58]
  0x000000011a4d39b3:   mov    rdx,rbx
  0x000000011a4d39b6:   mov    ecx,DWORD PTR [rsp+0x54]
  0x000000011a4d39ba:   mov    r8,rdi
  0x000000011a4d39bd:   xchg   ax,ax
  0x000000011a4d39bf:   call   0x0000000119eb3080           ; ImmutableOopMap {}
                                                            ;*invokestatic parseInfinity {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@127 (line 242)
                                                            ;   {static_call}
  0x000000011a4d39c4:   add    rsp,0x90
  0x000000011a4d39cb:   pop    rbp
  0x000000011a4d39cc:   cmp    rsp,QWORD PTR [r15+0x340]    ;   {poll_return}
  0x000000011a4d39d3:   ja     0x000000011a4d3b14
  0x000000011a4d39d9:   ret    
  0x000000011a4d39da:   mov    rsi,QWORD PTR [rsp+0x58]
  0x000000011a4d39df:   mov    rdx,rbx
  0x000000011a4d39e2:   mov    ecx,DWORD PTR [rsp+0x54]
  0x000000011a4d39e6:   nop
  0x000000011a4d39e7:   call   0x0000000119eb3080           ; ImmutableOopMap {}
                                                            ;*invokestatic parseNaN {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@110 (line 240)
                                                            ;   {static_call}
  0x000000011a4d39ec:   add    rsp,0x90
  0x000000011a4d39f3:   pop    rbp
  0x000000011a4d39f4:   cmp    rsp,QWORD PTR [r15+0x340]    ;   {poll_return}
  0x000000011a4d39fb:   ja     0x000000011a4d3b2a
  0x000000011a4d3a01:   ret    
  0x000000011a4d3a02:   mov    ecx,DWORD PTR [rsp+0x54]
  0x000000011a4d3a06:   mov    edx,DWORD PTR [rsp+0x60]
  0x000000011a4d3a0a:   mov    rsi,QWORD PTR [rsp+0x58]
  0x000000011a4d3a0f:   call   0x0000000119eb3080           ; ImmutableOopMap {}
                                                            ;*invokestatic newNumberFormatException {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@95 (line 233)
                                                            ;   {static_call}
  0x000000011a4d3a14:   cmp    rax,QWORD PTR [rax]          ; implicit exception: dispatches to 0x000000011a4d3b40
  0x000000011a4d3a17:   jmp    0x000000011a4d3b8f
  0x000000011a4d3a1c:   nop    DWORD PTR [rax+0x0]
  0x000000011a4d3a20:   jmp    0x000000011a4d3b54           ;   {no_reloc}
  0x000000011a4d3a25:   add    BYTE PTR [rax],al
  0x000000011a4d3a27:   add    BYTE PTR [rax],al
  0x000000011a4d3a29:   add    BYTE PTR [rax+0x13bba],al
  0x000000011a4d3a2f:   add    BYTE PTR [rdi+rcx*1],al
  0x000000011a4d3a32:   test   DWORD PTR [rcx+rax*1],ebp
  0x000000011a4d3a35:   add    BYTE PTR [rax],al
  0x000000011a4d3a37:   mov    rax,QWORD PTR [r15+0x108]
  0x000000011a4d3a3e:   lea    rdi,[rax+0x28]
  0x000000011a4d3a42:   cmp    rdi,QWORD PTR [r15+0x118]
  0x000000011a4d3a49:   ja     0x000000011a4d3b63
  0x000000011a4d3a4f:   mov    QWORD PTR [r15+0x108],rdi
  0x000000011a4d3a56:   mov    QWORD PTR [rax],0x1
  0x000000011a4d3a5d:   mov    rcx,rdx
  0x000000011a4d3a60:   movabs r10,0x800000000
  0x000000011a4d3a6a:   sub    rcx,r10
  0x000000011a4d3a6d:   mov    DWORD PTR [rax+0x8],ecx
  0x000000011a4d3a70:   xor    rcx,rcx
  0x000000011a4d3a73:   mov    DWORD PTR [rax+0xc],ecx
  0x000000011a4d3a76:   xor    rcx,rcx
  0x000000011a4d3a79:   mov    QWORD PTR [rax+0x10],rcx
  0x000000011a4d3a7d:   mov    QWORD PTR [rax+0x18],rcx
  0x000000011a4d3a81:   mov    QWORD PTR [rax+0x20],rcx
  0x000000011a4d3a85:   movabs rdx,0x7ffc5a0d0              ;   {oop("empty String"{0x00000007ffc5a0d0})}
  0x000000011a4d3a8f:   mov    rsi,rax
  0x000000011a4d3a92:   mov    QWORD PTR [rsp+0x78],rax
  0x000000011a4d3a97:   call   0x0000000119eb2a80           ; ImmutableOopMap {[120]=Oop }
                                                            ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@24 (line 223)
                                                            ;   {optimized virtual_call}
  0x000000011a4d3a9c:   mov    rax,QWORD PTR [rsp+0x78]
  0x000000011a4d3aa1:   jmp    0x000000011a4d3b8f
  0x000000011a4d3aa6:   movabs r10,0x13d4a8cf0              ;   {metadata({method} {0x000000013d4a8cf0} 'parseDouble' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011a4d3ab0:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011a4d3ab5:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x000000011a4d3abd:   call   0x0000000119f5e180           ; ImmutableOopMap {rsi=Oop [88]=Oop }
                                                            ;*synchronization entry
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@-1 (line 217)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011a4d3ac2:   jmp    0x000000011a4d379a
  0x000000011a4d3ac7:   movabs r10,0x13d4a9ac0              ;   {metadata({method} {0x000000013d4a9ac0} 'skipWhitespace' '(Ljava/lang/CharSequence;II)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser')}
  0x000000011a4d3ad1:   mov    QWORD PTR [rsp+0x8],r10
  0x000000011a4d3ad6:   mov    QWORD PTR [rsp],0x19
  0x000000011a4d3ade:   call   0x0000000119f5e180           ; ImmutableOopMap {[88]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@25 (line 549)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@7 (line 221)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011a4d3ae3:   jmp    0x000000011a4d37f5
  0x000000011a4d3ae8:   movabs r10,0x11a4d3964              ;   {internal_word}
  0x000000011a4d3af2:   mov    QWORD PTR [r15+0x358],r10
  0x000000011a4d3af9:   jmp    0x0000000119eb9100           ;   {runtime_call SafepointBlob}
  0x000000011a4d3afe:   movabs r10,0x11a4d399c              ;   {internal_word}
  0x000000011a4d3b08:   mov    QWORD PTR [r15+0x358],r10
  0x000000011a4d3b0f:   jmp    0x0000000119eb9100           ;   {runtime_call SafepointBlob}
  0x000000011a4d3b14:   movabs r10,0x11a4d39cc              ;   {internal_word}
  0x000000011a4d3b1e:   mov    QWORD PTR [r15+0x358],r10
  0x000000011a4d3b25:   jmp    0x0000000119eb9100           ;   {runtime_call SafepointBlob}
  0x000000011a4d3b2a:   movabs r10,0x11a4d39f4              ;   {internal_word}
  0x000000011a4d3b34:   mov    QWORD PTR [r15+0x358],r10
  0x000000011a4d3b3b:   jmp    0x0000000119eb9100           ;   {runtime_call SafepointBlob}
  0x000000011a4d3b40:   call   0x0000000119f584a0           ; ImmutableOopMap {rax=Oop }
                                                            ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@98 (line 233)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011a4d3b45:   movabs rdx,0x0                      ;   {metadata(NULL)}
  0x000000011a4d3b4f:   mov    eax,0xa050f00
  0x000000011a4d3b54:   call   0x0000000119f5d100           ; ImmutableOopMap {}
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@18 (line 223)
                                                            ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000000011a4d3b59:   jmp    0x000000011a4d3a20
  0x000000011a4d3b5e:   call   0x0000000119f584a0           ; ImmutableOopMap {}
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@18 (line 223)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011a4d3b63:   mov    rdx,rdx
  0x000000011a4d3b66:   call   0x0000000119f59080           ; ImmutableOopMap {}
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@18 (line 223)
                                                            ;   {runtime_call fast_new_instance_init_check Runtime1 stub}
  0x000000011a4d3b6b:   jmp    0x000000011a4d3a85
  0x000000011a4d3b70:   nop
  0x000000011a4d3b71:   nop
  0x000000011a4d3b72:   mov    rax,QWORD PTR [r15+0x3d0]
  0x000000011a4d3b79:   mov    QWORD PTR [r15+0x3d0],0x0
  0x000000011a4d3b84:   mov    QWORD PTR [r15+0x3d8],0x0
  0x000000011a4d3b8f:   add    rsp,0x90
  0x000000011a4d3b96:   pop    rbp
  0x000000011a4d3b97:   jmp    0x0000000119f57280           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011a4d3b9c:   hlt    
  0x000000011a4d3b9d:   hlt    
  0x000000011a4d3b9e:   hlt    
  0x000000011a4d3b9f:   hlt    
[Stub Code]
  0x000000011a4d3ba0:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x000000011a4d3ba5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011a4d3baf:   jmp    0x000000011a4d3baf           ;   {runtime_call const_jargs+-267182177}
  0x000000011a4d3bb4:   nop
  0x000000011a4d3bb5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011a4d3bbf:   jmp    0x000000011a4d3bbf           ;   {runtime_call const_jargs+-267182177}
  0x000000011a4d3bc4:   nop
  0x000000011a4d3bc5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011a4d3bcf:   jmp    0x000000011a4d3bcf           ;   {runtime_call const_jargs+-267182177}
  0x000000011a4d3bd4:   nop
  0x000000011a4d3bd5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011a4d3bdf:   jmp    0x000000011a4d3bdf           ;   {runtime_call const_jargs+-267182177}
  0x000000011a4d3be4:   nop
  0x000000011a4d3be5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011a4d3bef:   jmp    0x000000011a4d3bef           ;   {runtime_call const_jargs+-267182177}
  0x000000011a4d3bf4:   nop
  0x000000011a4d3bf5:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011a4d3bff:   jmp    0x000000011a4d3bff           ;   {runtime_call const_jargs+-267182177}
  0x000000011a4d3c04:   nop
  0x000000011a4d3c05:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011a4d3c0f:   jmp    0x000000011a4d3c0f           ;   {runtime_call const_jargs+-267182177}
  0x000000011a4d3c14:   nop
  0x000000011a4d3c15:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011a4d3c1f:   jmp    0x000000011a4d3c1f           ;   {runtime_call const_jargs+-267182177}
  0x000000011a4d3c24:   nop
  0x000000011a4d3c25:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011a4d3c2f:   jmp    0x000000011a4d3c2f           ;   {runtime_call const_jargs+-267182177}
  0x000000011a4d3c34:   nop
  0x000000011a4d3c35:   movabs rbx,0x0                      ;   {static_stub}
  0x000000011a4d3c3f:   jmp    0x000000011a4d3c3f           ;   {runtime_call const_jargs+-267182177}
[Exception Handler]
  0x000000011a4d3c44:   call   0x0000000119f5ab80           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011a4d3c49:   movabs rdi,0x1121cbe43              ;   {external_word}
  0x000000011a4d3c53:   and    rsp,0xfffffffffffffff0
  0x000000011a4d3c57:   call   0x0000000111e6ec50           ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011a4d3c5c:   hlt    
[Deopt Handler Code]
  0x000000011a4d3c5d:   movabs r10,0x11a4d3c5d              ;   {section_word}
  0x000000011a4d3c67:   push   r10
  0x000000011a4d3c69:   jmp    0x0000000119eb83a0           ;   {runtime_call DeoptimizationBlob}
  0x000000011a4d3c6e:   hlt    
  0x000000011a4d3c6f:   hlt    
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     445  596 %     4       ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral @ 15 (488 bytes)
 total in heap  [0x0000000121961590,0x0000000121962ec0] = 6448
 relocation     [0x00000001219616f0,0x0000000121961748] = 88
 main code      [0x0000000121961760,0x0000000121962540] = 3552
 stub code      [0x0000000121962540,0x0000000121962568] = 40
 oops           [0x0000000121962568,0x0000000121962570] = 8
 metadata       [0x0000000121962570,0x00000001219625a0] = 48
 scopes data    [0x00000001219625a0,0x0000000121962cd0] = 1840
 scopes pcs     [0x0000000121962cd0,0x0000000121962e90] = 448
 dependencies   [0x0000000121962e90,0x0000000121962e98] = 8
 handler table  [0x0000000121962e98,0x0000000121962eb0] = 24
 nul chk table  [0x0000000121962eb0,0x0000000121962ec0] = 16

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013d4a9358} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser'
  0x0000000121961760:   call   0x0000000111f6c100           ;   {runtime_call os::breakpoint()}
  0x0000000121961765:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x0000000121961770:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000121961777:   push   rbp
  0x0000000121961778:   sub    rsp,0x60
  0x000000012196177c:   mov    r14,QWORD PTR [rsi+0xa0]
  0x0000000121961783:   mov    r10d,DWORD PTR [rsi+0x98]
  0x000000012196178a:   mov    DWORD PTR [rsp],r10d
  0x000000012196178e:   mov    ebp,DWORD PTR [rsi+0x40]
  0x0000000121961791:   mov    r10d,DWORD PTR [rsi+0x90]
  0x0000000121961798:   mov    DWORD PTR [rsp+0xc],r10d
  0x000000012196179d:   mov    r11d,DWORD PTR [rsi+0x88]
  0x00000001219617a4:   mov    DWORD PTR [rsp+0x40],r11d
  0x00000001219617a9:   mov    r10d,DWORD PTR [rsi+0x80]
  0x00000001219617b0:   mov    DWORD PTR [rsp+0x14],r10d
  0x00000001219617b5:   mov    r11d,DWORD PTR [rsi+0x78]
  0x00000001219617b9:   mov    DWORD PTR [rsp+0x18],r11d
  0x00000001219617be:   mov    rbx,QWORD PTR [rsi+0x68]
  0x00000001219617c2:   mov    r11d,DWORD PTR [rsi+0x60]
  0x00000001219617c6:   mov    DWORD PTR [rsp+0x34],r11d
  0x00000001219617cb:   mov    r13d,DWORD PTR [rsi+0x58]
  0x00000001219617cf:   mov    DWORD PTR [rsp+0x28],r13d
  0x00000001219617d4:   mov    r13d,DWORD PTR [rsi+0x50]
  0x00000001219617d8:   mov    DWORD PTR [rsp+0x20],r13d
  0x00000001219617dd:   mov    rdi,rsi
  0x00000001219617e0:   movabs r10,0x112009200
  0x00000001219617ea:   call   r10
  0x00000001219617ed:   test   r14,r14
  0x00000001219617f0:   je     0x0000000121961d98
  0x00000001219617f6:   mov    r10d,DWORD PTR [r14+0x8]
  0x00000001219617fa:   movabs rax,0x800064948              ;   {metadata('java/lang/CharSequence')}
  0x0000000121961804:   movabs rsi,0x800000000
  0x000000012196180e:   add    rsi,r10
  0x0000000121961811:   mov    r10,QWORD PTR [rsi+0x20]
  0x0000000121961815:   cmp    r10,rax
  0x0000000121961818:   jne    0x0000000121961bf6
  0x000000012196181e:   mov    r13,r14
  0x0000000121961821:   mov    r10d,DWORD PTR [r13+0x8]
  0x0000000121961825:   cmp    r10d,0xe4a0                  ;   {metadata('java/lang/String')}
  0x000000012196182c:   jne    0x0000000121961d9b
  0x0000000121961832:   mov    r8,r13
  0x0000000121961835:   movsx  r10d,BYTE PTR [r8+0x10]
  0x000000012196183a:   nop    WORD PTR [rax+rax*1+0x0]
  0x0000000121961840:   test   r10d,r10d
  0x0000000121961843:   jne    0x0000000121961d9b
  0x0000000121961849:   mov    rdx,r13
  0x000000012196184c:   mov    r11d,DWORD PTR [r8+0x14]
  0x0000000121961850:   mov    QWORD PTR [rsp+0x38],r8
  0x0000000121961855:   mov    r8d,DWORD PTR [r12+r11*8+0xc]; implicit exception: dispatches to 0x0000000121961d9b
  0x000000012196185a:   mov    r13d,DWORD PTR [rsp]
  0x000000012196185e:   xchg   ax,ax
  0x0000000121961860:   cmp    r13d,DWORD PTR [rsp+0x40]
  0x0000000121961865:   jge    0x0000000121962030
  0x000000012196186b:   lea    r9,[r12+r11*8]
  0x000000012196186f:   mov    edi,r13d
  0x0000000121961872:   inc    edi
  0x0000000121961874:   xor    esi,esi
  0x0000000121961876:   test   edi,edi
  0x0000000121961878:   cmovl  edi,esi
  0x000000012196187b:   cmp    edi,DWORD PTR [rsp+0x40]
  0x000000012196187f:   mov    ecx,DWORD PTR [rsp+0x40]
  0x0000000121961883:   cmovg  edi,ecx
  0x0000000121961886:   cmp    r13d,r8d
  0x0000000121961889:   jae    0x0000000121961f58
  0x000000012196188f:   movzx  ebp,BYTE PTR [r9+r13*1+0x10]
  0x0000000121961895:   mov    r10d,ebp
  0x0000000121961898:   add    r10d,0xffffffd0
  0x000000012196189c:   nop    DWORD PTR [rax+0x0]
  0x00000001219618a0:   cmp    r10d,0xa
  0x00000001219618a4:   jae    0x0000000121961ce3
  0x00000001219618aa:   movsxd rcx,ebp
  0x00000001219618ad:   mov    r10,rbx
  0x00000001219618b0:   shl    r10,1
  0x00000001219618b3:   shl    rbx,0x3
  0x00000001219618b7:   add    r10,rbx
  0x00000001219618ba:   add    rcx,r10
  0x00000001219618bd:   add    rcx,0xffffffffffffffd0
  0x00000001219618c1:   mov    r10d,r13d
  0x00000001219618c4:   inc    r10d
  0x00000001219618c7:   cmp    r10d,edi
  0x00000001219618ca:   jge    0x00000001219618d4
  0x00000001219618cc:   mov    rbx,rcx
  0x00000001219618cf:   mov    r13d,r10d
  0x00000001219618d2:   jmp    0x0000000121961886
  0x00000001219618d4:   vmovq  xmm0,r9
  0x00000001219618d9:   mov    eax,r11d
  0x00000001219618dc:   movsxd r11,r8d
  0x00000001219618df:   movsxd r9,DWORD PTR [rsp+0x40]
  0x00000001219618e4:   cmp    r9,r11
  0x00000001219618e7:   mov    r9d,DWORD PTR [rsp+0x40]
  0x00000001219618ec:   mov    r14d,r8d
  0x00000001219618ef:   cmovg  r9d,r8d
  0x00000001219618f3:   mov    edi,r9d
  0x00000001219618f6:   dec    edi
  0x00000001219618f8:   mov    r11d,0x80000000
  0x00000001219618fe:   cmp    r9d,edi
  0x0000000121961901:   cmovl  edi,r11d
  0x0000000121961905:   cmp    r10d,edi
  0x0000000121961908:   jge    0x0000000121961d29
  0x000000012196190e:   mov    r11d,0x7d0
  0x0000000121961914:   mov    r9d,edi
  0x0000000121961917:   sub    r9d,r10d
  0x000000012196191a:   cmp    edi,r10d
  0x000000012196191d:   cmovl  r9d,esi
  0x0000000121961921:   cmp    r9d,0x7d0
  0x0000000121961928:   cmova  r9d,r11d
  0x000000012196192c:   add    r9d,r10d
  0x000000012196192f:   jmp    0x0000000121961a54
  0x0000000121961934:   mov    ebp,0x1
  0x0000000121961939:   jmp    0x000000012196193f
  0x000000012196193b:   xor    edi,edi
  0x000000012196193d:   xor    ebp,ebp
  0x000000012196193f:   mov    r9,QWORD PTR [r15+0x348]     ; ImmutableOopMap {xmm0=NarrowOop xmm3=Oop [56]=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@288 (line 367)
  0x0000000121961946:   test   DWORD PTR [r9],eax           ;   {poll}
  0x0000000121961949:   test   ebp,ebp
  0x000000012196194b:   jne    0x00000001219619f0
  0x0000000121961951:   mov    r10d,r13d
  0x0000000121961954:   add    r10d,eax
  0x0000000121961957:   mov    r9d,r10d
  0x000000012196195a:   add    r9d,0xffffffd1
  0x000000012196195e:   mov    eax,r9d
  0x0000000121961961:   cmp    r8d,DWORD PTR [rsp+0x40]
  0x0000000121961966:   jge    0x0000000121961c68
  0x000000012196196c:   cmp    r8d,DWORD PTR [rsp]
  0x0000000121961970:   jae    0x000000012196229c
  0x0000000121961976:   vmovq  r10,xmm3
  0x000000012196197b:   movzx  ebp,BYTE PTR [r10+r14*1+0x11]
  0x0000000121961981:   cmp    ebp,0x20
  0x0000000121961984:   jg     0x0000000121961fbc
  0x000000012196198a:   mov    esi,0xffffff45
  0x000000012196198f:   mov    r10d,DWORD PTR [rsp+0xc]
  0x0000000121961994:   mov    DWORD PTR [rsp+0x8],r10d
  0x0000000121961999:   mov    r10d,DWORD PTR [rsp+0x14]
  0x000000012196199e:   mov    DWORD PTR [rsp+0x10],r10d
  0x00000001219619a3:   mov    QWORD PTR [rsp-0x8],rax
  0x00000001219619a8:   mov    eax,DWORD PTR [rsp+0x18]
  0x00000001219619ac:   mov    DWORD PTR [rsp+0x14],eax
  0x00000001219619b0:   mov    rax,QWORD PTR [rsp-0x8]
  0x00000001219619b5:   mov    QWORD PTR [rsp+0x18],rdx
  0x00000001219619ba:   mov    QWORD PTR [rsp-0x8],rax
  0x00000001219619bf:   mov    eax,DWORD PTR [rsp+0x28]
  0x00000001219619c3:   mov    DWORD PTR [rsp+0x20],eax
  0x00000001219619c7:   mov    rax,QWORD PTR [rsp-0x8]
  0x00000001219619cc:   vmovss DWORD PTR [rsp+0x24],xmm2
  0x00000001219619d2:   mov    DWORD PTR [rsp+0x28],ecx
  0x00000001219619d6:   vmovss DWORD PTR [rsp+0x2c],xmm1
  0x00000001219619dc:   mov    QWORD PTR [rsp+0x30],r11
  0x00000001219619e1:   mov    DWORD PTR [rsp+0x44],r8d
  0x00000001219619e6:   mov    DWORD PTR [rsp+0x48],eax
  0x00000001219619ea:   nop
  0x00000001219619eb:   call   0x0000000119eb8000           ; ImmutableOopMap {[56]=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@16 (line 550)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@313 (line 376)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001219619f0:   mov    r9d,r8d
  0x00000001219619f3:   jmp    0x0000000121961b8b
  0x00000001219619f8:   cmp    ebp,0x2e
  0x00000001219619fb:   nop    DWORD PTR [rax+rax*1+0x0]
  0x0000000121961a00:   jne    0x0000000121961ad0
  0x0000000121961a06:   mov    ebp,DWORD PTR [rsp+0x20]
  0x0000000121961a0a:   cmp    ebp,0xffffffff
  0x0000000121961a0d:   jne    0x000000012196231c
  0x0000000121961a13:   mov    rbx,rcx
  0x0000000121961a16:   mov    DWORD PTR [rsp+0x20],r10d
  0x0000000121961a1b:   nop    DWORD PTR [rax+rax*1+0x0]
  0x0000000121961a20:   jmp    0x0000000121961a80
  0x0000000121961a25:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x0000000121961a30:   movsxd r8,ebp
  0x0000000121961a33:   mov    rcx,rbx
  0x0000000121961a36:   shl    rcx,1
  0x0000000121961a39:   shl    rbx,0x3
  0x0000000121961a3d:   add    rcx,rbx
  0x0000000121961a40:   add    rcx,r8
  0x0000000121961a43:   add    rcx,0xffffffffffffffd0
  0x0000000121961a47:   add    r10d,0x2
  0x0000000121961a4b:   cmp    r10d,r9d
  0x0000000121961a4e:   jge    0x0000000121961d0b
  0x0000000121961a54:   vmovq  r8,xmm0
  0x0000000121961a59:   movzx  ebp,BYTE PTR [r8+r10*1+0x10]
  0x0000000121961a5f:   mov    ebx,ebp
  0x0000000121961a61:   add    ebx,0xffffffd0
  0x0000000121961a64:   cmp    ebx,0xa
  0x0000000121961a67:   jae    0x00000001219619f8
  0x0000000121961a69:   movsxd rbx,ebp
  0x0000000121961a6c:   mov    r8,rcx
  0x0000000121961a6f:   shl    r8,1
  0x0000000121961a72:   shl    rcx,0x3
  0x0000000121961a76:   add    r8,rcx
  0x0000000121961a79:   add    rbx,r8
  0x0000000121961a7c:   add    rbx,0xffffffffffffffd0
  0x0000000121961a80:   movsxd r8,r10d
  0x0000000121961a83:   vmovq  rcx,xmm0
  0x0000000121961a88:   movzx  ebp,BYTE PTR [rcx+r8*1+0x11]
  0x0000000121961a8e:   mov    r8d,r10d
  0x0000000121961a91:   inc    r8d
  0x0000000121961a94:   mov    r13d,r8d
  0x0000000121961a97:   mov    r8d,ebp
  0x0000000121961a9a:   add    r8d,0xffffffd0
  0x0000000121961a9e:   xchg   ax,ax
  0x0000000121961aa0:   cmp    r8d,0xa
  0x0000000121961aa4:   jb     0x0000000121961a30
  0x0000000121961aa6:   cmp    ebp,0x2e
  0x0000000121961aa9:   jne    0x0000000121961aca
  0x0000000121961aab:   mov    ebp,DWORD PTR [rsp+0x20]
  0x0000000121961aaf:   cmp    ebp,0xffffffff
  0x0000000121961ab2:   jne    0x0000000121962322
  0x0000000121961ab8:   mov    rcx,rbx
  0x0000000121961abb:   mov    DWORD PTR [rsp+0x20],r13d
  0x0000000121961ac0:   mov    ebp,0x2e
  0x0000000121961ac5:   jmp    0x0000000121961a47
  0x0000000121961aca:   mov    rcx,rbx
  0x0000000121961acd:   mov    r10d,r13d
  0x0000000121961ad0:   mov    rbx,rcx
  0x0000000121961ad3:   mov    r13d,r10d
  0x0000000121961ad6:   mov    r11d,eax
  0x0000000121961ad9:   mov    r8d,r14d
  0x0000000121961adc:   vmovq  r9,xmm0
  0x0000000121961ae1:   mov    rdx,rbx
  0x0000000121961ae4:   mov    ebx,DWORD PTR [rsp+0x20]
  0x0000000121961ae8:   cmp    ebx,0xffffffff
  0x0000000121961aeb:   je     0x0000000121962094
  0x0000000121961af1:   mov    esi,r13d
  0x0000000121961af4:   sub    esi,DWORD PTR [rsp+0x28]
  0x0000000121961af8:   mov    eax,DWORD PTR [rsp+0x20]
  0x0000000121961afc:   sub    eax,r13d
  0x0000000121961aff:   mov    ecx,esi
  0x0000000121961b01:   dec    ecx
  0x0000000121961b03:   mov    r10d,eax
  0x0000000121961b06:   inc    r10d
  0x0000000121961b09:   cmp    ebp,0x65
  0x0000000121961b0c:   jne    0x00000001219620c0
  0x0000000121961b12:   vmovq  xmm3,r9
  0x0000000121961b17:   mov    DWORD PTR [rsp],r8d
  0x0000000121961b1b:   vmovd  xmm0,r11d
  0x0000000121961b20:   vmovss xmm2,DWORD PTR [rsp+0x20]
  0x0000000121961b26:   vmovd  xmm1,r13d
  0x0000000121961b2b:   mov    r9d,r13d
  0x0000000121961b2e:   inc    r9d
  0x0000000121961b31:   cmp    r9d,DWORD PTR [rsp+0x40]
  0x0000000121961b36:   jge    0x00000001219620ec
  0x0000000121961b3c:   nop    DWORD PTR [rax+0x0]
  0x0000000121961b40:   cmp    r9d,r8d
  0x0000000121961b43:   jae    0x000000012196215c
  0x0000000121961b49:   movsxd r11,r13d
  0x0000000121961b4c:   vmovq  r8,xmm3
  0x0000000121961b51:   movzx  edi,BYTE PTR [r8+r11*1+0x11]
  0x0000000121961b57:   cmp    edi,0x2d
  0x0000000121961b5a:   nop    WORD PTR [rax+rax*1+0x0]
  0x0000000121961b60:   je     0x00000001219621cc
  0x0000000121961b66:   cmp    edi,0x2b
  0x0000000121961b69:   je     0x0000000121962234
  0x0000000121961b6f:   mov    r11d,edi
  0x0000000121961b72:   add    r11d,0xffffffd0
  0x0000000121961b76:   cmp    r11d,0xa
  0x0000000121961b7a:   nop    WORD PTR [rax+rax*1+0x0]
  0x0000000121961b80:   jae    0x0000000121961de8
  0x0000000121961b86:   xor    ebx,ebx
  0x0000000121961b88:   xor    r11d,r11d
  0x0000000121961b8b:   cmp    r11,0x989680
  0x0000000121961b92:   jge    0x0000000121961d39
  0x0000000121961b98:   movsxd rdi,edi
  0x0000000121961b9b:   mov    r8d,r9d
  0x0000000121961b9e:   inc    r8d
  0x0000000121961ba1:   mov    r13,r11
  0x0000000121961ba4:   shl    r13,1
  0x0000000121961ba7:   movsxd r14,r9d
  0x0000000121961baa:   shl    r11,0x3
  0x0000000121961bae:   add    r13,r11
  0x0000000121961bb1:   add    r13,rdi
  0x0000000121961bb4:   mov    r11,r13
  0x0000000121961bb7:   add    r11,0xffffffffffffffd0
  0x0000000121961bbb:   nop    DWORD PTR [rax+rax*1+0x0]
  0x0000000121961bc0:   cmp    r8d,DWORD PTR [rsp+0x40]
  0x0000000121961bc5:   jge    0x000000012196193b
  0x0000000121961bcb:   cmp    r8d,DWORD PTR [rsp]
  0x0000000121961bcf:   jae    0x0000000121961ed8
  0x0000000121961bd5:   vmovq  r9,xmm3
  0x0000000121961bda:   movzx  edi,BYTE PTR [r9+r14*1+0x11]
  0x0000000121961be0:   mov    r9d,edi
  0x0000000121961be3:   add    r9d,0xffffffd0
  0x0000000121961be7:   cmp    r9d,0xa
  0x0000000121961beb:   jae    0x000000012196193d
  0x0000000121961bf1:   jmp    0x0000000121961934
  0x0000000121961bf6:   push   rax
  0x0000000121961bf7:   mov    rax,rax
  0x0000000121961bfa:   mov    rdi,QWORD PTR [rsi+0x28]
  0x0000000121961bfe:   mov    ecx,DWORD PTR [rdi]
  0x0000000121961c00:   add    rdi,0x8
  0x0000000121961c04:   test   rax,rax
  0x0000000121961c07:   repnz scas rax,QWORD PTR es:[rdi]
  0x0000000121961c0a:   pop    rax
  0x0000000121961c0b:   jne    0x0000000121961c15
  0x0000000121961c11:   mov    QWORD PTR [rsi+0x20],rax
  0x0000000121961c15:   je     0x000000012196181e
  0x0000000121961c1b:   mov    esi,0xffffff8d
  0x0000000121961c20:   mov    r11d,DWORD PTR [rsp+0xc]
  0x0000000121961c25:   mov    DWORD PTR [rsp+0x4],r11d
  0x0000000121961c2a:   mov    r11d,DWORD PTR [rsp+0x14]
  0x0000000121961c2f:   mov    DWORD PTR [rsp+0xc],r11d
  0x0000000121961c34:   mov    QWORD PTR [rsp-0x8],rax
  0x0000000121961c39:   mov    eax,DWORD PTR [rsp+0x18]
  0x0000000121961c3d:   mov    DWORD PTR [rsp+0x10],eax
  0x0000000121961c41:   mov    rax,QWORD PTR [rsp-0x8]
  0x0000000121961c46:   mov    QWORD PTR [rsp+0x18],rbx
  0x0000000121961c4b:   mov    QWORD PTR [rsp-0x8],rax
  0x0000000121961c50:   mov    eax,DWORD PTR [rsp+0x28]
  0x0000000121961c54:   mov    DWORD PTR [rsp+0x14],eax
  0x0000000121961c58:   mov    rax,QWORD PTR [rsp-0x8]
  0x0000000121961c5d:   mov    QWORD PTR [rsp+0x28],r14
  0x0000000121961c62:   nop
  0x0000000121961c63:   call   0x0000000119eb8000           ; ImmutableOopMap {[40]=Oop }
                                                            ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@15 (line 325)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121961c68:   mov    r13d,DWORD PTR [rsp+0x18]
  0x0000000121961c6d:   test   r13d,r13d
  0x0000000121961c70:   jne    0x0000000121962370
  0x0000000121961c76:   cmp    esi,0x1
  0x0000000121961c79:   je     0x00000001219623d0
  0x0000000121961c7f:   nop
  0x0000000121961c80:   cmp    ecx,0x13
  0x0000000121961c83:   jg     0x0000000121962428
  0x0000000121961c89:   test   rdx,rdx
  0x0000000121961c8c:   je     0x0000000121962480
  0x0000000121961c92:   add    r10d,0x116
  0x0000000121961c99:   nop    DWORD PTR [rax+0x0]
  0x0000000121961ca0:   cmp    r10d,0x27a
  0x0000000121961ca7:   jae    0x00000001219624c0
  0x0000000121961cad:   mov    esi,DWORD PTR [rsp+0x14]
  0x0000000121961cb1:   mov    ecx,r9d
  0x0000000121961cb4:   mov    ebp,DWORD PTR [rsp+0x40]
  0x0000000121961cb8:   data16 xchg ax,ax
  0x0000000121961cbb:   call   0x000000011a4d5ac0           ; ImmutableOopMap {[56]=Oop }
                                                            ;*invokestatic tryDecToDoubleWithFastAlgorithm {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleMath::decFloatLiteralToDouble@131 (line 763)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@463 (line 404)
                                                            ;   {static_call}
  0x0000000121961cc0:   vucomisd xmm0,xmm0
  0x0000000121961cc4:   jp     0x0000000121962350
  0x0000000121961cca:   jne    0x0000000121962350
  0x0000000121961cd0:   add    rsp,0x60
  0x0000000121961cd4:   pop    rbp
  0x0000000121961cd5:   cmp    rsp,QWORD PTR [r15+0x340]    ;   {poll_return}
  0x0000000121961cdc:   ja     0x0000000121962512
  0x0000000121961ce2:   ret    
  0x0000000121961ce3:   cmp    ebp,0x2e
  0x0000000121961ce6:   jne    0x0000000121961ae1
  0x0000000121961cec:   mov    ebp,DWORD PTR [rsp+0x20]
  0x0000000121961cf0:   cmp    ebp,0xffffffff
  0x0000000121961cf3:   jne    0x0000000121962322
  0x0000000121961cf9:   mov    rcx,rbx
  0x0000000121961cfc:   mov    DWORD PTR [rsp+0x20],r13d
  0x0000000121961d01:   mov    ebp,0x2e
  0x0000000121961d06:   jmp    0x00000001219618c1
  0x0000000121961d0b:   mov    r9,QWORD PTR [r15+0x348]
  0x0000000121961d12:   mov    r8d,r13d
  0x0000000121961d15:   inc    r8d                          ; ImmutableOopMap {rdx=Oop rax=NarrowOop xmm0=Oop [56]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@82 (line 325)
  0x0000000121961d18:   test   DWORD PTR [r9],eax           ;   {poll}
  0x0000000121961d1b:   nop    DWORD PTR [rax+rax*1+0x0]
  0x0000000121961d20:   cmp    r10d,edi
  0x0000000121961d23:   jl     0x0000000121961914
  0x0000000121961d29:   cmp    r10d,DWORD PTR [rsp+0x40]
  0x0000000121961d2e:   jge    0x00000001219624ec
  0x0000000121961d34:   jmp    0x0000000121961e7e
  0x0000000121961d39:   mov    esi,0xffffff45
  0x0000000121961d3e:   mov    r8d,0x989680
  0x0000000121961d44:   cmp    r11,r8
  0x0000000121961d47:   mov    ebp,0xffffffff
  0x0000000121961d4c:   jl     0x0000000121961d56
  0x0000000121961d4e:   setne  bpl
  0x0000000121961d52:   movzx  ebp,bpl
  0x0000000121961d56:   mov    r8,QWORD PTR [rsp+0x38]
  0x0000000121961d5b:   mov    QWORD PTR [rsp],r8
  0x0000000121961d5f:   mov    DWORD PTR [rsp+0x8],r9d
  0x0000000121961d64:   mov    r8d,DWORD PTR [rsp+0x40]
  0x0000000121961d69:   mov    DWORD PTR [rsp+0x10],r8d
  0x0000000121961d6e:   mov    QWORD PTR [rsp+0x20],rdx
  0x0000000121961d73:   mov    DWORD PTR [rsp+0x1c],r10d
  0x0000000121961d78:   vmovss DWORD PTR [rsp+0x2c],xmm2
  0x0000000121961d7e:   mov    DWORD PTR [rsp+0x30],ecx
  0x0000000121961d82:   mov    DWORD PTR [rsp+0x34],edi
  0x0000000121961d86:   vmovss DWORD PTR [rsp+0x38],xmm1
  0x0000000121961d8c:   mov    QWORD PTR [rsp+0x40],r11
  0x0000000121961d91:   xchg   ax,ax
  0x0000000121961d93:   call   0x0000000119eb8000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@243 (line 363)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121961d98:   xor    r13d,r13d
  0x0000000121961d9b:   mov    esi,0xffffff76
  0x0000000121961da0:   mov    r11d,DWORD PTR [rsp+0xc]
  0x0000000121961da5:   mov    DWORD PTR [rsp+0x4],r11d
  0x0000000121961daa:   mov    r11d,DWORD PTR [rsp+0x14]
  0x0000000121961daf:   mov    DWORD PTR [rsp+0xc],r11d
  0x0000000121961db4:   mov    QWORD PTR [rsp-0x8],rax
  0x0000000121961db9:   mov    eax,DWORD PTR [rsp+0x18]
  0x0000000121961dbd:   mov    DWORD PTR [rsp+0x10],eax
  0x0000000121961dc1:   mov    rax,QWORD PTR [rsp-0x8]
  0x0000000121961dc6:   mov    QWORD PTR [rsp+0x18],rbx
  0x0000000121961dcb:   mov    QWORD PTR [rsp-0x8],rax
  0x0000000121961dd0:   mov    eax,DWORD PTR [rsp+0x28]
  0x0000000121961dd4:   mov    DWORD PTR [rsp+0x14],eax
  0x0000000121961dd8:   mov    rax,QWORD PTR [rsp-0x8]
  0x0000000121961ddd:   mov    QWORD PTR [rsp+0x28],r13
  0x0000000121961de2:   nop
  0x0000000121961de3:   call   0x0000000119eb8000           ; ImmutableOopMap {[40]=Oop }
                                                            ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@15 (line 325)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121961de8:   mov    esi,0xffffff45
  0x0000000121961ded:   mov    rbp,QWORD PTR [rsp+0x38]
  0x0000000121961df2:   mov    DWORD PTR [rsp],r9d
  0x0000000121961df6:   mov    r11d,DWORD PTR [rsp+0xc]
  0x0000000121961dfb:   mov    DWORD PTR [rsp+0x4],r11d
  0x0000000121961e00:   mov    r8d,DWORD PTR [rsp+0x14]
  0x0000000121961e05:   mov    DWORD PTR [rsp+0xc],r8d
  0x0000000121961e0a:   mov    QWORD PTR [rsp-0x8],rax
  0x0000000121961e0f:   mov    eax,DWORD PTR [rsp+0x18]
  0x0000000121961e13:   mov    DWORD PTR [rsp+0x10],eax
  0x0000000121961e17:   mov    rax,QWORD PTR [rsp-0x8]
  0x0000000121961e1c:   mov    QWORD PTR [rsp+0x18],rdx
  0x0000000121961e21:   mov    DWORD PTR [rsp+0x14],r10d
  0x0000000121961e26:   mov    QWORD PTR [rsp-0x8],rax
  0x0000000121961e2b:   mov    eax,DWORD PTR [rsp+0x28]
  0x0000000121961e2f:   mov    DWORD PTR [rsp+0x20],eax
  0x0000000121961e33:   mov    rax,QWORD PTR [rsp-0x8]
  0x0000000121961e38:   mov    DWORD PTR [rsp+0x24],ebx
  0x0000000121961e3c:   mov    DWORD PTR [rsp+0x28],ecx
  0x0000000121961e40:   mov    DWORD PTR [rsp+0x2c],edi
  0x0000000121961e44:   vmovss DWORD PTR [rsp+0x30],xmm1
  0x0000000121961e4a:   nop
  0x0000000121961e4b:   call   0x0000000119eb8000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@227 (line 358)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121961e50:   movsxd rbx,ebp
  0x0000000121961e53:   mov    r11,rcx
  0x0000000121961e56:   shl    r11,1
  0x0000000121961e59:   shl    rcx,0x3
  0x0000000121961e5d:   add    r11,rcx
  0x0000000121961e60:   add    rbx,r11
  0x0000000121961e63:   add    rbx,0xffffffffffffffd0
  0x0000000121961e67:   mov    r8d,r10d
  0x0000000121961e6a:   inc    r8d
  0x0000000121961e6d:   cmp    r8d,DWORD PTR [rsp+0x40]
  0x0000000121961e72:   jge    0x00000001219624f2
  0x0000000121961e78:   mov    rcx,rbx
  0x0000000121961e7b:   mov    r10d,r8d
  0x0000000121961e7e:   xchg   ax,ax
  0x0000000121961e80:   cmp    r10d,r14d
  0x0000000121961e83:   jae    0x00000001219624fa
  0x0000000121961e89:   vmovq  r9,xmm0
  0x0000000121961e8e:   movzx  ebp,BYTE PTR [r9+r10*1+0x10]
  0x0000000121961e94:   mov    r11d,ebp
  0x0000000121961e97:   add    r11d,0xffffffd0
  0x0000000121961e9b:   nop    DWORD PTR [rax+rax*1+0x0]
  0x0000000121961ea0:   cmp    r11d,0xa
  0x0000000121961ea4:   jb     0x0000000121961e50
  0x0000000121961ea6:   cmp    ebp,0x2e
  0x0000000121961ea9:   jne    0x0000000121961ec7
  0x0000000121961eab:   mov    ebp,DWORD PTR [rsp+0x20]
  0x0000000121961eaf:   cmp    ebp,0xffffffff
  0x0000000121961eb2:   jne    0x0000000121962328
  0x0000000121961eb8:   mov    rbx,rcx
  0x0000000121961ebb:   mov    DWORD PTR [rsp+0x20],r10d
  0x0000000121961ec0:   mov    ebp,0x2e
  0x0000000121961ec5:   jmp    0x0000000121961e67
  0x0000000121961ec7:   mov    rdx,rcx
  0x0000000121961eca:   mov    r13d,r10d
  0x0000000121961ecd:   mov    r11d,eax
  0x0000000121961ed0:   mov    r8d,r14d
  0x0000000121961ed3:   jmp    0x0000000121961ae4
  0x0000000121961ed8:   mov    esi,0xffffffe5
  0x0000000121961edd:   mov    rbp,QWORD PTR [rsp+0x38]
  0x0000000121961ee2:   mov    r9d,DWORD PTR [rsp+0xc]
  0x0000000121961ee7:   mov    DWORD PTR [rsp+0x4],r9d
  0x0000000121961eec:   mov    ebx,DWORD PTR [rsp+0x40]
  0x0000000121961ef0:   mov    DWORD PTR [rsp+0x8],ebx
  0x0000000121961ef4:   mov    r9d,DWORD PTR [rsp+0x14]
  0x0000000121961ef9:   mov    DWORD PTR [rsp+0xc],r9d
  0x0000000121961efe:   mov    QWORD PTR [rsp-0x8],rax
  0x0000000121961f03:   mov    eax,DWORD PTR [rsp+0x18]
  0x0000000121961f07:   mov    DWORD PTR [rsp+0x10],eax
  0x0000000121961f0b:   mov    rax,QWORD PTR [rsp-0x8]
  0x0000000121961f10:   mov    QWORD PTR [rsp+0x18],rdx
  0x0000000121961f15:   mov    DWORD PTR [rsp+0x14],r10d
  0x0000000121961f1a:   mov    QWORD PTR [rsp-0x8],rax
  0x0000000121961f1f:   mov    eax,DWORD PTR [rsp+0x28]
  0x0000000121961f23:   mov    DWORD PTR [rsp+0x20],eax
  0x0000000121961f27:   mov    rax,QWORD PTR [rsp-0x8]
  0x0000000121961f2c:   vmovss DWORD PTR [rsp+0x24],xmm2
  0x0000000121961f32:   mov    DWORD PTR [rsp+0x28],ecx
  0x0000000121961f36:   vmovss DWORD PTR [rsp+0x2c],xmm1
  0x0000000121961f3c:   mov    QWORD PTR [rsp+0x30],r11
  0x0000000121961f41:   mov    DWORD PTR [rsp+0x38],r8d
  0x0000000121961f46:   mov    DWORD PTR [rsp+0x3c],r8d
  0x0000000121961f4b:   vmovss DWORD PTR [rsp+0x40],xmm0
  0x0000000121961f51:   xchg   ax,ax
  0x0000000121961f53:   call   0x0000000119eb8000           ; ImmutableOopMap {rbp=Oop [64]=NarrowOop }
                                                            ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.StringLatin1::charAt@1 (line 47)
                                                            ; - java.lang.String::charAt@12 (line 1512)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@272 (line 366)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121961f58:   mov    rcx,rbx
  0x0000000121961f5b:   mov    r10d,r13d
  0x0000000121961f5e:   mov    esi,0xffffffe5
  0x0000000121961f63:   mov    rbp,QWORD PTR [rsp+0x38]
  0x0000000121961f68:   mov    r8d,DWORD PTR [rsp+0xc]
  0x0000000121961f6d:   mov    DWORD PTR [rsp+0x4],r8d
  0x0000000121961f72:   mov    r8d,DWORD PTR [rsp+0x14]
  0x0000000121961f77:   mov    DWORD PTR [rsp+0xc],r8d
  0x0000000121961f7c:   mov    QWORD PTR [rsp-0x8],rax
  0x0000000121961f81:   mov    eax,DWORD PTR [rsp+0x18]
  0x0000000121961f85:   mov    DWORD PTR [rsp+0x10],eax
  0x0000000121961f89:   mov    rax,QWORD PTR [rsp-0x8]
  0x0000000121961f8e:   mov    QWORD PTR [rsp+0x18],rcx
  0x0000000121961f93:   mov    QWORD PTR [rsp-0x8],rax
  0x0000000121961f98:   mov    eax,DWORD PTR [rsp+0x28]
  0x0000000121961f9c:   mov    DWORD PTR [rsp+0x14],eax
  0x0000000121961fa0:   mov    rax,QWORD PTR [rsp-0x8]
  0x0000000121961fa5:   mov    DWORD PTR [rsp+0x24],r10d
  0x0000000121961faa:   mov    DWORD PTR [rsp+0x28],r10d
  0x0000000121961faf:   mov    DWORD PTR [rsp+0x30],r11d
  0x0000000121961fb4:   data16 xchg ax,ax
  0x0000000121961fb7:   call   0x0000000119eb8000           ; ImmutableOopMap {rbp=Oop [48]=NarrowOop }
                                                            ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.StringLatin1::charAt@1 (line 47)
                                                            ; - java.lang.String::charAt@12 (line 1512)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@22 (line 326)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121961fbc:   mov    esi,0xffffff45
  0x0000000121961fc1:   mov    rbp,QWORD PTR [rsp+0x38]
  0x0000000121961fc6:   mov    r10d,DWORD PTR [rsp+0xc]
  0x0000000121961fcb:   mov    DWORD PTR [rsp+0x4],r10d
  0x0000000121961fd0:   mov    r9d,DWORD PTR [rsp+0x40]
  0x0000000121961fd5:   mov    DWORD PTR [rsp+0x8],r9d
  0x0000000121961fda:   mov    r9d,DWORD PTR [rsp+0x14]
  0x0000000121961fdf:   mov    DWORD PTR [rsp+0xc],r9d
  0x0000000121961fe4:   mov    QWORD PTR [rsp-0x8],rax
  0x0000000121961fe9:   mov    eax,DWORD PTR [rsp+0x18]
  0x0000000121961fed:   mov    DWORD PTR [rsp+0x10],eax
  0x0000000121961ff1:   mov    rax,QWORD PTR [rsp-0x8]
  0x0000000121961ff6:   mov    QWORD PTR [rsp+0x18],rdx
  0x0000000121961ffb:   mov    QWORD PTR [rsp-0x8],rax
  0x0000000121962000:   mov    eax,DWORD PTR [rsp+0x28]
  0x0000000121962004:   mov    DWORD PTR [rsp+0x14],eax
  0x0000000121962008:   mov    rax,QWORD PTR [rsp-0x8]
  0x000000012196200d:   vmovss DWORD PTR [rsp+0x20],xmm2
  0x0000000121962013:   mov    DWORD PTR [rsp+0x24],ecx
  0x0000000121962017:   vmovss DWORD PTR [rsp+0x28],xmm1
  0x000000012196201d:   mov    QWORD PTR [rsp+0x30],r11
  0x0000000121962022:   mov    DWORD PTR [rsp+0x2c],r8d
  0x0000000121962027:   mov    DWORD PTR [rsp+0x3c],eax
  0x000000012196202b:   call   0x0000000119eb8000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@319 (line 377)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121962030:   mov    r10d,r13d
  0x0000000121962033:   mov    esi,0xffffff45
  0x0000000121962038:   mov    r8d,DWORD PTR [rsp+0xc]
  0x000000012196203d:   mov    DWORD PTR [rsp+0x4],r8d
  0x0000000121962042:   mov    r8d,DWORD PTR [rsp+0x40]
  0x0000000121962047:   mov    r11d,DWORD PTR [rsp+0x14]
  0x000000012196204c:   mov    DWORD PTR [rsp+0xc],r11d
  0x0000000121962051:   mov    QWORD PTR [rsp-0x8],rax
  0x0000000121962056:   mov    eax,DWORD PTR [rsp+0x18]
  0x000000012196205a:   mov    DWORD PTR [rsp+0x10],eax
  0x000000012196205e:   mov    rax,QWORD PTR [rsp-0x8]
  0x0000000121962063:   mov    QWORD PTR [rsp+0x18],rbx
  0x0000000121962068:   mov    QWORD PTR [rsp-0x8],rax
  0x000000012196206d:   mov    eax,DWORD PTR [rsp+0x28]
  0x0000000121962071:   mov    DWORD PTR [rsp+0x14],eax
  0x0000000121962075:   mov    rax,QWORD PTR [rsp-0x8]
  0x000000012196207a:   mov    DWORD PTR [rsp+0x24],r10d
  0x000000012196207f:   mov    r11d,r8d
  0x0000000121962082:   mov    DWORD PTR [rsp+0x28],r11d
  0x0000000121962087:   mov    QWORD PTR [rsp+0x38],rdx
  0x000000012196208c:   data16 xchg ax,ax
  0x000000012196208f:   call   0x0000000119eb8000           ; ImmutableOopMap {[56]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@17 (line 325)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121962094:   mov    esi,0xffffff45
  0x0000000121962099:   mov    QWORD PTR [rsp+0x20],rdx
  0x000000012196209e:   mov    QWORD PTR [rsp-0x8],rax
  0x00000001219620a3:   mov    eax,DWORD PTR [rsp+0x28]
  0x00000001219620a7:   mov    DWORD PTR [rsp+0x1c],eax
  0x00000001219620ab:   mov    rax,QWORD PTR [rsp-0x8]
  0x00000001219620b0:   mov    DWORD PTR [rsp+0x2c],r13d
  0x00000001219620b5:   mov    DWORD PTR [rsp+0x30],ebx
  0x00000001219620b9:   xchg   ax,ax
  0x00000001219620bb:   call   0x0000000119eb8000           ; ImmutableOopMap {[56]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@91 (line 340)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001219620c0:   mov    esi,0xffffff45
  0x00000001219620c5:   rex.W push QWORD PTR [rsp+0x38]
  0x00000001219620ca:   rex.W pop QWORD PTR [rsp]
  0x00000001219620ce:   mov    QWORD PTR [rsp+0x20],rdx
  0x00000001219620d3:   mov    DWORD PTR [rsp+0x1c],r10d
  0x00000001219620d8:   mov    DWORD PTR [rsp+0x2c],ebx
  0x00000001219620dc:   mov    DWORD PTR [rsp+0x30],ecx
  0x00000001219620e0:   mov    DWORD PTR [rsp+0x34],r13d
  0x00000001219620e5:   xchg   ax,ax
  0x00000001219620e7:   call   0x0000000119eb8000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@132 (line 351)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001219620ec:   mov    esi,0xffffff45
  0x00000001219620f1:   mov    rbp,QWORD PTR [rsp+0x38]
  0x00000001219620f6:   mov    r11d,DWORD PTR [rsp+0xc]
  0x00000001219620fb:   mov    DWORD PTR [rsp+0x4],r11d
  0x0000000121962100:   mov    r11d,DWORD PTR [rsp+0x40]
  0x0000000121962105:   mov    r8d,DWORD PTR [rsp+0x14]
  0x000000012196210a:   mov    DWORD PTR [rsp+0xc],r8d
  0x000000012196210f:   mov    QWORD PTR [rsp-0x8],rax
  0x0000000121962114:   mov    eax,DWORD PTR [rsp+0x18]
  0x0000000121962118:   mov    DWORD PTR [rsp+0x10],eax
  0x000000012196211c:   mov    rax,QWORD PTR [rsp-0x8]
  0x0000000121962121:   mov    QWORD PTR [rsp+0x18],rdx
  0x0000000121962126:   mov    DWORD PTR [rsp+0x14],r10d
  0x000000012196212b:   mov    QWORD PTR [rsp-0x8],rax
  0x0000000121962130:   mov    eax,DWORD PTR [rsp+0x28]
  0x0000000121962134:   mov    DWORD PTR [rsp+0x20],eax
  0x0000000121962138:   mov    rax,QWORD PTR [rsp-0x8]
  0x000000012196213d:   mov    DWORD PTR [rsp+0x24],ebx
  0x0000000121962141:   mov    DWORD PTR [rsp+0x28],ecx
  0x0000000121962145:   vmovss DWORD PTR [rsp+0x2c],xmm1
  0x000000012196214b:   mov    DWORD PTR [rsp+0x30],r9d
  0x0000000121962150:   mov    DWORD PTR [rsp+0x34],r11d
  0x0000000121962155:   xchg   ax,ax
  0x0000000121962157:   call   0x0000000119eb8000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@159 (line 353)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000012196215c:   mov    esi,0xffffffe5
  0x0000000121962161:   mov    rbp,QWORD PTR [rsp+0x38]
  0x0000000121962166:   mov    r8d,DWORD PTR [rsp+0xc]
  0x000000012196216b:   mov    DWORD PTR [rsp+0x4],r8d
  0x0000000121962170:   mov    r8d,DWORD PTR [rsp+0x14]
  0x0000000121962175:   mov    DWORD PTR [rsp+0xc],r8d
  0x000000012196217a:   mov    QWORD PTR [rsp-0x8],rax
  0x000000012196217f:   mov    eax,DWORD PTR [rsp+0x18]
  0x0000000121962183:   mov    DWORD PTR [rsp+0x10],eax
  0x0000000121962187:   mov    rax,QWORD PTR [rsp-0x8]
  0x000000012196218c:   mov    QWORD PTR [rsp+0x18],rdx
  0x0000000121962191:   mov    DWORD PTR [rsp+0x14],r10d
  0x0000000121962196:   mov    QWORD PTR [rsp-0x8],rax
  0x000000012196219b:   mov    eax,DWORD PTR [rsp+0x28]
  0x000000012196219f:   mov    DWORD PTR [rsp+0x20],eax
  0x00000001219621a3:   mov    rax,QWORD PTR [rsp-0x8]
  0x00000001219621a8:   mov    DWORD PTR [rsp+0x24],ebx
  0x00000001219621ac:   mov    DWORD PTR [rsp+0x28],ecx
  0x00000001219621b0:   vmovss DWORD PTR [rsp+0x2c],xmm1
  0x00000001219621b6:   mov    DWORD PTR [rsp+0x30],r9d
  0x00000001219621bb:   mov    DWORD PTR [rsp+0x34],r9d
  0x00000001219621c0:   vmovss DWORD PTR [rsp+0x38],xmm0
  0x00000001219621c6:   nop
  0x00000001219621c7:   call   0x0000000119eb8000           ; ImmutableOopMap {rbp=Oop [56]=NarrowOop }
                                                            ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.StringLatin1::charAt@1 (line 47)
                                                            ; - java.lang.String::charAt@12 (line 1512)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@164 (line 353)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001219621cc:   mov    esi,0xffffff45
  0x00000001219621d1:   mov    rbp,QWORD PTR [rsp+0x38]
  0x00000001219621d6:   mov    DWORD PTR [rsp],r9d
  0x00000001219621da:   mov    r11d,DWORD PTR [rsp+0xc]
  0x00000001219621df:   mov    DWORD PTR [rsp+0x4],r11d
  0x00000001219621e4:   mov    r8d,DWORD PTR [rsp+0x14]
  0x00000001219621e9:   mov    DWORD PTR [rsp+0xc],r8d
  0x00000001219621ee:   mov    QWORD PTR [rsp-0x8],rax
  0x00000001219621f3:   mov    eax,DWORD PTR [rsp+0x18]
  0x00000001219621f7:   mov    DWORD PTR [rsp+0x10],eax
  0x00000001219621fb:   mov    rax,QWORD PTR [rsp-0x8]
  0x0000000121962200:   mov    QWORD PTR [rsp+0x18],rdx
  0x0000000121962205:   mov    DWORD PTR [rsp+0x14],r10d
  0x000000012196220a:   mov    QWORD PTR [rsp-0x8],rax
  0x000000012196220f:   mov    eax,DWORD PTR [rsp+0x28]
  0x0000000121962213:   mov    DWORD PTR [rsp+0x20],eax
  0x0000000121962217:   mov    rax,QWORD PTR [rsp-0x8]
  0x000000012196221c:   mov    DWORD PTR [rsp+0x24],ebx
  0x0000000121962220:   mov    DWORD PTR [rsp+0x28],ecx
  0x0000000121962224:   vmovss DWORD PTR [rsp+0x30],xmm1
  0x000000012196222a:   mov    DWORD PTR [rsp+0x34],edi
  0x000000012196222e:   nop
  0x000000012196222f:   call   0x0000000119eb8000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@179 (line 354)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121962234:   mov    esi,0xffffff45
  0x0000000121962239:   mov    rbp,QWORD PTR [rsp+0x38]
  0x000000012196223e:   mov    DWORD PTR [rsp],r9d
  0x0000000121962242:   mov    r8d,DWORD PTR [rsp+0xc]
  0x0000000121962247:   mov    DWORD PTR [rsp+0x4],r8d
  0x000000012196224c:   mov    r8d,DWORD PTR [rsp+0x14]
  0x0000000121962251:   mov    DWORD PTR [rsp+0xc],r8d
  0x0000000121962256:   mov    QWORD PTR [rsp-0x8],rax
  0x000000012196225b:   mov    eax,DWORD PTR [rsp+0x18]
  0x000000012196225f:   mov    DWORD PTR [rsp+0x10],eax
  0x0000000121962263:   mov    rax,QWORD PTR [rsp-0x8]
  0x0000000121962268:   mov    QWORD PTR [rsp+0x18],rdx
  0x000000012196226d:   mov    DWORD PTR [rsp+0x14],r10d
  0x0000000121962272:   mov    QWORD PTR [rsp-0x8],rax
  0x0000000121962277:   mov    eax,DWORD PTR [rsp+0x28]
  0x000000012196227b:   mov    DWORD PTR [rsp+0x20],eax
  0x000000012196227f:   mov    rax,QWORD PTR [rsp-0x8]
  0x0000000121962284:   mov    DWORD PTR [rsp+0x24],ebx
  0x0000000121962288:   mov    DWORD PTR [rsp+0x28],ecx
  0x000000012196228c:   vmovss DWORD PTR [rsp+0x30],xmm1
  0x0000000121962292:   mov    DWORD PTR [rsp+0x34],edi
  0x0000000121962296:   nop
  0x0000000121962297:   call   0x0000000119eb8000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@198 (line 355)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000012196229c:   mov    esi,0xffffffe5
  0x00000001219622a1:   mov    rbp,QWORD PTR [rsp+0x38]
  0x00000001219622a6:   mov    r10d,DWORD PTR [rsp+0xc]
  0x00000001219622ab:   mov    DWORD PTR [rsp],r10d
  0x00000001219622af:   mov    r9d,DWORD PTR [rsp+0x40]
  0x00000001219622b4:   mov    r10d,DWORD PTR [rsp+0x14]
  0x00000001219622b9:   mov    DWORD PTR [rsp+0x8],r10d
  0x00000001219622be:   mov    QWORD PTR [rsp-0x8],rax
  0x00000001219622c3:   mov    eax,DWORD PTR [rsp+0x18]
  0x00000001219622c7:   mov    DWORD PTR [rsp+0xc],eax
  0x00000001219622cb:   mov    rax,QWORD PTR [rsp-0x8]
  0x00000001219622d0:   mov    QWORD PTR [rsp+0x10],rdx
  0x00000001219622d5:   mov    QWORD PTR [rsp-0x8],rax
  0x00000001219622da:   mov    eax,DWORD PTR [rsp+0x28]
  0x00000001219622de:   mov    DWORD PTR [rsp+0x18],eax
  0x00000001219622e2:   mov    rax,QWORD PTR [rsp-0x8]
  0x00000001219622e7:   vmovss DWORD PTR [rsp+0x1c],xmm2
  0x00000001219622ed:   mov    DWORD PTR [rsp+0x20],ecx
  0x00000001219622f1:   vmovss DWORD PTR [rsp+0x24],xmm1
  0x00000001219622f7:   mov    QWORD PTR [rsp+0x28],r11
  0x00000001219622fc:   mov    DWORD PTR [rsp+0x38],r9d
  0x0000000121962301:   mov    DWORD PTR [rsp+0x40],r8d
  0x0000000121962306:   mov    DWORD PTR [rsp+0x44],r8d
  0x000000012196230b:   mov    DWORD PTR [rsp+0x48],eax
  0x000000012196230f:   vmovss DWORD PTR [rsp+0x4c],xmm0
  0x0000000121962315:   xchg   ax,ax
  0x0000000121962317:   call   0x0000000119eb8000           ; ImmutableOopMap {rbp=Oop [76]=NarrowOop }
                                                            ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.StringLatin1::charAt@1 (line 47)
                                                            ; - java.lang.String::charAt@12 (line 1512)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@9 (line 550)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@313 (line 376)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000012196231c:   mov    rbx,rcx
  0x000000012196231f:   mov    r13d,r10d
  0x0000000121962322:   mov    rcx,rbx
  0x0000000121962325:   mov    r10d,r13d
  0x0000000121962328:   mov    esi,0xffffff45
  0x000000012196232d:   mov    DWORD PTR [rsp+0x8],r10d
  0x0000000121962332:   mov    QWORD PTR [rsp+0x20],rcx
  0x0000000121962337:   mov    QWORD PTR [rsp-0x8],rax
  0x000000012196233c:   mov    eax,DWORD PTR [rsp+0x28]
  0x0000000121962340:   mov    DWORD PTR [rsp+0x1c],eax
  0x0000000121962344:   mov    rax,QWORD PTR [rsp-0x8]
  0x0000000121962349:   xchg   ax,ax
  0x000000012196234b:   call   0x0000000119eb8000           ; ImmutableOopMap {[56]=Oop }
                                                            ;*if_icmpeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@66 (line 331)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121962350:   mov    esi,0xffffff45
  0x0000000121962355:   mov    rbp,QWORD PTR [rsp+0x38]
  0x000000012196235a:   mov    r11d,DWORD PTR [rsp+0xc]
  0x000000012196235f:   mov    DWORD PTR [rsp],r11d
  0x0000000121962363:   vmovsd QWORD PTR [rsp+0x8],xmm0
  0x0000000121962369:   xchg   ax,ax
  0x000000012196236b:   call   0x0000000119eb8000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@473 (line 405)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121962370:   mov    esi,0xffffff45
  0x0000000121962375:   mov    rbp,QWORD PTR [rsp+0x38]
  0x000000012196237a:   mov    DWORD PTR [rsp],r8d
  0x000000012196237e:   mov    r8d,DWORD PTR [rsp+0xc]
  0x0000000121962383:   mov    DWORD PTR [rsp+0x4],r8d
  0x0000000121962388:   mov    r10d,DWORD PTR [rsp+0x14]
  0x000000012196238d:   mov    DWORD PTR [rsp+0xc],r10d
  0x0000000121962392:   mov    QWORD PTR [rsp+0x10],rdx
  0x0000000121962397:   mov    QWORD PTR [rsp-0x8],rax
  0x000000012196239c:   mov    eax,DWORD PTR [rsp+0x28]
  0x00000001219623a0:   mov    DWORD PTR [rsp+0x18],eax
  0x00000001219623a4:   mov    rax,QWORD PTR [rsp-0x8]
  0x00000001219623a9:   vmovss DWORD PTR [rsp+0x1c],xmm2
  0x00000001219623af:   mov    DWORD PTR [rsp+0x20],ecx
  0x00000001219623b3:   vmovss DWORD PTR [rsp+0x24],xmm1
  0x00000001219623b9:   mov    QWORD PTR [rsp+0x28],r11
  0x00000001219623be:   mov    DWORD PTR [rsp+0x30],r13d
  0x00000001219623c3:   mov    DWORD PTR [rsp+0x34],r9d
  0x00000001219623c8:   data16 xchg ax,ax
  0x00000001219623cb:   call   0x0000000119eb8000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@324 (line 377)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001219623d0:   mov    esi,0xffffff45
  0x00000001219623d5:   mov    rbp,QWORD PTR [rsp+0x38]
  0x00000001219623da:   mov    DWORD PTR [rsp],r8d
  0x00000001219623de:   mov    r8d,DWORD PTR [rsp+0xc]
  0x00000001219623e3:   mov    DWORD PTR [rsp+0x4],r8d
  0x00000001219623e8:   mov    r10d,DWORD PTR [rsp+0x14]
  0x00000001219623ed:   mov    DWORD PTR [rsp+0xc],r10d
  0x00000001219623f2:   mov    QWORD PTR [rsp+0x10],rdx
  0x00000001219623f7:   mov    QWORD PTR [rsp-0x8],rax
  0x00000001219623fc:   mov    eax,DWORD PTR [rsp+0x28]
  0x0000000121962400:   mov    DWORD PTR [rsp+0x18],eax
  0x0000000121962404:   mov    rax,QWORD PTR [rsp-0x8]
  0x0000000121962409:   vmovss DWORD PTR [rsp+0x1c],xmm2
  0x000000012196240f:   vmovss DWORD PTR [rsp+0x24],xmm1
  0x0000000121962415:   mov    QWORD PTR [rsp+0x28],r11
  0x000000012196241a:   mov    DWORD PTR [rsp+0x30],ecx
  0x000000012196241e:   mov    DWORD PTR [rsp+0x34],r9d
  0x0000000121962423:   call   0x0000000119eb8000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@329 (line 377)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121962428:   mov    esi,0xffffff45
  0x000000012196242d:   mov    rbp,QWORD PTR [rsp+0x38]
  0x0000000121962432:   mov    DWORD PTR [rsp],r8d
  0x0000000121962436:   mov    r10d,DWORD PTR [rsp+0xc]
  0x000000012196243b:   mov    DWORD PTR [rsp+0x4],r10d
  0x0000000121962440:   mov    r10d,DWORD PTR [rsp+0x14]
  0x0000000121962445:   mov    DWORD PTR [rsp+0xc],r10d
  0x000000012196244a:   mov    QWORD PTR [rsp+0x10],rdx
  0x000000012196244f:   mov    QWORD PTR [rsp-0x8],rax
  0x0000000121962454:   mov    eax,DWORD PTR [rsp+0x28]
  0x0000000121962458:   mov    DWORD PTR [rsp+0x18],eax
  0x000000012196245c:   mov    rax,QWORD PTR [rsp-0x8]
  0x0000000121962461:   vmovss DWORD PTR [rsp+0x1c],xmm2
  0x0000000121962467:   vmovss DWORD PTR [rsp+0x20],xmm1
  0x000000012196246d:   mov    QWORD PTR [rsp+0x28],r11
  0x0000000121962472:   mov    DWORD PTR [rsp+0x24],ecx
  0x0000000121962476:   mov    DWORD PTR [rsp+0x30],r9d
  0x000000012196247b:   call   0x0000000119eb8000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@359 (line 386)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121962480:   cmp    rdx,rbx
  0x0000000121962483:   mov    ebp,0xffffffff
  0x0000000121962488:   jl     0x0000000121962492
  0x000000012196248a:   setne  bpl
  0x000000012196248e:   movzx  ebp,bpl
  0x0000000121962492:   mov    esi,0xffffff45
  0x0000000121962497:   mov    r10d,DWORD PTR [rsp+0xc]
  0x000000012196249c:   mov    DWORD PTR [rsp+0x8],r10d
  0x00000001219624a1:   mov    DWORD PTR [rsp+0x10],r8d
  0x00000001219624a6:   mov    QWORD PTR [rsp+0x18],rdx
  0x00000001219624ab:   vmovss DWORD PTR [rsp+0x20],xmm2
  0x00000001219624b1:   mov    QWORD PTR [rsp+0x28],r11
  0x00000001219624b6:   mov    DWORD PTR [rsp+0x24],r9d
  0x00000001219624bb:   call   0x0000000119eb8000           ; ImmutableOopMap {[56]=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleMath::decFloatLiteralToDouble@3 (line 738)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@463 (line 404)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001219624c0:   mov    esi,0xffffff3d
  0x00000001219624c5:   mov    rbp,QWORD PTR [rsp+0x38]
  0x00000001219624ca:   mov    r11d,DWORD PTR [rsp+0xc]
  0x00000001219624cf:   mov    DWORD PTR [rsp],r11d
  0x00000001219624d3:   mov    r11d,DWORD PTR [rsp+0x14]
  0x00000001219624d8:   mov    DWORD PTR [rsp+0x8],r11d
  0x00000001219624dd:   mov    QWORD PTR [rsp+0x10],rdx
  0x00000001219624e2:   mov    DWORD PTR [rsp+0x18],r9d
  0x00000001219624e7:   call   0x0000000119eb8000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpgt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleMath::decFloatLiteralToDouble@116 (line 762)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@463 (line 404)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001219624ec:   mov    rbx,rcx
  0x00000001219624ef:   mov    r10d,r13d
  0x00000001219624f2:   inc    r10d
  0x00000001219624f5:   jmp    0x0000000121962033
  0x00000001219624fa:   mov    r11d,eax
  0x00000001219624fd:   data16 xchg ax,ax
  0x0000000121962500:   jmp    0x0000000121961f5e
  0x0000000121962505:   mov    rsi,rax
  0x0000000121962508:   add    rsp,0x60
  0x000000012196250c:   pop    rbp
  0x000000012196250d:   jmp    0x0000000119f67700           ;   {runtime_call _rethrow_Java}
  0x0000000121962512:   movabs r10,0x121961cd5              ;   {internal_word}
  0x000000012196251c:   mov    QWORD PTR [r15+0x358],r10
  0x0000000121962523:   jmp    0x0000000119eb9100           ;   {runtime_call SafepointBlob}
  0x0000000121962528:   hlt    
  0x0000000121962529:   hlt    
  0x000000012196252a:   hlt    
  0x000000012196252b:   hlt    
  0x000000012196252c:   hlt    
  0x000000012196252d:   hlt    
  0x000000012196252e:   hlt    
  0x000000012196252f:   hlt    
  0x0000000121962530:   hlt    
  0x0000000121962531:   hlt    
  0x0000000121962532:   hlt    
  0x0000000121962533:   hlt    
  0x0000000121962534:   hlt    
  0x0000000121962535:   hlt    
  0x0000000121962536:   hlt    
  0x0000000121962537:   hlt    
  0x0000000121962538:   hlt    
  0x0000000121962539:   hlt    
  0x000000012196253a:   hlt    
  0x000000012196253b:   hlt    
  0x000000012196253c:   hlt    
  0x000000012196253d:   hlt    
  0x000000012196253e:   hlt    
  0x000000012196253f:   hlt    
[Stub Code]
  0x0000000121962540:   movabs rbx,0x0                      ;   {no_reloc}
  0x000000012196254a:   jmp    0x000000012196254a           ;   {runtime_call const_jargs+-267182177}
[Exception Handler]
  0x000000012196254f:   jmp    0x0000000119f57880           ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000121962554:   call   0x0000000121962559
  0x0000000121962559:   sub    QWORD PTR [rsp],0x5
  0x000000012196255e:   jmp    0x0000000119eb83a0           ;   {runtime_call DeoptimizationBlob}
  0x0000000121962563:   hlt    
  0x0000000121962564:   hlt    
  0x0000000121962565:   hlt    
  0x0000000121962566:   hlt    
  0x0000000121962567:   hlt    
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     466  602       4       ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble (213 bytes)
 total in heap  [0x0000000121964b90,0x0000000121965438] = 2216
 relocation     [0x0000000121964cf0,0x0000000121964d38] = 72
 main code      [0x0000000121964d40,0x0000000121965040] = 768
 stub code      [0x0000000121965040,0x0000000121965068] = 40
 oops           [0x0000000121965068,0x0000000121965070] = 8
 metadata       [0x0000000121965070,0x00000001219650a0] = 48
 scopes data    [0x00000001219650a0,0x00000001219652b0] = 528
 scopes pcs     [0x00000001219652b0,0x00000001219653f0] = 320
 dependencies   [0x00000001219653f0,0x00000001219653f8] = 8
 handler table  [0x00000001219653f8,0x0000000121965410] = 24
 nul chk table  [0x0000000121965410,0x0000000121965438] = 40

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013d4a8cf0} 'parseDouble' '(Ljava/lang/CharSequence;II)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser'
  # parm0:    rsi:rsi   = 'java/lang/CharSequence'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x50]  (sp of caller)
  0x0000000121964d40:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000121964d47:   push   rbp
  0x0000000121964d48:   sub    rsp,0x40
  0x0000000121964d4c:   mov    r8d,ecx
  0x0000000121964d4f:   add    r8d,edx
  0x0000000121964d52:   movsxd r9,edx
  0x0000000121964d55:   cmp    edx,r8d
  0x0000000121964d58:   jge    0x0000000121964daa
  0x0000000121964d5e:   xchg   ax,ax
  0x0000000121964d60:   mov    r10d,DWORD PTR [rsi+0x8]     ; implicit exception: dispatches to 0x0000000121964ff0
  0x0000000121964d64:   cmp    r10d,0xe4a0                  ;   {metadata('java/lang/String')}
  0x0000000121964d6b:   jne    0x0000000121964e6c
  0x0000000121964d71:   mov    rcx,rsi
  0x0000000121964d74:   movsx  ebp,BYTE PTR [rcx+0x10]
  0x0000000121964d78:   test   ebp,ebp
  0x0000000121964d7a:   nop    WORD PTR [rax+rax*1+0x0]
  0x0000000121964d80:   jne    0x0000000121964f5c
  0x0000000121964d86:   mov    ebp,DWORD PTR [rcx+0x14]
  0x0000000121964d89:   mov    r11d,DWORD PTR [r12+rbp*8+0xc]; implicit exception: dispatches to 0x0000000121964ffc
  0x0000000121964d8e:   cmp    edx,r11d
  0x0000000121964d91:   jae    0x0000000121964f98
  0x0000000121964d97:   lea    r10,[r12+rbp*8]
  0x0000000121964d9b:   movzx  ebp,BYTE PTR [r10+r9*1+0x10]
  0x0000000121964da1:   cmp    ebp,0x20
  0x0000000121964da4:   jle    0x0000000121964f7c
  0x0000000121964daa:   cmp    edx,r8d
  0x0000000121964dad:   je     0x0000000121964eac
  0x0000000121964db3:   mov    r10d,DWORD PTR [rsi+0x8]     ; implicit exception: dispatches to 0x0000000121964fc5
  0x0000000121964db7:   nop    WORD PTR [rax+rax*1+0x0]
  0x0000000121964dc0:   cmp    r10d,0xe4a0                  ;   {metadata('java/lang/String')}
  0x0000000121964dc7:   jne    0x0000000121964e4f
  0x0000000121964dcd:   movsx  ebp,BYTE PTR [rsi+0x10]
  0x0000000121964dd1:   test   ebp,ebp
  0x0000000121964dd3:   jne    0x0000000121964e90
  0x0000000121964dd9:   mov    ebp,DWORD PTR [rsi+0x14]
  0x0000000121964ddc:   nop    DWORD PTR [rax+0x0]
  0x0000000121964de0:   mov    r11d,DWORD PTR [r12+rbp*8+0xc]; implicit exception: dispatches to 0x0000000121964fd4
  0x0000000121964de5:   cmp    edx,r11d
  0x0000000121964de8:   jae    0x0000000121964ec8
  0x0000000121964dee:   lea    r10,[r12+rbp*8]
  0x0000000121964df2:   movzx  ebp,BYTE PTR [r10+r9*1+0x10]
  0x0000000121964df8:   cmp    ebp,0x2d
  0x0000000121964dfb:   nop    DWORD PTR [rax+rax*1+0x0]
  0x0000000121964e00:   je     0x0000000121964ee4
  0x0000000121964e06:   cmp    ebp,0x2b
  0x0000000121964e09:   je     0x0000000121964efc
  0x0000000121964e0f:   cmp    ebp,0x4e
  0x0000000121964e12:   je     0x0000000121964f14
  0x0000000121964e18:   cmp    ebp,0x49
  0x0000000121964e1b:   nop    DWORD PTR [rax+rax*1+0x0]
  0x0000000121964e20:   je     0x0000000121964f2c
  0x0000000121964e26:   cmp    ebp,0x30
  0x0000000121964e29:   je     0x0000000121964f44
  0x0000000121964e2f:   mov    ecx,edx
  0x0000000121964e31:   xor    r9d,r9d
  0x0000000121964e34:   xor    edi,edi
  0x0000000121964e36:   nop
  0x0000000121964e37:   call   0x000000011a4d14a0           ; ImmutableOopMap {}
                                                            ;*invokestatic parseRestOfDecimalFloatLiteral {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@209 (line 255)
                                                            ;   {static_call}
  0x0000000121964e3c:   add    rsp,0x40
  0x0000000121964e40:   pop    rbp
  0x0000000121964e41:   cmp    rsp,QWORD PTR [r15+0x340]    ;   {poll_return}
  0x0000000121964e48:   ja     0x000000012196501c
  0x0000000121964e4e:   ret    
  0x0000000121964e4f:   mov    DWORD PTR [rsp+0x4],r8d
  0x0000000121964e54:   mov    DWORD PTR [rsp+0x8],edx
  0x0000000121964e58:   mov    QWORD PTR [rsp+0x10],rsi
  0x0000000121964e5d:   mov    DWORD PTR [rsp+0xc],edx
  0x0000000121964e61:   mov    esi,0xffffffde
  0x0000000121964e66:   nop
  0x0000000121964e67:   call   0x0000000119eb8000           ; ImmutableOopMap {[16]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@31 (line 225)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121964e6c:   mov    QWORD PTR [rsp+0x8],rsi
  0x0000000121964e71:   mov    DWORD PTR [rsp+0x10],r8d
  0x0000000121964e76:   mov    DWORD PTR [rsp+0x14],edx
  0x0000000121964e7a:   mov    QWORD PTR [rsp+0x18],rsi
  0x0000000121964e7f:   mov    DWORD PTR [rsp+0x20],edx
  0x0000000121964e83:   mov    esi,0xffffffde
  0x0000000121964e88:   data16 xchg ax,ax
  0x0000000121964e8b:   call   0x0000000119eb8000           ; ImmutableOopMap {[8]=Oop [24]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@9 (line 550)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@7 (line 221)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121964e90:   mov    DWORD PTR [rsp+0xc],r8d
  0x0000000121964e95:   mov    DWORD PTR [rsp+0x10],edx
  0x0000000121964e99:   mov    QWORD PTR [rsp+0x18],rsi
  0x0000000121964e9e:   mov    DWORD PTR [rsp+0x14],edx
  0x0000000121964ea2:   mov    esi,0xffffff45
  0x0000000121964ea7:   call   0x0000000119eb8000           ; ImmutableOopMap {[24]=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.String::isLatin1@10 (line 4548)
                                                            ; - java.lang.String::charAt@1 (line 1511)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@31 (line 225)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121964eac:   mov    rbp,rsi
  0x0000000121964eaf:   mov    DWORD PTR [rsp+0x8],edx
  0x0000000121964eb3:   mov    DWORD PTR [rsp+0xc],edx
  0x0000000121964eb7:   mov    DWORD PTR [rsp+0x10],r8d
  0x0000000121964ebc:   mov    esi,0xffffff45
  0x0000000121964ec1:   xchg   ax,ax
  0x0000000121964ec3:   call   0x0000000119eb8000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@15 (line 222)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121964ec8:   mov    QWORD PTR [rsp],rsi
  0x0000000121964ecc:   mov    DWORD PTR [rsp+0xc],r8d
  0x0000000121964ed1:   mov    DWORD PTR [rsp+0x10],edx
  0x0000000121964ed5:   mov    DWORD PTR [rsp+0x14],edx
  0x0000000121964ed9:   mov    esi,0xffffffe5
  0x0000000121964ede:   nop
  0x0000000121964edf:   call   0x0000000119eb8000           ; ImmutableOopMap {rbp=NarrowOop [0]=Oop }
                                                            ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.StringLatin1::charAt@1 (line 47)
                                                            ; - java.lang.String::charAt@12 (line 1512)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@31 (line 225)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121964ee4:   mov    QWORD PTR [rsp],rsi
  0x0000000121964ee8:   mov    DWORD PTR [rsp+0xc],r8d
  0x0000000121964eed:   mov    DWORD PTR [rsp+0x10],edx
  0x0000000121964ef1:   mov    esi,0xffffff45
  0x0000000121964ef6:   nop
  0x0000000121964ef7:   call   0x0000000119eb8000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@42 (line 229)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121964efc:   mov    QWORD PTR [rsp],rsi
  0x0000000121964f00:   mov    DWORD PTR [rsp+0xc],r8d
  0x0000000121964f05:   mov    DWORD PTR [rsp+0x10],edx
  0x0000000121964f09:   mov    esi,0xffffff45
  0x0000000121964f0e:   nop
  0x0000000121964f0f:   call   0x0000000119eb8000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@61 (line 230)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121964f14:   mov    QWORD PTR [rsp],rsi
  0x0000000121964f18:   mov    DWORD PTR [rsp+0xc],r8d
  0x0000000121964f1d:   mov    DWORD PTR [rsp+0x10],edx
  0x0000000121964f21:   mov    esi,0xffffff45
  0x0000000121964f26:   nop
  0x0000000121964f27:   call   0x0000000119eb8000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@103 (line 239)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121964f2c:   mov    QWORD PTR [rsp],rsi
  0x0000000121964f30:   mov    DWORD PTR [rsp+0xc],r8d
  0x0000000121964f35:   mov    DWORD PTR [rsp+0x10],edx
  0x0000000121964f39:   mov    esi,0xffffff45
  0x0000000121964f3e:   nop
  0x0000000121964f3f:   call   0x0000000119eb8000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@118 (line 241)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121964f44:   mov    QWORD PTR [rsp],rsi
  0x0000000121964f48:   mov    DWORD PTR [rsp+0xc],r8d
  0x0000000121964f4d:   mov    DWORD PTR [rsp+0x10],edx
  0x0000000121964f51:   mov    esi,0xffffff45
  0x0000000121964f56:   nop
  0x0000000121964f57:   call   0x0000000119eb8000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@135 (line 247)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121964f5c:   mov    QWORD PTR [rsp],rsi
  0x0000000121964f60:   mov    DWORD PTR [rsp+0x10],r8d
  0x0000000121964f65:   mov    DWORD PTR [rsp+0x14],edx
  0x0000000121964f69:   mov    DWORD PTR [rsp+0x18],edx
  0x0000000121964f6d:   mov    QWORD PTR [rsp+0x28],rcx
  0x0000000121964f72:   mov    esi,0xffffff45
  0x0000000121964f77:   call   0x0000000119eb8000           ; ImmutableOopMap {[0]=Oop [40]=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.String::isLatin1@10 (line 4548)
                                                            ; - java.lang.String::charAt@1 (line 1511)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@9 (line 550)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@7 (line 221)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121964f7c:   mov    QWORD PTR [rsp],rsi
  0x0000000121964f80:   mov    DWORD PTR [rsp+0x10],r8d
  0x0000000121964f85:   mov    DWORD PTR [rsp+0x14],edx
  0x0000000121964f89:   mov    QWORD PTR [rsp+0x18],rcx
  0x0000000121964f8e:   mov    esi,0xffffff45
  0x0000000121964f93:   call   0x0000000119eb8000           ; ImmutableOopMap {[0]=Oop [24]=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@16 (line 550)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@7 (line 221)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121964f98:   mov    QWORD PTR [rsp],rsi
  0x0000000121964f9c:   mov    DWORD PTR [rsp+0x10],r8d
  0x0000000121964fa1:   mov    DWORD PTR [rsp+0x14],edx
  0x0000000121964fa5:   mov    DWORD PTR [rsp+0x18],edx
  0x0000000121964fa9:   mov    QWORD PTR [rsp+0x20],rcx
  0x0000000121964fae:   mov    esi,0xffffffe5
  0x0000000121964fb3:   call   0x0000000119eb8000           ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [32]=Oop }
                                                            ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.StringLatin1::charAt@1 (line 47)
                                                            ; - java.lang.String::charAt@12 (line 1512)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@9 (line 550)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@7 (line 221)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121964fb8:   mov    rsi,rax
  0x0000000121964fbb:   add    rsp,0x40
  0x0000000121964fbf:   pop    rbp
  0x0000000121964fc0:   jmp    0x0000000119f67700           ;   {runtime_call _rethrow_Java}
  0x0000000121964fc5:   mov    esi,0xfffffff6
  0x0000000121964fca:   mov    ebp,edx
  0x0000000121964fcc:   data16 xchg ax,ax
  0x0000000121964fcf:   call   0x0000000119eb8000           ; ImmutableOopMap {}
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@31 (line 225)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121964fd4:   mov    QWORD PTR [rsp],rsi
  0x0000000121964fd8:   mov    DWORD PTR [rsp+0xc],r8d
  0x0000000121964fdd:   mov    DWORD PTR [rsp+0x10],edx
  0x0000000121964fe1:   mov    DWORD PTR [rsp+0x14],edx
  0x0000000121964fe5:   mov    esi,0xfffffff6
  0x0000000121964fea:   nop
  0x0000000121964feb:   call   0x0000000119eb8000           ; ImmutableOopMap {rbp=NarrowOop [0]=Oop }
                                                            ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.StringLatin1::charAt@1 (line 47)
                                                            ; - java.lang.String::charAt@12 (line 1512)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@31 (line 225)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121964ff0:   mov    esi,0xfffffff6
  0x0000000121964ff5:   mov    ebp,edx
  0x0000000121964ff7:   call   0x0000000119eb8000           ; ImmutableOopMap {}
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@9 (line 550)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@7 (line 221)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121964ffc:   mov    QWORD PTR [rsp],rsi
  0x0000000121965000:   mov    DWORD PTR [rsp+0x10],r8d
  0x0000000121965005:   mov    DWORD PTR [rsp+0x14],edx
  0x0000000121965009:   mov    DWORD PTR [rsp+0x18],edx
  0x000000012196500d:   mov    QWORD PTR [rsp+0x20],rcx
  0x0000000121965012:   mov    esi,0xfffffff6
  0x0000000121965017:   call   0x0000000119eb8000           ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [32]=Oop }
                                                            ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.StringLatin1::charAt@1 (line 47)
                                                            ; - java.lang.String::charAt@12 (line 1512)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@9 (line 550)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseDouble@7 (line 221)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000012196501c:   movabs r10,0x121964e41              ;   {internal_word}
  0x0000000121965026:   mov    QWORD PTR [r15+0x358],r10
  0x000000012196502d:   jmp    0x0000000119eb9100           ;   {runtime_call SafepointBlob}
  0x0000000121965032:   hlt    
  0x0000000121965033:   hlt    
  0x0000000121965034:   hlt    
  0x0000000121965035:   hlt    
  0x0000000121965036:   hlt    
  0x0000000121965037:   hlt    
  0x0000000121965038:   hlt    
  0x0000000121965039:   hlt    
  0x000000012196503a:   hlt    
  0x000000012196503b:   hlt    
  0x000000012196503c:   hlt    
  0x000000012196503d:   hlt    
  0x000000012196503e:   hlt    
  0x000000012196503f:   hlt    
[Stub Code]
  0x0000000121965040:   movabs rbx,0x0                      ;   {no_reloc}
  0x000000012196504a:   jmp    0x000000012196504a           ;   {runtime_call const_jargs+-267182177}
[Exception Handler]
  0x000000012196504f:   jmp    0x0000000119f57880           ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000121965054:   call   0x0000000121965059
  0x0000000121965059:   sub    QWORD PTR [rsp],0x5
  0x000000012196505e:   jmp    0x0000000119eb83a0           ;   {runtime_call DeoptimizationBlob}
  0x0000000121965063:   hlt    
  0x0000000121965064:   hlt    
  0x0000000121965065:   hlt    
  0x0000000121965066:   hlt    
  0x0000000121965067:   hlt    
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     474  597       4       ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace (30 bytes)
 total in heap  [0x0000000121965a90,0x0000000121965ec0] = 1072
 relocation     [0x0000000121965bf0,0x0000000121965c10] = 32
 main code      [0x0000000121965c20,0x0000000121965d40] = 288
 stub code      [0x0000000121965d40,0x0000000121965d58] = 24
 oops           [0x0000000121965d58,0x0000000121965d60] = 8
 metadata       [0x0000000121965d60,0x0000000121965d88] = 40
 scopes data    [0x0000000121965d88,0x0000000121965e20] = 152
 scopes pcs     [0x0000000121965e20,0x0000000121965ea0] = 128
 dependencies   [0x0000000121965ea0,0x0000000121965ea8] = 8
 nul chk table  [0x0000000121965ea8,0x0000000121965ec0] = 24

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013d4a9ac0} 'skipWhitespace' '(Ljava/lang/CharSequence;II)I' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser'
  # parm0:    rsi:rsi   = 'java/lang/CharSequence'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000121965c20:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000121965c27:   push   rbp
  0x0000000121965c28:   sub    rsp,0x30
  0x0000000121965c2c:   cmp    edx,ecx
  0x0000000121965c2e:   jge    0x0000000121965c7d
  0x0000000121965c34:   mov    r11d,DWORD PTR [rsi+0x8]     ; implicit exception: dispatches to 0x0000000121965cf4
  0x0000000121965c38:   nop    DWORD PTR [rax+rax*1+0x0]
  0x0000000121965c40:   cmp    r11d,0xe4a0                  ;   {metadata('java/lang/String')}
  0x0000000121965c47:   jne    0x0000000121965c92
  0x0000000121965c4d:   movsx  ebp,BYTE PTR [rsi+0x10]
  0x0000000121965c51:   test   ebp,ebp
  0x0000000121965c53:   jne    0x0000000121965ca8
  0x0000000121965c59:   mov    ebp,DWORD PTR [rsi+0x14]
  0x0000000121965c5c:   nop    DWORD PTR [rax+0x0]
  0x0000000121965c60:   mov    r10d,DWORD PTR [r12+rbp*8+0xc]; implicit exception: dispatches to 0x0000000121965d00
  0x0000000121965c65:   cmp    edx,r10d
  0x0000000121965c68:   jae    0x0000000121965cd8
  0x0000000121965c6e:   lea    r10,[r12+rbp*8]
  0x0000000121965c72:   movzx  ebp,BYTE PTR [r10+rdx*1+0x10]
  0x0000000121965c78:   cmp    ebp,0x20
  0x0000000121965c7b:   jle    0x0000000121965cc0
  0x0000000121965c7d:   mov    eax,edx
  0x0000000121965c7f:   add    rsp,0x30
  0x0000000121965c83:   pop    rbp
  0x0000000121965c84:   cmp    rsp,QWORD PTR [r15+0x340]    ;   {poll_return}
  0x0000000121965c8b:   ja     0x0000000121965d1c
  0x0000000121965c91:   ret    
  0x0000000121965c92:   mov    DWORD PTR [rsp],ecx
  0x0000000121965c95:   mov    QWORD PTR [rsp+0x8],rsi
  0x0000000121965c9a:   mov    DWORD PTR [rsp+0x10],edx
  0x0000000121965c9e:   mov    esi,0xffffffde
  0x0000000121965ca3:   call   0x0000000119eb8000           ; ImmutableOopMap {[8]=Oop }
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@9 (line 550)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121965ca8:   mov    DWORD PTR [rsp+0x8],ecx
  0x0000000121965cac:   mov    QWORD PTR [rsp+0x10],rsi
  0x0000000121965cb1:   mov    DWORD PTR [rsp+0x18],edx
  0x0000000121965cb5:   mov    esi,0xffffff45
  0x0000000121965cba:   nop
  0x0000000121965cbb:   call   0x0000000119eb8000           ; ImmutableOopMap {[16]=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.String::isLatin1@10 (line 4548)
                                                            ; - java.lang.String::charAt@1 (line 1511)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@9 (line 550)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121965cc0:   mov    QWORD PTR [rsp],rsi
  0x0000000121965cc4:   mov    DWORD PTR [rsp+0x8],ecx
  0x0000000121965cc8:   mov    DWORD PTR [rsp+0xc],edx
  0x0000000121965ccc:   mov    esi,0xffffff45
  0x0000000121965cd1:   xchg   ax,ax
  0x0000000121965cd3:   call   0x0000000119eb8000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@16 (line 550)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121965cd8:   mov    QWORD PTR [rsp],rsi
  0x0000000121965cdc:   mov    DWORD PTR [rsp+0x8],ecx
  0x0000000121965ce0:   mov    DWORD PTR [rsp+0x10],edx
  0x0000000121965ce4:   mov    DWORD PTR [rsp+0x14],edx
  0x0000000121965ce8:   mov    esi,0xffffffe5
  0x0000000121965ced:   xchg   ax,ax
  0x0000000121965cef:   call   0x0000000119eb8000           ; ImmutableOopMap {rbp=NarrowOop [0]=Oop }
                                                            ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.StringLatin1::charAt@1 (line 47)
                                                            ; - java.lang.String::charAt@12 (line 1512)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@9 (line 550)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121965cf4:   mov    esi,0xfffffff6
  0x0000000121965cf9:   mov    ebp,edx
  0x0000000121965cfb:   call   0x0000000119eb8000           ; ImmutableOopMap {}
                                                            ;*invokeinterface charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@9 (line 550)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121965d00:   mov    QWORD PTR [rsp],rsi
  0x0000000121965d04:   mov    DWORD PTR [rsp+0x8],ecx
  0x0000000121965d08:   mov    DWORD PTR [rsp+0x10],edx
  0x0000000121965d0c:   mov    DWORD PTR [rsp+0x14],edx
  0x0000000121965d10:   mov    esi,0xfffffff6
  0x0000000121965d15:   xchg   ax,ax
  0x0000000121965d17:   call   0x0000000119eb8000           ; ImmutableOopMap {rbp=NarrowOop [0]=Oop }
                                                            ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.StringLatin1::charAt@1 (line 47)
                                                            ; - java.lang.String::charAt@12 (line 1512)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@9 (line 550)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121965d1c:   movabs r10,0x121965c84              ;   {internal_word}
  0x0000000121965d26:   mov    QWORD PTR [r15+0x358],r10
  0x0000000121965d2d:   jmp    0x0000000119eb9100           ;   {runtime_call SafepointBlob}
  0x0000000121965d32:   hlt    
  0x0000000121965d33:   hlt    
  0x0000000121965d34:   hlt    
  0x0000000121965d35:   hlt    
  0x0000000121965d36:   hlt    
  0x0000000121965d37:   hlt    
  0x0000000121965d38:   hlt    
  0x0000000121965d39:   hlt    
  0x0000000121965d3a:   hlt    
  0x0000000121965d3b:   hlt    
  0x0000000121965d3c:   hlt    
  0x0000000121965d3d:   hlt    
  0x0000000121965d3e:   hlt    
  0x0000000121965d3f:   hlt    
[Exception Handler]
  0x0000000121965d40:   jmp    0x0000000119f57880           ;   {no_reloc}
[Deopt Handler Code]
  0x0000000121965d45:   call   0x0000000121965d4a
  0x0000000121965d4a:   sub    QWORD PTR [rsp],0x5
  0x0000000121965d4f:   jmp    0x0000000119eb83a0           ;   {runtime_call DeoptimizationBlob}
  0x0000000121965d54:   hlt    
  0x0000000121965d55:   hlt    
  0x0000000121965d56:   hlt    
  0x0000000121965d57:   hlt    
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     481  610       4       ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral (488 bytes)
 total in heap  [0x0000000121966290,0x0000000121967888] = 5624
 relocation     [0x00000001219663f0,0x0000000121966440] = 80
 main code      [0x0000000121966440,0x0000000121966f60] = 2848
 stub code      [0x0000000121966f60,0x0000000121966f88] = 40
 oops           [0x0000000121966f88,0x0000000121966f90] = 8
 metadata       [0x0000000121966f90,0x0000000121966fc0] = 48
 scopes data    [0x0000000121966fc0,0x00000001219676a0] = 1760
 scopes pcs     [0x00000001219676a0,0x0000000121967850] = 432
 dependencies   [0x0000000121967850,0x0000000121967858] = 8
 handler table  [0x0000000121967858,0x0000000121967870] = 24
 nul chk table  [0x0000000121967870,0x0000000121967888] = 24

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000000013d4a9358} 'parseRestOfDecimalFloatLiteral' '(Ljava/lang/CharSequence;IIIZZ)D' in 'ch/randelshofer/fastdoubleparser/FastDoubleParser'
  # parm0:    rsi:rsi   = 'java/lang/CharSequence'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  # parm3:    r8        = int
  # parm4:    r9        = boolean
  # parm5:    rdi       = boolean
  #           [sp+0x70]  (sp of caller)
  0x0000000121966440:   mov    DWORD PTR [rsp-0x14000],eax
  0x0000000121966447:   push   rbp
  0x0000000121966448:   sub    rsp,0x60
  0x000000012196644c:   vmovd  xmm3,edi
  0x0000000121966450:   vmovd  xmm1,r9d
  0x0000000121966455:   mov    DWORD PTR [rsp+0xc],ecx
  0x0000000121966459:   mov    r10,rsi
  0x000000012196645c:   mov    DWORD PTR [rsp+0x40],r8d
  0x0000000121966461:   cmp    edx,r8d
  0x0000000121966464:   jge    0x0000000121966ac0
  0x000000012196646a:   mov    r11d,DWORD PTR [rsi+0x8]     ; implicit exception: dispatches to 0x00000001219668fc
  0x000000012196646e:   cmp    r11d,0xe4a0                  ;   {metadata('java/lang/String')}
  0x0000000121966475:   jne    0x00000001219668fc
  0x000000012196647b:   mov    r9,rsi
  0x000000012196647e:   xchg   ax,ax
  0x0000000121966480:   cmp    BYTE PTR [r9+0x10],0x0
  0x0000000121966485:   jne    0x00000001219668fc
  0x000000012196648b:   mov    r8d,DWORD PTR [r9+0x14]
  0x000000012196648f:   mov    r11d,DWORD PTR [r12+r8*8+0xc]; implicit exception: dispatches to 0x00000001219668fc
  0x0000000121966494:   cmp    edx,r11d
  0x0000000121966497:   jae    0x00000001219668fc
  0x000000012196649d:   movsxd rcx,r11d
  0x00000001219664a0:   movsxd rbx,DWORD PTR [rsp+0x40]
  0x00000001219664a5:   dec    rbx
  0x00000001219664a8:   cmp    rbx,rcx
  0x00000001219664ab:   jae    0x00000001219668fc
  0x00000001219664b1:   lea    rax,[r12+r8*8]
  0x00000001219664b5:   mov    esi,edx
  0x00000001219664b7:   inc    esi
  0x00000001219664b9:   xor    r10d,r10d
  0x00000001219664bc:   mov    edi,edx
  0x00000001219664be:   xor    ebx,ebx
  0x00000001219664c0:   mov    DWORD PTR [rsp+0x28],edx
  0x00000001219664c4:   mov    QWORD PTR [rsp+0x38],r9
  0x00000001219664c9:   vmovd  xmm0,r8d
  0x00000001219664ce:   mov    r9d,0xffffffff
  0x00000001219664d4:   movzx  r8d,BYTE PTR [rax+rdi*1+0x10]
  0x00000001219664da:   mov    ecx,r8d
  0x00000001219664dd:   add    ecx,0xffffffd0
  0x00000001219664e0:   cmp    ecx,0xa
  0x00000001219664e3:   jae    0x000000012196684b
  0x00000001219664e9:   mov    rcx,rbx
  0x00000001219664ec:   shl    rcx,0x3
  0x00000001219664f0:   movsxd rdx,r8d
  0x00000001219664f3:   shl    rbx,1
  0x00000001219664f6:   add    rbx,rcx
  0x00000001219664f9:   add    rbx,rdx
  0x00000001219664fc:   add    rbx,0xffffffffffffffd0
  0x0000000121966500:   mov    ecx,edi
  0x0000000121966502:   inc    ecx
  0x0000000121966504:   cmp    ecx,esi
  0x0000000121966506:   jge    0x000000012196650c
  0x0000000121966508:   mov    edi,ecx
  0x000000012196650a:   jmp    0x00000001219664d4
  0x000000012196650c:   mov    edx,DWORD PTR [rsp+0x40]
  0x0000000121966510:   dec    edx
  0x0000000121966512:   mov    esi,0x80000000
  0x0000000121966517:   mov    r13d,DWORD PTR [rsp+0x40]
  0x000000012196651c:   cmp    r13d,edx
  0x000000012196651f:   cmovl  edx,esi
  0x0000000121966522:   cmp    ecx,edx
  0x0000000121966524:   jge    0x0000000121966988
  0x000000012196652a:   mov    ebp,0x7d0
  0x000000012196652f:   mov    esi,edx
  0x0000000121966531:   sub    esi,ecx
  0x0000000121966533:   cmp    edx,ecx
  0x0000000121966535:   cmovl  esi,r10d
  0x0000000121966539:   cmp    esi,0x7d0
  0x000000012196653f:   cmova  esi,ebp
  0x0000000121966542:   add    esi,ecx
  0x0000000121966544:   jmp    0x000000012196665a
  0x0000000121966549:   nop    DWORD PTR [rax+0x0]
  0x0000000121966550:   mov    r8d,0x1
  0x0000000121966556:   jmp    0x000000012196655d
  0x0000000121966558:   xor    ecx,ecx
  0x000000012196655a:   xor    r8d,r8d
  0x000000012196655d:   mov    rax,QWORD PTR [r15+0x348]    ; ImmutableOopMap {xmm0=NarrowOop xmm2=Oop [56]=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@288 (line 367)
  0x0000000121966564:   test   DWORD PTR [rax],eax          ;   {poll}
  0x0000000121966566:   test   r8d,r8d
  0x0000000121966569:   jne    0x00000001219665f4
  0x000000012196656f:   mov    ecx,r13d
  0x0000000121966572:   add    ecx,ebp
  0x0000000121966574:   mov    r10d,ecx
  0x0000000121966577:   add    r10d,0xffffffd1
  0x000000012196657b:   mov    eax,r10d
  0x000000012196657e:   xchg   ax,ax
  0x0000000121966580:   cmp    r9d,DWORD PTR [rsp+0x40]
  0x0000000121966585:   jge    0x00000001219667d3
  0x000000012196658b:   cmp    r9d,DWORD PTR [rsp]
  0x000000012196658f:   jae    0x0000000121966cc8
  0x0000000121966595:   vmovq  r10,xmm2
  0x000000012196659a:   movzx  ebp,BYTE PTR [r10+r14*1+0x11]
  0x00000001219665a0:   cmp    ebp,0x20
  0x00000001219665a3:   jg     0x0000000121966a64
  0x00000001219665a9:   mov    esi,0xffffff45
  0x00000001219665ae:   mov    r8d,DWORD PTR [rsp+0xc]
  0x00000001219665b3:   mov    DWORD PTR [rsp+0x8],r8d
  0x00000001219665b8:   vmovss DWORD PTR [rsp+0x10],xmm1
  0x00000001219665be:   vmovss DWORD PTR [rsp+0x14],xmm3
  0x00000001219665c4:   mov    QWORD PTR [rsp+0x18],rdx
  0x00000001219665c9:   mov    r10d,DWORD PTR [rsp+0x28]
  0x00000001219665ce:   mov    DWORD PTR [rsp+0x20],r10d
  0x00000001219665d3:   vmovss DWORD PTR [rsp+0x24],xmm5
  0x00000001219665d9:   mov    DWORD PTR [rsp+0x28],ebx
  0x00000001219665dd:   mov    DWORD PTR [rsp+0x2c],edi
  0x00000001219665e1:   mov    QWORD PTR [rsp+0x30],r11
  0x00000001219665e6:   mov    DWORD PTR [rsp+0x44],r9d
  0x00000001219665eb:   mov    DWORD PTR [rsp+0x48],eax
  0x00000001219665ef:   call   0x0000000119eb8000           ; ImmutableOopMap {[56]=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@16 (line 550)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@313 (line 376)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001219665f4:   mov    r8d,r9d
  0x00000001219665f7:   jmp    0x000000012196676d
  0x00000001219665fc:   nop    DWORD PTR [rax+0x0]
  0x0000000121966600:   cmp    r8d,0x2e
  0x0000000121966604:   jne    0x00000001219666da
  0x000000012196660a:   cmp    r9d,0xffffffff
  0x000000012196660e:   jne    0x0000000121966d2c
  0x0000000121966614:   mov    r13,rbx
  0x0000000121966617:   vmovd  xmm4,ecx
  0x000000012196661b:   nop    DWORD PTR [rax+rax*1+0x0]
  0x0000000121966620:   jmp    0x0000000121966689
  0x0000000121966625:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x0000000121966630:   movsxd r11,r8d
  0x0000000121966633:   mov    rbx,r13
  0x0000000121966636:   shl    rbx,1
  0x0000000121966639:   shl    r13,0x3
  0x000000012196663d:   add    rbx,r13
  0x0000000121966640:   add    rbx,r11
  0x0000000121966643:   add    rbx,0xffffffffffffffd0
  0x0000000121966647:   add    ecx,0x2
  0x000000012196664a:   cmp    ecx,esi
  0x000000012196664c:   jge    0x000000012196686d
  0x0000000121966652:   mov    r11d,r14d
  0x0000000121966655:   vmovd  r9d,xmm4
  0x000000012196665a:   movzx  r8d,BYTE PTR [rax+rcx*1+0x10]
  0x0000000121966660:   mov    r13d,r8d
  0x0000000121966663:   add    r13d,0xffffffd0
  0x0000000121966667:   cmp    r13d,0xa
  0x000000012196666b:   jae    0x00000001219665fc
  0x000000012196666d:   movsxd r8,r8d
  0x0000000121966670:   mov    r13,rbx
  0x0000000121966673:   shl    r13,1
  0x0000000121966676:   shl    rbx,0x3
  0x000000012196667a:   add    r13,rbx
  0x000000012196667d:   add    r13,r8
  0x0000000121966680:   add    r13,0xffffffffffffffd0
  0x0000000121966684:   vmovd  xmm4,r9d
  0x0000000121966689:   mov    r14d,r11d
  0x000000012196668c:   movsxd r11,ecx
  0x000000012196668f:   movzx  r8d,BYTE PTR [rax+r11*1+0x11]
  0x0000000121966695:   mov    edi,ecx
  0x0000000121966697:   inc    edi
  0x0000000121966699:   mov    r9d,r8d
  0x000000012196669c:   add    r9d,0xffffffd0
  0x00000001219666a0:   cmp    r9d,0xa
  0x00000001219666a4:   jb     0x0000000121966630
  0x00000001219666a6:   cmp    r8d,0x2e
  0x00000001219666aa:   jne    0x00000001219666cd
  0x00000001219666ac:   vmovd  r9d,xmm4
  0x00000001219666b1:   cmp    r9d,0xffffffff
  0x00000001219666b5:   jne    0x0000000121966d31
  0x00000001219666bb:   mov    rbx,r13
  0x00000001219666be:   vmovd  xmm4,edi
  0x00000001219666c2:   mov    r8d,0x2e
  0x00000001219666c8:   jmp    0x0000000121966647
  0x00000001219666cd:   mov    rbx,r13
  0x00000001219666d0:   mov    ecx,edi
  0x00000001219666d2:   mov    r11d,r14d
  0x00000001219666d5:   vmovd  r9d,xmm4
  0x00000001219666da:   mov    edi,ecx
  0x00000001219666dc:   mov    rdx,rbx
  0x00000001219666df:   nop
  0x00000001219666e0:   cmp    r9d,0xffffffff
  0x00000001219666e4:   je     0x0000000121966af0
  0x00000001219666ea:   mov    esi,edi
  0x00000001219666ec:   sub    esi,DWORD PTR [rsp+0x28]
  0x00000001219666f0:   mov    ebp,r9d
  0x00000001219666f3:   sub    ebp,edi
  0x00000001219666f5:   mov    ebx,esi
  0x00000001219666f7:   dec    ebx
  0x00000001219666f9:   mov    r10d,ebp
  0x00000001219666fc:   inc    r10d
  0x00000001219666ff:   nop
  0x0000000121966700:   cmp    r8d,0x65
  0x0000000121966704:   jne    0x0000000121966b34
  0x000000012196670a:   mov    ecx,edi
  0x000000012196670c:   mov    r8d,ecx
  0x000000012196670f:   inc    r8d
  0x0000000121966712:   cmp    r8d,DWORD PTR [rsp+0x40]
  0x0000000121966717:   jge    0x0000000121966b80
  0x000000012196671d:   data16 xchg ax,ax
  0x0000000121966720:   cmp    r8d,r11d
  0x0000000121966723:   jae    0x0000000121966bd4
  0x0000000121966729:   movsxd rcx,ecx
  0x000000012196672c:   movzx  ecx,BYTE PTR [rax+rcx*1+0x11]
  0x0000000121966731:   cmp    ecx,0x2d
  0x0000000121966734:   je     0x0000000121966c28
  0x000000012196673a:   nop    WORD PTR [rax+rax*1+0x0]
  0x0000000121966740:   cmp    ecx,0x2b
  0x0000000121966743:   je     0x0000000121966c78
  0x0000000121966749:   vmovd  xmm5,r9d
  0x000000012196674e:   vmovq  xmm2,rax
  0x0000000121966753:   mov    DWORD PTR [rsp],r11d
  0x0000000121966757:   mov    r9d,ecx
  0x000000012196675a:   add    r9d,0xffffffd0
  0x000000012196675e:   xchg   ax,ax
  0x0000000121966760:   cmp    r9d,0xa
  0x0000000121966764:   jae    0x0000000121966930
  0x000000012196676a:   xor    r11d,r11d
  0x000000012196676d:   cmp    r11,0x989680
  0x0000000121966774:   jge    0x0000000121966895
  0x000000012196677a:   movsxd rcx,ecx
  0x000000012196677d:   mov    r9d,r8d
  0x0000000121966780:   inc    r9d
  0x0000000121966783:   mov    r13,r11
  0x0000000121966786:   shl    r13,1
  0x0000000121966789:   movsxd r14,r8d
  0x000000012196678c:   shl    r11,0x3
  0x0000000121966790:   add    r13,r11
  0x0000000121966793:   add    r13,rcx
  0x0000000121966796:   mov    r11,r13
  0x0000000121966799:   add    r11,0xffffffffffffffd0
  0x000000012196679d:   data16 xchg ax,ax
  0x00000001219667a0:   cmp    r9d,DWORD PTR [rsp+0x40]
  0x00000001219667a5:   jge    0x0000000121966558
  0x00000001219667ab:   cmp    r9d,DWORD PTR [rsp]
  0x00000001219667af:   jae    0x00000001219669fe
  0x00000001219667b5:   vmovq  r8,xmm2
  0x00000001219667ba:   movzx  ecx,BYTE PTR [r8+r14*1+0x11]
  0x00000001219667c0:   mov    eax,ecx
  0x00000001219667c2:   add    eax,0xffffffd0
  0x00000001219667c5:   cmp    eax,0xa
  0x00000001219667c8:   jae    0x000000012196655a
  0x00000001219667ce:   jmp    0x0000000121966550
  0x00000001219667d3:   vmovd  r10d,xmm3
  0x00000001219667d8:   test   r10d,r10d
  0x00000001219667db:   nop    DWORD PTR [rax+rax*1+0x0]
  0x00000001219667e0:   jne    0x0000000121966d88
  0x00000001219667e6:   cmp    esi,0x1
  0x00000001219667e9:   je     0x0000000121966dd8
  0x00000001219667ef:   cmp    ebx,0x13
  0x00000001219667f2:   jg     0x0000000121966e24
  0x00000001219667f8:   test   rdx,rdx
  0x00000001219667fb:   nop    DWORD PTR [rax+rax*1+0x0]
  0x0000000121966800:   je     0x0000000121966e70
  0x0000000121966806:   add    ecx,0x116
  0x000000012196680c:   cmp    ecx,0x27a
  0x0000000121966812:   jae    0x0000000121966eb8
  0x0000000121966818:   vmovd  esi,xmm1
  0x000000012196681c:   mov    ecx,eax
  0x000000012196681e:   mov    ebp,DWORD PTR [rsp+0x40]
  0x0000000121966822:   nop
  0x0000000121966823:   call   0x0000000121963d20           ; ImmutableOopMap {[56]=Oop }
                                                            ;*invokestatic tryDecToDoubleWithFastAlgorithm {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleMath::decFloatLiteralToDouble@131 (line 763)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@463 (line 404)
                                                            ;   {static_call}
  0x0000000121966828:   vucomisd xmm0,xmm0
  0x000000012196682c:   jp     0x0000000121966d68
  0x0000000121966832:   jne    0x0000000121966d68
  0x0000000121966838:   add    rsp,0x60
  0x000000012196683c:   pop    rbp
  0x000000012196683d:   cmp    rsp,QWORD PTR [r15+0x340]    ;   {poll_return}
  0x0000000121966844:   ja     0x0000000121966f35
  0x000000012196684a:   ret    
  0x000000012196684b:   cmp    r8d,0x2e
  0x000000012196684f:   jne    0x00000001219666dc
  0x0000000121966855:   cmp    r9d,0xffffffff
  0x0000000121966859:   jne    0x0000000121966ee0
  0x000000012196685f:   mov    r8d,0x2e
  0x0000000121966865:   mov    r9d,edi
  0x0000000121966868:   jmp    0x0000000121966500
  0x000000012196686d:   mov    r9,QWORD PTR [r15+0x348]
  0x0000000121966874:   mov    r11d,edi
  0x0000000121966877:   inc    r11d                         ; ImmutableOopMap {rax=Oop xmm0=NarrowOop [56]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@82 (line 325)
  0x000000012196687a:   test   DWORD PTR [r9],eax           ;   {poll}
  0x000000012196687d:   data16 xchg ax,ax
  0x0000000121966880:   cmp    ecx,edx
  0x0000000121966882:   jge    0x0000000121966980
  0x0000000121966888:   mov    r11d,r14d
  0x000000012196688b:   vmovd  r9d,xmm4
  0x0000000121966890:   jmp    0x000000012196652f
  0x0000000121966895:   mov    esi,0xffffff45
  0x000000012196689a:   mov    r9d,0x989680
  0x00000001219668a0:   cmp    r11,r9
  0x00000001219668a3:   mov    ebp,0xffffffff
  0x00000001219668a8:   jl     0x00000001219668b2
  0x00000001219668aa:   setne  bpl
  0x00000001219668ae:   movzx  ebp,bpl
  0x00000001219668b2:   mov    r9,QWORD PTR [rsp+0x38]
  0x00000001219668b7:   mov    QWORD PTR [rsp],r9
  0x00000001219668bb:   mov    DWORD PTR [rsp+0x8],r8d
  0x00000001219668c0:   mov    r9d,DWORD PTR [rsp+0x40]
  0x00000001219668c5:   mov    DWORD PTR [rsp+0x10],r9d
  0x00000001219668ca:   vmovss DWORD PTR [rsp+0x14],xmm1
  0x00000001219668d0:   vmovss DWORD PTR [rsp+0x18],xmm3
  0x00000001219668d6:   mov    QWORD PTR [rsp+0x20],rdx
  0x00000001219668db:   mov    DWORD PTR [rsp+0x1c],r10d
  0x00000001219668e0:   vmovss DWORD PTR [rsp+0x2c],xmm5
  0x00000001219668e6:   mov    DWORD PTR [rsp+0x30],ebx
  0x00000001219668ea:   mov    DWORD PTR [rsp+0x34],ecx
  0x00000001219668ee:   mov    DWORD PTR [rsp+0x38],edi
  0x00000001219668f2:   mov    QWORD PTR [rsp+0x40],r11
  0x00000001219668f7:   call   0x0000000119eb8000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@243 (line 363)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001219668fc:   mov    esi,0xffffff76
  0x0000000121966901:   mov    r11d,DWORD PTR [rsp+0xc]
  0x0000000121966906:   mov    DWORD PTR [rsp],r11d
  0x000000012196690a:   mov    r8d,DWORD PTR [rsp+0x40]
  0x000000012196690f:   vmovss DWORD PTR [rsp+0x8],xmm1
  0x0000000121966915:   mov    DWORD PTR [rsp+0xc],edi
  0x0000000121966919:   mov    DWORD PTR [rsp+0x10],edx
  0x000000012196691d:   mov    DWORD PTR [rsp+0x14],edx
  0x0000000121966921:   mov    DWORD PTR [rsp+0x18],r8d
  0x0000000121966926:   mov    QWORD PTR [rsp+0x20],r10
  0x000000012196692b:   call   0x0000000119eb8000           ; ImmutableOopMap {[32]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@17 (line 325)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121966930:   mov    esi,0xffffff45
  0x0000000121966935:   mov    rbp,QWORD PTR [rsp+0x38]
  0x000000012196693a:   mov    DWORD PTR [rsp],r8d
  0x000000012196693e:   mov    r11d,DWORD PTR [rsp+0xc]
  0x0000000121966943:   mov    DWORD PTR [rsp+0x4],r11d
  0x0000000121966948:   vmovss DWORD PTR [rsp+0xc],xmm1
  0x000000012196694e:   vmovss DWORD PTR [rsp+0x10],xmm3
  0x0000000121966954:   mov    QWORD PTR [rsp+0x18],rdx
  0x0000000121966959:   mov    DWORD PTR [rsp+0x14],r10d
  0x000000012196695e:   mov    r11d,DWORD PTR [rsp+0x28]
  0x0000000121966963:   mov    DWORD PTR [rsp+0x20],r11d
  0x0000000121966968:   vmovss DWORD PTR [rsp+0x24],xmm5
  0x000000012196696e:   mov    DWORD PTR [rsp+0x28],ebx
  0x0000000121966972:   mov    DWORD PTR [rsp+0x2c],ecx
  0x0000000121966976:   mov    DWORD PTR [rsp+0x30],edi
  0x000000012196697a:   nop
  0x000000012196697b:   call   0x0000000119eb8000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@227 (line 358)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121966980:   mov    r11d,r14d
  0x0000000121966983:   vmovd  r9d,xmm4
  0x0000000121966988:   cmp    ecx,DWORD PTR [rsp+0x40]
  0x000000012196698c:   jge    0x0000000121966ee8
  0x0000000121966992:   jmp    0x00000001219669be
  0x0000000121966994:   movsxd r10,r8d
  0x0000000121966997:   mov    rbp,rbx
  0x000000012196699a:   shl    rbp,1
  0x000000012196699d:   shl    rbx,0x3
  0x00000001219669a1:   add    rbp,rbx
  0x00000001219669a4:   add    rbp,r10
  0x00000001219669a7:   add    rbp,0xffffffffffffffd0
  0x00000001219669ab:   mov    edi,ecx
  0x00000001219669ad:   inc    edi
  0x00000001219669af:   cmp    edi,DWORD PTR [rsp+0x40]
  0x00000001219669b3:   jge    0x0000000121966eed
  0x00000001219669b9:   mov    rbx,rbp
  0x00000001219669bc:   mov    ecx,edi
  0x00000001219669be:   movzx  r8d,BYTE PTR [rax+rcx*1+0x10]
  0x00000001219669c4:   mov    r10d,r8d
  0x00000001219669c7:   add    r10d,0xffffffd0
  0x00000001219669cb:   cmp    r10d,0xa
  0x00000001219669cf:   jb     0x0000000121966994
  0x00000001219669d1:   cmp    r8d,0x2e
  0x00000001219669d5:   jne    0x00000001219669f4
  0x00000001219669d7:   cmp    r9d,0xffffffff
  0x00000001219669db:   nop    DWORD PTR [rax+rax*1+0x0]
  0x00000001219669e0:   jne    0x0000000121966d36
  0x00000001219669e6:   mov    rbp,rbx
  0x00000001219669e9:   mov    r8d,0x2e
  0x00000001219669ef:   mov    r9d,ecx
  0x00000001219669f2:   jmp    0x00000001219669ab
  0x00000001219669f4:   mov    rdx,rbx
  0x00000001219669f7:   mov    edi,ecx
  0x00000001219669f9:   jmp    0x00000001219666df
  0x00000001219669fe:   mov    esi,0xffffffe5
  0x0000000121966a03:   mov    rbp,QWORD PTR [rsp+0x38]
  0x0000000121966a08:   mov    r8d,DWORD PTR [rsp+0xc]
  0x0000000121966a0d:   mov    DWORD PTR [rsp+0x4],r8d
  0x0000000121966a12:   mov    r8d,DWORD PTR [rsp+0x40]
  0x0000000121966a17:   mov    DWORD PTR [rsp+0x8],r8d
  0x0000000121966a1c:   vmovss DWORD PTR [rsp+0xc],xmm1
  0x0000000121966a22:   vmovss DWORD PTR [rsp+0x10],xmm3
  0x0000000121966a28:   mov    QWORD PTR [rsp+0x18],rdx
  0x0000000121966a2d:   mov    DWORD PTR [rsp+0x14],r10d
  0x0000000121966a32:   mov    r10d,DWORD PTR [rsp+0x28]
  0x0000000121966a37:   mov    DWORD PTR [rsp+0x20],r10d
  0x0000000121966a3c:   vmovss DWORD PTR [rsp+0x24],xmm5
  0x0000000121966a42:   mov    DWORD PTR [rsp+0x28],ebx
  0x0000000121966a46:   mov    DWORD PTR [rsp+0x2c],edi
  0x0000000121966a4a:   mov    QWORD PTR [rsp+0x30],r11
  0x0000000121966a4f:   mov    DWORD PTR [rsp+0x38],r9d
  0x0000000121966a54:   mov    DWORD PTR [rsp+0x3c],r9d
  0x0000000121966a59:   vmovss DWORD PTR [rsp+0x40],xmm0
  0x0000000121966a5f:   call   0x0000000119eb8000           ; ImmutableOopMap {rbp=Oop [64]=NarrowOop }
                                                            ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.StringLatin1::charAt@1 (line 47)
                                                            ; - java.lang.String::charAt@12 (line 1512)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@272 (line 366)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121966a64:   mov    esi,0xffffff45
  0x0000000121966a69:   mov    rbp,QWORD PTR [rsp+0x38]
  0x0000000121966a6e:   mov    r8d,DWORD PTR [rsp+0xc]
  0x0000000121966a73:   mov    DWORD PTR [rsp+0x4],r8d
  0x0000000121966a78:   mov    r10d,DWORD PTR [rsp+0x40]
  0x0000000121966a7d:   vmovss DWORD PTR [rsp+0xc],xmm1
  0x0000000121966a83:   vmovss DWORD PTR [rsp+0x10],xmm3
  0x0000000121966a89:   mov    QWORD PTR [rsp+0x18],rdx
  0x0000000121966a8e:   mov    r8d,DWORD PTR [rsp+0x28]
  0x0000000121966a93:   mov    DWORD PTR [rsp+0x14],r8d
  0x0000000121966a98:   vmovss DWORD PTR [rsp+0x20],xmm5
  0x0000000121966a9e:   mov    DWORD PTR [rsp+0x24],ebx
  0x0000000121966aa2:   mov    DWORD PTR [rsp+0x28],edi
  0x0000000121966aa6:   mov    QWORD PTR [rsp+0x30],r11
  0x0000000121966aab:   mov    DWORD PTR [rsp+0x2c],r9d
  0x0000000121966ab0:   mov    DWORD PTR [rsp+0x38],r10d
  0x0000000121966ab5:   mov    DWORD PTR [rsp+0x3c],eax
  0x0000000121966ab9:   xchg   ax,ax
  0x0000000121966abb:   call   0x0000000119eb8000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@319 (line 377)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121966ac0:   mov    esi,0xffffff45
  0x0000000121966ac5:   mov    DWORD PTR [rsp],ecx
  0x0000000121966ac8:   mov    r11d,DWORD PTR [rsp+0x40]
  0x0000000121966acd:   mov    DWORD PTR [rsp+0x8],r9d
  0x0000000121966ad2:   mov    DWORD PTR [rsp+0xc],edi
  0x0000000121966ad6:   mov    DWORD PTR [rsp+0x10],edx
  0x0000000121966ada:   mov    DWORD PTR [rsp+0x14],edx
  0x0000000121966ade:   mov    r8d,r11d
  0x0000000121966ae1:   mov    DWORD PTR [rsp+0x18],r8d
  0x0000000121966ae6:   mov    QWORD PTR [rsp+0x20],r10
  0x0000000121966aeb:   call   0x0000000119eb8000           ; ImmutableOopMap {[32]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@17 (line 325)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121966af0:   mov    esi,0xffffff45
  0x0000000121966af5:   mov    rbp,QWORD PTR [rsp+0x38]
  0x0000000121966afa:   mov    r10d,DWORD PTR [rsp+0xc]
  0x0000000121966aff:   mov    DWORD PTR [rsp+0x4],r10d
  0x0000000121966b04:   vmovss DWORD PTR [rsp+0xc],xmm1
  0x0000000121966b0a:   vmovss DWORD PTR [rsp+0x10],xmm3
  0x0000000121966b10:   mov    QWORD PTR [rsp+0x18],rdx
  0x0000000121966b15:   mov    r10d,DWORD PTR [rsp+0x28]
  0x0000000121966b1a:   mov    DWORD PTR [rsp+0x14],r10d
  0x0000000121966b1f:   mov    DWORD PTR [rsp+0x24],r8d
  0x0000000121966b24:   mov    DWORD PTR [rsp+0x28],edi
  0x0000000121966b28:   mov    DWORD PTR [rsp+0x2c],r9d
  0x0000000121966b2d:   xchg   ax,ax
  0x0000000121966b2f:   call   0x0000000119eb8000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@91 (line 340)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121966b34:   mov    esi,0xffffff45
  0x0000000121966b39:   mov    rbp,QWORD PTR [rsp+0x38]
  0x0000000121966b3e:   mov    ecx,DWORD PTR [rsp+0xc]
  0x0000000121966b42:   mov    DWORD PTR [rsp+0x4],ecx
  0x0000000121966b46:   vmovss DWORD PTR [rsp+0xc],xmm1
  0x0000000121966b4c:   vmovss DWORD PTR [rsp+0x10],xmm3
  0x0000000121966b52:   mov    QWORD PTR [rsp+0x18],rdx
  0x0000000121966b57:   mov    DWORD PTR [rsp+0x14],r10d
  0x0000000121966b5c:   mov    r10d,DWORD PTR [rsp+0x28]
  0x0000000121966b61:   mov    DWORD PTR [rsp+0x20],r10d
  0x0000000121966b66:   mov    DWORD PTR [rsp+0x24],r9d
  0x0000000121966b6b:   mov    DWORD PTR [rsp+0x28],ebx
  0x0000000121966b6f:   mov    DWORD PTR [rsp+0x30],edi
  0x0000000121966b73:   mov    DWORD PTR [rsp+0x34],r8d
  0x0000000121966b78:   data16 xchg ax,ax
  0x0000000121966b7b:   call   0x0000000119eb8000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@132 (line 351)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121966b80:   mov    esi,0xffffff45
  0x0000000121966b85:   mov    rbp,QWORD PTR [rsp+0x38]
  0x0000000121966b8a:   mov    r11d,DWORD PTR [rsp+0xc]
  0x0000000121966b8f:   mov    DWORD PTR [rsp+0x4],r11d
  0x0000000121966b94:   mov    ecx,DWORD PTR [rsp+0x40]
  0x0000000121966b98:   vmovss DWORD PTR [rsp+0xc],xmm1
  0x0000000121966b9e:   vmovss DWORD PTR [rsp+0x10],xmm3
  0x0000000121966ba4:   mov    QWORD PTR [rsp+0x18],rdx
  0x0000000121966ba9:   mov    DWORD PTR [rsp+0x14],r10d
  0x0000000121966bae:   mov    r10d,DWORD PTR [rsp+0x28]
  0x0000000121966bb3:   mov    DWORD PTR [rsp+0x20],r10d
  0x0000000121966bb8:   mov    DWORD PTR [rsp+0x24],r9d
  0x0000000121966bbd:   mov    DWORD PTR [rsp+0x28],ebx
  0x0000000121966bc1:   mov    DWORD PTR [rsp+0x2c],edi
  0x0000000121966bc5:   mov    DWORD PTR [rsp+0x30],r8d
  0x0000000121966bca:   mov    DWORD PTR [rsp+0x34],ecx
  0x0000000121966bce:   nop
  0x0000000121966bcf:   call   0x0000000119eb8000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@159 (line 353)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121966bd4:   mov    esi,0xffffffe5
  0x0000000121966bd9:   mov    rbp,QWORD PTR [rsp+0x38]
  0x0000000121966bde:   mov    ecx,DWORD PTR [rsp+0xc]
  0x0000000121966be2:   mov    DWORD PTR [rsp+0x4],ecx
  0x0000000121966be6:   vmovss DWORD PTR [rsp+0xc],xmm1
  0x0000000121966bec:   vmovss DWORD PTR [rsp+0x10],xmm3
  0x0000000121966bf2:   mov    QWORD PTR [rsp+0x18],rdx
  0x0000000121966bf7:   mov    DWORD PTR [rsp+0x14],r10d
  0x0000000121966bfc:   mov    r11d,DWORD PTR [rsp+0x28]
  0x0000000121966c01:   mov    DWORD PTR [rsp+0x20],r11d
  0x0000000121966c06:   mov    DWORD PTR [rsp+0x24],r9d
  0x0000000121966c0b:   mov    DWORD PTR [rsp+0x28],ebx
  0x0000000121966c0f:   mov    DWORD PTR [rsp+0x2c],edi
  0x0000000121966c13:   mov    DWORD PTR [rsp+0x30],r8d
  0x0000000121966c18:   mov    DWORD PTR [rsp+0x34],r8d
  0x0000000121966c1d:   vmovss DWORD PTR [rsp+0x38],xmm0
  0x0000000121966c23:   call   0x0000000119eb8000           ; ImmutableOopMap {rbp=Oop [56]=NarrowOop }
                                                            ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.StringLatin1::charAt@1 (line 47)
                                                            ; - java.lang.String::charAt@12 (line 1512)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@164 (line 353)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121966c28:   mov    esi,0xffffff45
  0x0000000121966c2d:   mov    rbp,QWORD PTR [rsp+0x38]
  0x0000000121966c32:   mov    DWORD PTR [rsp],r8d
  0x0000000121966c36:   mov    r11d,DWORD PTR [rsp+0xc]
  0x0000000121966c3b:   mov    DWORD PTR [rsp+0x4],r11d
  0x0000000121966c40:   vmovss DWORD PTR [rsp+0xc],xmm1
  0x0000000121966c46:   vmovss DWORD PTR [rsp+0x10],xmm3
  0x0000000121966c4c:   mov    QWORD PTR [rsp+0x18],rdx
  0x0000000121966c51:   mov    DWORD PTR [rsp+0x14],r10d
  0x0000000121966c56:   mov    r10d,DWORD PTR [rsp+0x28]
  0x0000000121966c5b:   mov    DWORD PTR [rsp+0x20],r10d
  0x0000000121966c60:   mov    DWORD PTR [rsp+0x24],r9d
  0x0000000121966c65:   mov    DWORD PTR [rsp+0x28],ebx
  0x0000000121966c69:   mov    DWORD PTR [rsp+0x30],edi
  0x0000000121966c6d:   mov    DWORD PTR [rsp+0x34],ecx
  0x0000000121966c71:   xchg   ax,ax
  0x0000000121966c73:   call   0x0000000119eb8000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@179 (line 354)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121966c78:   mov    esi,0xffffff45
  0x0000000121966c7d:   mov    rbp,QWORD PTR [rsp+0x38]
  0x0000000121966c82:   mov    DWORD PTR [rsp],r8d
  0x0000000121966c86:   mov    r8d,DWORD PTR [rsp+0xc]
  0x0000000121966c8b:   mov    DWORD PTR [rsp+0x4],r8d
  0x0000000121966c90:   vmovss DWORD PTR [rsp+0xc],xmm1
  0x0000000121966c96:   vmovss DWORD PTR [rsp+0x10],xmm3
  0x0000000121966c9c:   mov    QWORD PTR [rsp+0x18],rdx
  0x0000000121966ca1:   mov    DWORD PTR [rsp+0x14],r10d
  0x0000000121966ca6:   mov    r11d,DWORD PTR [rsp+0x28]
  0x0000000121966cab:   mov    DWORD PTR [rsp+0x20],r11d
  0x0000000121966cb0:   mov    DWORD PTR [rsp+0x24],r9d
  0x0000000121966cb5:   mov    DWORD PTR [rsp+0x28],ebx
  0x0000000121966cb9:   mov    DWORD PTR [rsp+0x30],edi
  0x0000000121966cbd:   mov    DWORD PTR [rsp+0x34],ecx
  0x0000000121966cc1:   xchg   ax,ax
  0x0000000121966cc3:   call   0x0000000119eb8000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@198 (line 355)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121966cc8:   mov    esi,0xffffffe5
  0x0000000121966ccd:   mov    rbp,QWORD PTR [rsp+0x38]
  0x0000000121966cd2:   mov    r8d,DWORD PTR [rsp+0xc]
  0x0000000121966cd7:   mov    DWORD PTR [rsp],r8d
  0x0000000121966cdb:   mov    r10d,DWORD PTR [rsp+0x40]
  0x0000000121966ce0:   mov    DWORD PTR [rsp+0x4],r10d
  0x0000000121966ce5:   vmovss DWORD PTR [rsp+0x8],xmm1
  0x0000000121966ceb:   vmovss DWORD PTR [rsp+0xc],xmm3
  0x0000000121966cf1:   mov    QWORD PTR [rsp+0x10],rdx
  0x0000000121966cf6:   mov    r10d,DWORD PTR [rsp+0x28]
  0x0000000121966cfb:   mov    DWORD PTR [rsp+0x18],r10d
  0x0000000121966d00:   vmovss DWORD PTR [rsp+0x1c],xmm5
  0x0000000121966d06:   mov    DWORD PTR [rsp+0x20],ebx
  0x0000000121966d0a:   mov    DWORD PTR [rsp+0x24],edi
  0x0000000121966d0e:   mov    QWORD PTR [rsp+0x28],r11
  0x0000000121966d13:   mov    DWORD PTR [rsp+0x40],r9d
  0x0000000121966d18:   mov    DWORD PTR [rsp+0x44],r9d
  0x0000000121966d1d:   mov    DWORD PTR [rsp+0x48],eax
  0x0000000121966d21:   vmovss DWORD PTR [rsp+0x4c],xmm0
  0x0000000121966d27:   call   0x0000000119eb8000           ; ImmutableOopMap {rbp=Oop [76]=NarrowOop }
                                                            ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.StringLatin1::charAt@1 (line 47)
                                                            ; - java.lang.String::charAt@12 (line 1512)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::skipWhitespace@9 (line 550)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@313 (line 376)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121966d2c:   mov    r13,rbx
  0x0000000121966d2f:   mov    edi,ecx
  0x0000000121966d31:   mov    rbx,r13
  0x0000000121966d34:   mov    ecx,edi
  0x0000000121966d36:   mov    esi,0xffffff45
  0x0000000121966d3b:   mov    rbp,QWORD PTR [rsp+0x38]
  0x0000000121966d40:   mov    DWORD PTR [rsp],ecx
  0x0000000121966d43:   mov    r11d,DWORD PTR [rsp+0xc]
  0x0000000121966d48:   mov    DWORD PTR [rsp+0x4],r11d
  0x0000000121966d4d:   vmovss DWORD PTR [rsp+0xc],xmm1
  0x0000000121966d53:   vmovss DWORD PTR [rsp+0x10],xmm3
  0x0000000121966d59:   mov    QWORD PTR [rsp+0x18],rbx
  0x0000000121966d5e:   mov    DWORD PTR [rsp+0x20],r9d
  0x0000000121966d63:   call   0x0000000119eb8000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@66 (line 331)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121966d68:   mov    esi,0xffffff45
  0x0000000121966d6d:   mov    rbp,QWORD PTR [rsp+0x38]
  0x0000000121966d72:   mov    r11d,DWORD PTR [rsp+0xc]
  0x0000000121966d77:   mov    DWORD PTR [rsp],r11d
  0x0000000121966d7b:   vmovsd QWORD PTR [rsp+0x8],xmm0
  0x0000000121966d81:   xchg   ax,ax
  0x0000000121966d83:   call   0x0000000119eb8000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@473 (line 405)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121966d88:   mov    esi,0xffffff45
  0x0000000121966d8d:   mov    rbp,QWORD PTR [rsp+0x38]
  0x0000000121966d92:   mov    DWORD PTR [rsp],r9d
  0x0000000121966d96:   mov    r9d,DWORD PTR [rsp+0xc]
  0x0000000121966d9b:   mov    DWORD PTR [rsp+0x4],r9d
  0x0000000121966da0:   vmovss DWORD PTR [rsp+0xc],xmm1
  0x0000000121966da6:   mov    QWORD PTR [rsp+0x10],rdx
  0x0000000121966dab:   mov    r8d,DWORD PTR [rsp+0x28]
  0x0000000121966db0:   mov    DWORD PTR [rsp+0x18],r8d
  0x0000000121966db5:   vmovss DWORD PTR [rsp+0x1c],xmm5
  0x0000000121966dbb:   mov    DWORD PTR [rsp+0x20],ebx
  0x0000000121966dbf:   mov    DWORD PTR [rsp+0x24],edi
  0x0000000121966dc3:   mov    QWORD PTR [rsp+0x28],r11
  0x0000000121966dc8:   vmovss DWORD PTR [rsp+0x30],xmm3
  0x0000000121966dce:   mov    DWORD PTR [rsp+0x34],eax
  0x0000000121966dd2:   nop
  0x0000000121966dd3:   call   0x0000000119eb8000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@324 (line 377)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121966dd8:   mov    esi,0xffffff45
  0x0000000121966ddd:   mov    rbp,QWORD PTR [rsp+0x38]
  0x0000000121966de2:   mov    DWORD PTR [rsp],r9d
  0x0000000121966de6:   mov    r8d,DWORD PTR [rsp+0xc]
  0x0000000121966deb:   mov    DWORD PTR [rsp+0x4],r8d
  0x0000000121966df0:   vmovss DWORD PTR [rsp+0xc],xmm1
  0x0000000121966df6:   mov    QWORD PTR [rsp+0x10],rdx
  0x0000000121966dfb:   mov    r10d,DWORD PTR [rsp+0x28]
  0x0000000121966e00:   mov    DWORD PTR [rsp+0x18],r10d
  0x0000000121966e05:   vmovss DWORD PTR [rsp+0x1c],xmm5
  0x0000000121966e0b:   mov    DWORD PTR [rsp+0x24],edi
  0x0000000121966e0f:   mov    QWORD PTR [rsp+0x28],r11
  0x0000000121966e14:   mov    DWORD PTR [rsp+0x30],ebx
  0x0000000121966e18:   mov    DWORD PTR [rsp+0x34],eax
  0x0000000121966e1c:   data16 xchg ax,ax
  0x0000000121966e1f:   call   0x0000000119eb8000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@329 (line 377)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121966e24:   mov    esi,0xffffff45
  0x0000000121966e29:   mov    rbp,QWORD PTR [rsp+0x38]
  0x0000000121966e2e:   mov    DWORD PTR [rsp],r9d
  0x0000000121966e32:   mov    r10d,DWORD PTR [rsp+0xc]
  0x0000000121966e37:   mov    DWORD PTR [rsp+0x4],r10d
  0x0000000121966e3c:   vmovss DWORD PTR [rsp+0xc],xmm1
  0x0000000121966e42:   mov    QWORD PTR [rsp+0x10],rdx
  0x0000000121966e47:   mov    r8d,DWORD PTR [rsp+0x28]
  0x0000000121966e4c:   mov    DWORD PTR [rsp+0x18],r8d
  0x0000000121966e51:   vmovss DWORD PTR [rsp+0x1c],xmm5
  0x0000000121966e57:   mov    DWORD PTR [rsp+0x20],edi
  0x0000000121966e5b:   mov    QWORD PTR [rsp+0x28],r11
  0x0000000121966e60:   mov    DWORD PTR [rsp+0x24],ebx
  0x0000000121966e64:   mov    DWORD PTR [rsp+0x30],eax
  0x0000000121966e68:   data16 xchg ax,ax
  0x0000000121966e6b:   call   0x0000000119eb8000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@359 (line 386)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121966e70:   xor    r10d,r10d
  0x0000000121966e73:   cmp    rdx,r10
  0x0000000121966e76:   mov    ebp,0xffffffff
  0x0000000121966e7b:   jl     0x0000000121966e85
  0x0000000121966e7d:   setne  bpl
  0x0000000121966e81:   movzx  ebp,bpl
  0x0000000121966e85:   mov    esi,0xffffff45
  0x0000000121966e8a:   mov    r8d,DWORD PTR [rsp+0xc]
  0x0000000121966e8f:   mov    DWORD PTR [rsp+0x8],r8d
  0x0000000121966e94:   mov    DWORD PTR [rsp+0x10],r9d
  0x0000000121966e99:   vmovss DWORD PTR [rsp+0x14],xmm1
  0x0000000121966e9f:   mov    QWORD PTR [rsp+0x18],rdx
  0x0000000121966ea4:   vmovss DWORD PTR [rsp+0x20],xmm5
  0x0000000121966eaa:   mov    QWORD PTR [rsp+0x28],r11
  0x0000000121966eaf:   mov    DWORD PTR [rsp+0x24],eax
  0x0000000121966eb3:   call   0x0000000119eb8000           ; ImmutableOopMap {[56]=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleMath::decFloatLiteralToDouble@3 (line 738)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@463 (line 404)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121966eb8:   mov    esi,0xffffff3d
  0x0000000121966ebd:   mov    rbp,QWORD PTR [rsp+0x38]
  0x0000000121966ec2:   mov    r10d,DWORD PTR [rsp+0xc]
  0x0000000121966ec7:   mov    DWORD PTR [rsp],r10d
  0x0000000121966ecb:   vmovss DWORD PTR [rsp+0x8],xmm1
  0x0000000121966ed1:   mov    QWORD PTR [rsp+0x10],rdx
  0x0000000121966ed6:   mov    DWORD PTR [rsp+0x18],eax
  0x0000000121966eda:   nop
  0x0000000121966edb:   call   0x0000000119eb8000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpgt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleMath::decFloatLiteralToDouble@116 (line 762)
                                                            ; - ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@463 (line 404)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121966ee0:   mov    r13,rbx
  0x0000000121966ee3:   jmp    0x0000000121966d31
  0x0000000121966ee8:   mov    rbp,rbx
  0x0000000121966eeb:   mov    ecx,edi
  0x0000000121966eed:   inc    ecx
  0x0000000121966eef:   mov    esi,0xffffff45
  0x0000000121966ef4:   mov    r10d,DWORD PTR [rsp+0x40]
  0x0000000121966ef9:   vmovss DWORD PTR [rsp+0x14],xmm1
  0x0000000121966eff:   vmovss DWORD PTR [rsp+0x18],xmm3
  0x0000000121966f05:   mov    r11d,DWORD PTR [rsp+0x28]
  0x0000000121966f0a:   mov    DWORD PTR [rsp+0x1c],r11d
  0x0000000121966f0f:   mov    DWORD PTR [rsp+0x20],r9d
  0x0000000121966f14:   mov    DWORD PTR [rsp+0x24],r8d
  0x0000000121966f19:   mov    DWORD PTR [rsp+0x28],ecx
  0x0000000121966f1d:   mov    DWORD PTR [rsp+0x2c],r10d
  0x0000000121966f22:   nop
  0x0000000121966f23:   call   0x0000000119eb8000           ; ImmutableOopMap {[56]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) ch.randelshofer.fastdoubleparser.FastDoubleParser::parseRestOfDecimalFloatLiteral@17 (line 325)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000000121966f28:   mov    rsi,rax
  0x0000000121966f2b:   add    rsp,0x60
  0x0000000121966f2f:   pop    rbp
  0x0000000121966f30:   jmp    0x0000000119f67700           ;   {runtime_call _rethrow_Java}
  0x0000000121966f35:   movabs r10,0x12196683d              ;   {internal_word}
  0x0000000121966f3f:   mov    QWORD PTR [r15+0x358],r10
  0x0000000121966f46:   jmp    0x0000000119eb9100           ;   {runtime_call SafepointBlob}
  0x0000000121966f4b:   hlt    
  0x0000000121966f4c:   hlt    
  0x0000000121966f4d:   hlt    
  0x0000000121966f4e:   hlt    
  0x0000000121966f4f:   hlt    
  0x0000000121966f50:   hlt    
  0x0000000121966f51:   hlt    
  0x0000000121966f52:   hlt    
  0x0000000121966f53:   hlt    
  0x0000000121966f54:   hlt    
  0x0000000121966f55:   hlt    
  0x0000000121966f56:   hlt    
  0x0000000121966f57:   hlt    
  0x0000000121966f58:   hlt    
  0x0000000121966f59:   hlt    
  0x0000000121966f5a:   hlt    
  0x0000000121966f5b:   hlt    
  0x0000000121966f5c:   hlt    
  0x0000000121966f5d:   hlt    
  0x0000000121966f5e:   hlt    
  0x0000000121966f5f:   hlt    
[Stub Code]
  0x0000000121966f60:   movabs rbx,0x0                      ;   {no_reloc}
  0x0000000121966f6a:   jmp    0x0000000121966f6a           ;   {runtime_call const_jargs+-267182177}
[Exception Handler]
  0x0000000121966f6f:   jmp    0x0000000119f57880           ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000121966f74:   call   0x0000000121966f79
  0x0000000121966f79:   sub    QWORD PTR [rsp],0x5
  0x0000000121966f7e:   jmp    0x0000000119eb83a0           ;   {runtime_call DeoptimizationBlob}
  0x0000000121966f83:   hlt    
  0x0000000121966f84:   hlt    
  0x0000000121966f85:   hlt    
  0x0000000121966f86:   hlt    
  0x0000000121966f87:   hlt    
--------------------------------------------------------------------------------

Process finished with exit code 130 (interrupted by signal 2: SIGINT)
